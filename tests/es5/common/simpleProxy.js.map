{"version":3,"names":[],"mappings":"","sources":["common/simpleProxy.js"],"sourcesContent":["\"use strict\";\r\n/*global describe,it*/\r\nlet wf4node = require(\"../../../\");\r\nlet SimpleProxy = wf4node.common.SimpleProxy;\r\n\r\nlet assert = require(\"better-assert\");\r\nlet _ = require(\"lodash\");\r\n\r\ndescribe(\"SimpleProxy\", function() {\r\n    it(\"should work\", function() {\r\n        let backend = {\r\n            name: \"Gabor\",\r\n            getKeys: function(proxy) {\r\n                return _.keys(this);\r\n            },\r\n            getValue: function(proxy, name) {\r\n                let v = this[name];\r\n                if (_.isUndefined(v)) {\r\n                    throw new Error(`${name} doesn't exists.`);\r\n                }\r\n                return v;\r\n            },\r\n            setValue: function(proxy, name, value) {\r\n                return this[name] = value;\r\n            }\r\n        };\r\n        let obj = new SimpleProxy(backend);\r\n\r\n        obj.foo = \"bar\";\r\n\r\n        assert(obj.foo === \"bar\");\r\n        assert(obj.name === \"Gabor\");\r\n        try {\r\n            let x = obj.punci;\r\n            assert(false);\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        try {\r\n            obj.punci = 5;\r\n            assert(false);\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        obj.name = 33;\r\n        assert(obj.name === 33);\r\n        assert(backend.name === 33);\r\n        backend.punci = \"je\";\r\n        assert(backend.punci === \"je\");\r\n        obj.update();\r\n        assert(obj.punci === \"je\");\r\n\r\n        let keys = _.keys(obj).sort();\r\n        assert(keys.length === 3);\r\n        assert(keys[0] === \"foo\");\r\n        assert(obj[keys[0]] === \"bar\");\r\n        assert(keys[1] === \"name\");\r\n        assert(obj[keys[1]] === 33);\r\n        assert(keys[2] === \"punci\");\r\n        assert(obj[keys[2]] === \"je\");\r\n\r\n        delete backend.punci;\r\n        assert(backend.punci === undefined);\r\n        try {\r\n            assert(obj.punci === undefined);\r\n            assert(false);\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n\r\n        obj.update();\r\n        assert(obj.punci === undefined);\r\n\r\n        keys.length = 0;\r\n        for (let key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        keys.sort();\r\n        assert(keys.length === 2);\r\n        assert(keys[0] === \"foo\");\r\n        assert(obj[keys[0]] === \"bar\");\r\n        assert(keys[1] === \"name\");\r\n        assert(obj[keys[1]] === 33);\r\n    });\r\n\r\n    it(\"should accept new props on update\", function() {\r\n        let backend = {\r\n            name: \"Gabor\",\r\n            getKeys: function(proxy) {\r\n                return _.keys(this);\r\n            },\r\n            getValue: function(proxy, name) {\r\n                let v = this[name];\r\n                if (_.isUndefined(v)) {\r\n                    throw new Error(`${name} doesn't exists.`);\r\n                }\r\n                return v;\r\n            },\r\n            setValue: function(proxy, name, value) {\r\n                return this[name] = value;\r\n            }\r\n        };\r\n        let obj = new SimpleProxy(backend);\r\n\r\n        assert(backend.name === \"Gabor\");\r\n        assert(obj.name === \"Gabor\");\r\n\r\n        obj.klow = \"mudz\";\r\n\r\n        assert(obj.klow === \"mudz\");\r\n        try {\r\n            assert(backend.klow === \"mudz\");\r\n            assert(false);\r\n        }\r\n        catch (e) {\r\n            _.noop(e);\r\n        }\r\n        obj.update();\r\n        assert(obj.klow === \"mudz\");\r\n        assert(backend.klow === \"mudz\");\r\n\r\n        // Ensure that the value originates itself from the backend:\r\n        backend.klow = \"foo\";\r\n        assert(obj.klow === \"foo\");\r\n        assert(backend.klow === \"foo\");\r\n    });\r\n});"],"file":"common/simpleProxy.js","sourceRoot":"/source/"}