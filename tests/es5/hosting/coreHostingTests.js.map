{"version":3,"sources":["hosting/coreHostingTests.js"],"names":[],"mappings":"AAAA;;;;AAAY,CAAC;AAIb,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;AACxD,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACvD,IAAI,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;AAC1D,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;;AAE5D,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,QAAQ,CAAC,kBAAkB,EAAE,YAAY;AACrC,YAAQ,CAAC,SAAS,EAAE,YAAY;AAC5B,UAAE,CAAC,gCAAgC,EAAE,YAAY;AAC7C,gBAAI,CAAC,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAC/B,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,kBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;SACnE,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,QAAQ,CAAC,cAAc,EAAE,YAAY;AACjC,QAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEpB,aAAS,OAAO,CAAC,OAAO,EAAE;AACtB,kCAAuB,OAAO,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,CAAA,iBAAW,OAAO,CAAC,eAAe,GAAG,KAAK,GAAG,IAAI,CAAA,uBAAiB,OAAO,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAA,uBAAiB,OAAO,CAAC,eAAe,GAAG,KAAK,GAAG,IAAI,CAAA,CAAG;KACzN;;AAED,aAAS,SAAS,CAAC,OAAO,EAAE;AACxB,UAAE,CAAC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,UAAU,IAAI,EAAE;AACrD,6BAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5D,CAAC,CAAC;KACN;;AAED,aAAS,QAAQ,CAAC,OAAO,EAAE;AACvB,UAAE,CAAC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,UAAU,IAAI,EAAE;AACrD,6BAAiB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC7D,CAAC,CAAC;KACN;;AAED,aAAS,WAAW,CAAC,OAAO,EAAE;AAC1B,UAAE,CAAC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,UAAU,IAAI,EAAE;AACrD,6BAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxD,CAAC,CAAC;KACN;;AAED,aAAS,wBAAwB,CAAC,OAAO,EAAE;AACvC,UAAE,CAAC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,UAAU,IAAI,EAAE;AACrD,6BAAiB,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvE,CAAC,CAAC;KACN;;AAED,QAAI,UAAU,GAAG,CACb;AACI,mBAAW,EAAE,IAAI;AACjB,uBAAe,EAAE,KAAK;AACtB,kBAAU,EAAE,IAAI;AAChB,uBAAe,EAAE,KAAK;KACzB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,KAAK;AACtB,kBAAU,EAAE,IAAI;AAChB,uBAAe,EAAE,KAAK;KACzB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,IAAI;AACrB,kBAAU,EAAE,IAAI;AAChB,uBAAe,EAAE,KAAK;KACzB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,KAAK;AACtB,kBAAU,EAAE,IAAI,UAAU,EAAE;AAC5B,uBAAe,EAAE,KAAK;KACzB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,IAAI;AACrB,kBAAU,EAAE,IAAI,UAAU,EAAE;AAC5B,uBAAe,EAAE,KAAK;KACzB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,KAAK;AACtB,kBAAU,EAAE,IAAI,UAAU,EAAE;AAC5B,uBAAe,EAAE,IAAI;KACxB,EACD;AACI,mBAAW,EAAE,IAAI,iBAAiB,EAAE;AACpC,uBAAe,EAAE,IAAI;AACrB,kBAAU,EAAE,IAAI,UAAU,EAAE;AAC5B,uBAAe,EAAE,IAAI;KACxB,CACJ,CAAC;;AAEF,YAAQ,CAAC,iDAAiD,EAAE,YAAY;AACpE,gBAAQ,CAAC,eAAe,EAAE,YAAY;;;;;;AAClC,qCAAgB,UAAU,8HAAE;wBAAnB,GAAG;;AACR,wBAAI,GAAG,CAAC,WAAW,EAAE;AACjB,2BAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;qBAC3B;AACD,6BAAS,CAAC,GAAG,CAAC,CAAC;iBAClB;;;;;;;;;;;;;;;SACJ,CAAC,CAAC;;AAEH,gBAAQ,CAAC,oBAAoB,EAAE,YAAY;;;;;;AACvC,sCAAgB,UAAU,mIAAE;wBAAnB,GAAG;;AACR,wBAAI,GAAG,CAAC,WAAW,EAAE;AACjB,2BAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;qBAC3B;AACD,4BAAQ,CAAC,GAAG,CAAC,CAAC;iBACjB;;;;;;;;;;;;;;;SACJ,CAAC,CAAC;;AAEH,gBAAQ,CAAC,iBAAiB,EAAE,YAAY;;;;;;AACpC,sCAAgB,UAAU,mIAAE;wBAAnB,GAAG;;AACR,wBAAI,GAAG,CAAC,WAAW,EAAE;AACjB,2BAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;qBAC3B;AACD,+BAAW,CAAC,GAAG,CAAC,CAAC;iBACpB;;;;;;;;;;;;;;;SACJ,CAAC,CAAC;;AAEH,gBAAQ,CAAC,8BAA8B,EAAE,YAAY;;;;;;AACjD,sCAAgB,UAAU,mIAAE;wBAAnB,GAAG;;AACR,wBAAI,GAAG,CAAC,WAAW,EAAE;AACjB,2BAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;qBAC3B;AACD,4CAAwB,CAAC,GAAG,CAAC,CAAC;iBACjC;;;;;;;;;;;;;;;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"hosting/coreHostingTests.js","sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet InstanceIdParser = wf4node.hosting.InstanceIdParser;\nlet _ = require(\"lodash\");\nlet hostingTestCommon = require(\"./hostingTestCommon\");\nlet MemoryPersistence = wf4node.hosting.MemoryPersistence;\nlet Serializer = require(\"backpack-node\").system.Serializer;\n\nlet assert = require(\"assert\");\n\ndescribe(\"InstanceIdParser\", function () {\n    describe(\"parse()\", function () {\n        it(\"should understand common paths\", function () {\n            let p = new InstanceIdParser();\n            assert.equal(p.parse(\"this\", 1), 1);\n            assert.equal(p.parse(\"[0]\", [1]), 1);\n            assert.equal(p.parse(\"[0]\", [4, 5]), 4);\n            assert.equal(p.parse(\"[1].id\", [{ id: 1 }, { id: 2 }]), 2);\n            assert.equal(p.parse(\"id[0].a\", { id: [{ a: \"foo\" }] }), \"foo\");\n        });\n    });\n});\n\ndescribe(\"WorkflowHost\", function () {\n    this.timeout(60000);\n\n    function getInfo(options) {\n        return `persistence: ${options.persistence ? \"on\" : \"off\"}, lazy: ${options.lazyPersistence ? \"yes\" : \"no\"}, serializer: ${options.serializer ? \"yes\" : \"no\"}, alwaysLoad: ${options.alwaysLoadState ? \"yes\" : \"no\"}`;\n    }\n\n    function testBasic(options) {\n        it(\"should run by: \" + getInfo(options), function (done) {\n            hostingTestCommon.doBasicHostTest(options).nodeify(done);\n        });\n    }\n\n    function testCalc(options) {\n        it(\"should run by: \" + getInfo(options), function (done) {\n            hostingTestCommon.doCalculatorTest(options).nodeify(done);\n        });\n    }\n\n    function testDelayTo(options) {\n        it(\"should run by: \" + getInfo(options), function (done) {\n            hostingTestCommon.doDelayTest(options).nodeify(done);\n        });\n    }\n\n    function testStopOutdatedVersions(options) {\n        it(\"should run by: \" + getInfo(options), function (done) {\n            hostingTestCommon.doStopOutdatedVersionsTest(options).nodeify(done);\n        });\n    }\n\n    let allOptions = [\n        {\n            persistence: null,\n            lazyPersistence: false,\n            serializer: null,\n            alwaysLoadState: false\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: false,\n            serializer: null,\n            alwaysLoadState: false\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: true,\n            serializer: null,\n            alwaysLoadState: false\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: false,\n            serializer: new Serializer(),\n            alwaysLoadState: false\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: true,\n            serializer: new Serializer(),\n            alwaysLoadState: false\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: false,\n            serializer: new Serializer(),\n            alwaysLoadState: true\n        },\n        {\n            persistence: new MemoryPersistence(),\n            lazyPersistence: true,\n            serializer: new Serializer(),\n            alwaysLoadState: true\n        }\n    ];\n\n    describe(\"Without Persistence and With Memory Persistence\", function () {\n        describe(\"Basic Example\", function () {\n            for (let opt of allOptions) {\n                if (opt.persistence) {\n                    opt.persistence.clear();\n                }\n                testBasic(opt);\n            }\n        });\n\n        describe(\"Calculator Example\", function () {\n            for (let opt of allOptions) {\n                if (opt.persistence) {\n                    opt.persistence.clear();\n                }\n                testCalc(opt);\n            }\n        });\n\n        describe(\"DelayTo Example\", function () {\n            for (let opt of allOptions) {\n                if (opt.persistence) {\n                    opt.persistence.clear();\n                }\n                testDelayTo(opt);\n            }\n        });\n\n        describe(\"StopOutdatedVersions Example\", function () {\n            for (let opt of allOptions) {\n                if (opt.persistence) {\n                    opt.persistence.clear();\n                }\n                testStopOutdatedVersions(opt);\n            }\n        });\n    });\n});\n"],"sourceRoot":"/source/"}