{"version":3,"sources":["activities/delays.js"],"names":[],"mappings":"AAAA;;;;AAAY,CAAC;AAIb,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACnC,IAAI,cAAc,GAAG,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC;AACvD,IAAI,uBAAuB,GAAG,OAAO,CAAC,UAAU,CAAC,uBAAuB,CAAC;AACzE,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;AAC9C,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtB,QAAQ,CAAC,QAAQ,EAAE,YAAY;AAC3B,YAAQ,CAAC,SAAS,EAAE,YAAY;AAC5B,UAAE,CAAC,uBAAuB,EAAE,UAAU,IAAI,EAAE;AACxC,gBAAI,MAAM,GAAG,IAAI,uBAAuB,CAAC;AACrC,wBAAQ,EAAE;AACN,sBAAE,EAAE,GAAG;iBACV;aACJ,CAAC,CAAC;;AAEH,iBAAK,yBAAC;oBACE,GAAG,EAEH,CAAC;;;;;AAFD,mCAAG,GAAG,IAAI,IAAI,EAAE;;uCACd,MAAM,CAAC,MAAM,EAAE;;;AACjB,iCAAC,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG;;AACxB,sCAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;;;;;;;aAC9B,EAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,YAAQ,CAAC,QAAQ,EAAE,YAAY;AAC3B,UAAE,CAAC,wBAAwB,EAAE,UAAU,IAAI,EAAE;AACzC,gBAAI,CAAC,GAAG,CAAC,CAAC;AACV,gBAAI,MAAM,GAAG,IAAI,uBAAuB,CAAC;AACrC,yBAAS,EAAE;AACP,gCAAY,EAAE,UAAU;AACxB,iCAAa,EAAE,GAAG;AAClB,wBAAI,EAAE,CACF,YAAY;AACR,4BAAI,EAAE,CAAC,GAAG,CAAC,EAAE;AACT,mCAAO,CAAC,CAAC;yBACZ;AACD,8BAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;qBACzB,CACJ;iBACJ;aACJ,CAAC,CAAC;;AAEH,iBAAK,yBAAC;oBACE,GAAG,EAOK,CAAC;;;;;AAPT,mCAAG,GAAG,IAAI,IAAI,EAAE;;;uCAEV,MAAM,CAAC,MAAM,EAAE;;;AACrB,sCAAM,CAAC,KAAK,CAAC,CAAC;;;;;;;;sCAGV,aAAE,OAAO,KAAK,IAAI,CAAA;;;;;AACd,iCAAC,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG;;AACxB,sCAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC5B,sCAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;;;;;;;;aAM3B,EAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"activities/delays.js","sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet ConsoleTracker = wf4node.activities.ConsoleTracker;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"better-assert\");\nlet Bluebird = require(\"bluebird\");\nlet _ = require(\"lodash\");\nlet async = wf4node.common.asyncHelpers.async;\nrequire(\"date-utils\");\n\ndescribe(\"delays\", function () {\n    describe(\"DelayTo\", function () {\n        it(\"should wait for 200ms\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@delay\": {\n                    ms: 200\n                }\n            });\n\n            async(function*() {\n                let now = new Date();\n                yield engine.invoke();\n                let d = new Date() - now;\n                assert(d > 200 && d < 400);\n            })().nodeify(done);\n        });\n    });\n\n    describe(\"Repeat\", function () {\n        it(\"should repeat its args\", function (done) {\n            let i = 0;\n            let engine = new ActivityExecutionEngine({\n                \"@repeat\": {\n                    intervalType: \"secondly\",\n                    intervalValue: 0.2,\n                    args: [\n                        function () {\n                            if (++i < 4) {\n                                return i;\n                            }\n                            throw new Error(\"OK\");\n                        }\n                    ]\n                }\n            });\n\n            async(function*() {\n                let now = new Date();\n                try {\n                    yield engine.invoke();\n                    assert(false);\n                }\n                catch (e) {\n                    if (e.message === \"OK\") {\n                        let d = new Date() - now;\n                        assert(d > 400 && d < 1000);\n                        assert(i === 4);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            })().nodeify(done);\n        });\n    });\n});"],"sourceRoot":"/source/"}