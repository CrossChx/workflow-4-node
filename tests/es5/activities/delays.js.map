{"version":3,"names":[],"mappings":"","sources":["activities/delays.js"],"sourcesContent":["\"use strict\";\r\n\r\n/* global describe,it */\r\n\r\nlet wf4node = require(\"../../../\");\r\nlet Func = wf4node.activities.Func;\r\nlet ConsoleTracker = wf4node.activities.ConsoleTracker;\r\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\r\nlet assert = require(\"better-assert\");\r\nlet Bluebird = require(\"bluebird\");\r\nlet _ = require(\"lodash\");\r\nlet async = wf4node.common.asyncHelpers.async;\r\nrequire(\"date-utils\");\r\n\r\ndescribe(\"delays\", function () {\r\n    describe(\"DelayTo\", function () {\r\n        it(\"should wait for 200ms\", function (done) {\r\n            let engine = new ActivityExecutionEngine({\r\n                \"@delay\": {\r\n                    ms: 200\r\n                }\r\n            });\r\n\r\n            async(function*() {\r\n                let now = new Date();\r\n                yield engine.invoke();\r\n                let d = new Date() - now;\r\n                assert(d > 200 && d < 400);\r\n            })().nodeify(done);\r\n        });\r\n    });\r\n\r\n    describe(\"Repeat\", function () {\r\n        it(\"should repeat its args\", function (done) {\r\n            let i = 0;\r\n            let engine = new ActivityExecutionEngine({\r\n                \"@repeat\": {\r\n                    intervalType: \"secondly\",\r\n                    intervalValue: 0.2,\r\n                    args: [\r\n                        function () {\r\n                            if (i++ === 3) {\r\n                                throw new Error(\"OK\");\r\n                            }\r\n                            return i;\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n            async(function*() {\r\n                let now = new Date();\r\n                try {\r\n                    yield engine.invoke();\r\n                    assert(false);\r\n                }\r\n                catch (e) {\r\n                    if (e.message === \"OK\") {\r\n                        let d = new Date() - now;\r\n                        assert(d > 400 && d < 500);\r\n                        assert(i === 4);\r\n                    }\r\n                    else {\r\n                        throw e;\r\n                    }\r\n                }\r\n            })().nodeify(done);\r\n        });\r\n    });\r\n});"],"file":"activities/delays.js","sourceRoot":"/source/"}