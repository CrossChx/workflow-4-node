{"version":3,"names":[],"mappings":"","sources":["activities/delays.js"],"sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet ConsoleTracker = wf4node.activities.ConsoleTracker;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"better-assert\");\nlet Bluebird = require(\"bluebird\");\nlet _ = require(\"lodash\");\nlet async = wf4node.common.asyncHelpers.async;\nrequire(\"date-utils\");\n\ndescribe(\"delays\", function () {\n    describe(\"DelayTo\", function () {\n        it(\"should wait for 200ms\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@delay\": {\n                    ms: 200\n                }\n            });\n\n            async(function*() {\n                let now = new Date();\n                yield engine.invoke();\n                let d = new Date() - now;\n                assert(d > 200 && d < 400);\n            })().nodeify(done);\n        });\n    });\n\n    describe(\"Repeat\", function () {\n        it(\"should repeat its args\", function (done) {\n            let i = 0;\n            let engine = new ActivityExecutionEngine({\n                \"@repeat\": {\n                    intervalType: \"secondly\",\n                    intervalValue: 0.2,\n                    args: [\n                        function () {\n                            if (++i < 4) {\n                                return i;\n                            }\n                            throw new Error(\"OK\");\n                        }\n                    ]\n                }\n            });\n\n            async(function*() {\n                let now = new Date();\n                try {\n                    yield engine.invoke();\n                    assert(false);\n                }\n                catch (e) {\n                    if (e.message === \"OK\") {\n                        let d = new Date() - now;\n                        console.log(d);\n                        assert(d > 400 && d < 1000);\n                        assert(i === 4);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            })().nodeify(done);\n        });\n    });\n});"],"file":"activities/delays.js","sourceRoot":"/source/"}