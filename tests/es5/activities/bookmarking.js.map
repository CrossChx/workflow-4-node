{"version":3,"names":[],"mappings":"","sources":["activities/bookmarking.js"],"sourcesContent":["\"use strict\";\r\n\r\n/* global describe,it */\r\n\r\nlet wf4node = require(\"../../../\");\r\nlet Expression = wf4node.activities.Expression;\r\nlet Func = wf4node.activities.Func;\r\nlet Block = wf4node.activities.Block;\r\nlet activityMarkup = wf4node.activities.activityMarkup;\r\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\r\nlet _ = require(\"lodash\");\r\nlet ConsoleTracker = wf4node.activities.ConsoleTracker;\r\nlet WorkflowHost = wf4node.hosting.WorkflowHost;\r\nlet InstanceIdParser = wf4node.hosting.InstanceIdParser;\r\nlet assert = require(\"assert\");\r\n\r\ndescribe(\"bookmarking\", function () {\r\n    it(\"should handle parallel activities\", function (done) {\r\n        let activity = activityMarkup.parse(\r\n            {\r\n                \"@parallel\": {\r\n                    var1: \"\",\r\n                    displayName: \"Root\",\r\n                    args: [\r\n                        {\r\n                            \"@block\": {\r\n                                displayName: \"Wait Block 1\",\r\n                                args: [\r\n                                    {\r\n                                        \"@waitForBookmark\": {\r\n                                            displayName: \"Wait 1\",\r\n                                            bookmarkName: \"bm1\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"@func\": {\r\n                                            displayName: \"Func 1\",\r\n                                            code: function () {\r\n                                                return this.var1 += \"a\";\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@block\": {\r\n                                displayName: \"Wait Block 2\",\r\n                                args: [\r\n                                    {\r\n                                        \"@waitForBookmark\": {\r\n                                            displayName: \"Wait 2\",\r\n                                            bookmarkName: \"bm2\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"@func\": {\r\n                                            displayName: \"Func 2\",\r\n                                            code: function () {\r\n                                                return this.var1 += \"b\";\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        },\r\n                        {\r\n                            \"@block\": {\r\n                                displayName: \"Resume Block\",\r\n                                args: [\r\n                                    {\r\n                                        \"@resumeBookmark\": {\r\n                                            displayName: \"Resume 1\",\r\n                                            bookmarkName: \"bm1\"\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        \"@resumeBookmark\": {\r\n                                            displayName: \"Resume 2\",\r\n                                            bookmarkName: \"bm2\"\r\n                                        }\r\n                                    },\r\n                                    \"bubu\"\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        let engine = new ActivityExecutionEngine(activity);\r\n        //engine.addTracker(new ConsoleTracker());\r\n\r\n        engine.invoke().then(\r\n            function (result) {\r\n                try {\r\n                    assert.ok(_.isArray(result));\r\n                    assert.equal(result.length, 3);\r\n                    assert.equal(result[0], \"a\");\r\n                    assert.equal(result[1], \"ab\");\r\n                    assert.equal(result[2], \"bubu\");\r\n                }\r\n                catch (e) {\r\n                    assert.ifError(e);\r\n                }\r\n            }).nodeify(done);\r\n    });\r\n\r\n    it(\"should handle of picking activities\", function (done) {\r\n        let activity = activityMarkup.parse(\r\n            {\r\n                \"@block\": {\r\n                    var1: 0,\r\n                    args: [\r\n                        {\r\n                            \"@parallel\": [\r\n                                {\r\n                                    \"@pick\": [\r\n                                        {\r\n                                            \"@block\": [\r\n                                                {\r\n                                                    \"@waitForBookmark\": {\r\n                                                        bookmarkName: \"foo\"\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"@func\": {\r\n                                                        displayName: \"Do Not Do This Func\",\r\n                                                        code: function () {\r\n                                                            this.var1 = -1;\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        },\r\n                                        {\r\n                                            \"@block\": [\r\n                                                {\r\n                                                    \"@waitForBookmark\": {\r\n                                                        bookmarkName: \"bm\"\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    \"@func\": {\r\n                                                        displayName: \"Do This Func\",\r\n                                                        code: function () {\r\n                                                            this.var1 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    \"@resumeBookmark\": {\r\n                                        bookmarkName: \"bm\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"@func\": {\r\n                                displayName: \"Final Func\",\r\n                                code: function () {\r\n                                    return this.var1;\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n\r\n        let engine = new ActivityExecutionEngine(activity);\r\n        //engine.addTracker(new ConsoleTracker());\r\n\r\n        engine.invoke().then(\r\n            function (result) {\r\n                try {\r\n                    assert.equal(result, 1);\r\n                }\r\n                catch (e) {\r\n                    assert.ifError(e);\r\n                }\r\n            }).nodeify(done);\r\n    });\r\n});"],"file":"activities/bookmarking.js","sourceRoot":"/source/"}