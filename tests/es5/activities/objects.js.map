{"version":3,"sources":["activities/objects.js"],"names":[],"mappings":"AAAA;;;;AAAY,CAAC;AAIb,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACnC,IAAI,cAAc,GAAG,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC;AACvD,IAAI,uBAAuB,GAAG,OAAO,CAAC,UAAU,CAAC,uBAAuB,CAAC;AACzE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC;AACrC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,QAAQ,CAAC,SAAS,EAAE,YAAW;AAC3B,YAAQ,CAAC,OAAO,EAAE,YAAY;AAC1B,UAAE,CAAC,qBAAqB,EAAE,UAAU,IAAI,EAAE;AACtC,gBAAI,MAAM,GAAG,IAAI,uBAAuB,CAAC;AACrC,wBAAQ,EAAE,CACN,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,aAAa,CAChB;aACJ,CAAC,CAAC;;AAEH,kBAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAChB,UAAU,MAAM,EAAE;AACd,sBAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1B,sBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC/B,sBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACxD,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB,CAAC,CAAC;;AAEH,UAAE,CAAC,sBAAsB,EAAE,UAAU,IAAI,EAAE;AACvC,gBAAI,MAAM,GAAG,IAAI,uBAAuB,CAAC;AACrC,wBAAQ,EAAE,CACN,EAAE,CAAC,EAAE,2BAA2B,EAAE,EAClC,UAAU,EACV,EAAE,CAAC,EAAE,2BAA2B,EAAE,CACrC;aACJ,CAAC,CAAC;;AAEH,kBAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAChB,UAAU,MAAM,EAAE;AACd,sBAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3B,sBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACvC,sBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,sBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,sBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;aAC9B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"activities/objects.js","sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet activityMarkup = wf4node.activities.activityMarkup;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\nlet Block = wf4node.activities.Block;\nlet _ = require(\"lodash\");\n\ndescribe(\"objects\", function() {\n    describe(\"Merge\", function () {\n        it(\"should merge arrays\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@merge\": [\n                    [1, 2, 3],\n                    \"= [4, 5, 6]\"\n                ]\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isArray(result));\n                    assert.equal(result.length, 6);\n                    assert.equal(_(result).sum(), 6 + 5 + 4 + 3 + 2 + 1);\n                }).nodeify(done);\n        });\n\n        it(\"should merge objects\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@merge\": [\n                    { a: \"function () { return 2; }\" },\n                    \"= {b: 2}\",\n                    { c: \"function() { return 42; }\" }\n                ]\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isObject(result));\n                    assert.equal(_.keys(result).length, 3);\n                    assert.equal(result.a, 2);\n                    assert.equal(result.b, 2);\n                    assert.equal(result.c, 42);\n                }).nodeify(done);\n        });\n    });\n});"],"sourceRoot":"/source/"}