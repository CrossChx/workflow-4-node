{"version":3,"names":[],"mappings":"","sources":["activities/objects.js"],"sourcesContent":["\"use strict\";\r\n\r\n/* global describe,it */\r\n\r\nlet wf4node = require(\"../../../\");\r\nlet Func = wf4node.activities.Func;\r\nlet activityMarkup = wf4node.activities.activityMarkup;\r\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\r\nlet assert = require(\"assert\");\r\nlet Bluebird = require(\"bluebird\");\r\nlet Block = wf4node.activities.Block;\r\nlet _ = require(\"lodash\");\r\n\r\ndescribe(\"objects\", function() {\r\n    describe(\"Merge\", function () {\r\n        it(\"should merge arrays\", function (done) {\r\n            let engine = new ActivityExecutionEngine({\r\n                \"@merge\": [\r\n                    [1, 2, 3],\r\n                    \"= [4, 5, 6]\"\r\n                ]\r\n            });\r\n\r\n            engine.invoke().then(\r\n                function (result) {\r\n                    assert(_.isArray(result));\r\n                    assert.equal(result.length, 6);\r\n                    assert.equal(_(result).sum(), 6 + 5 + 4 + 3 + 2 + 1);\r\n                }).nodeify(done);\r\n        });\r\n\r\n        it(\"should merge objects\", function (done) {\r\n            let engine = new ActivityExecutionEngine({\r\n                \"@merge\": [\r\n                    { a: \"function () { return 2; }\" },\r\n                    \"= {b: 2}\",\r\n                    { c: \"function() { return 42; }\" }\r\n                ]\r\n            });\r\n\r\n            engine.invoke().then(\r\n                function (result) {\r\n                    assert(_.isObject(result));\r\n                    assert.equal(_.keys(result).length, 3);\r\n                    assert.equal(result.a, 2);\r\n                    assert.equal(result.b, 2);\r\n                    assert.equal(result.c, 42);\r\n                }).nodeify(done);\r\n        });\r\n    });\r\n});"],"file":"activities/objects.js","sourceRoot":"/source/"}