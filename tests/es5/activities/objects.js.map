{"version":3,"names":[],"mappings":"","sources":["activities/objects.js"],"sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet activityMarkup = wf4node.activities.activityMarkup;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\nlet Block = wf4node.activities.Block;\nlet _ = require(\"lodash\");\n\ndescribe(\"objects\", function() {\n    describe(\"Merge\", function () {\n        it(\"should merge arrays\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@merge\": [\n                    [1, 2, 3],\n                    \"= [4, 5, 6]\"\n                ]\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isArray(result));\n                    assert.equal(result.length, 6);\n                    assert.equal(_(result).sum(), 6 + 5 + 4 + 3 + 2 + 1);\n                }).nodeify(done);\n        });\n\n        it(\"should merge objects\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@merge\": [\n                    { a: \"function () { return 2; }\" },\n                    \"= {b: 2}\",\n                    { c: \"function() { return 42; }\" }\n                ]\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isObject(result));\n                    assert.equal(_.keys(result).length, 3);\n                    assert.equal(result.a, 2);\n                    assert.equal(result.b, 2);\n                    assert.equal(result.c, 42);\n                }).nodeify(done);\n        });\n    });\n});"],"file":"activities/objects.js","sourceRoot":"/source/"}