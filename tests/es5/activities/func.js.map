{"version":3,"sources":["activities/func.js"],"names":[],"mappings":"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","file":"activities/func.js","sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet activityMarkup = wf4node.activities.activityMarkup;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\nlet _ = require(\"lodash\");\nlet errors = wf4node.common.errors;\n\ndescribe(\"Func\", function () {\n    it(\"should run with a synchronous code\", function (done) {\n        let fop = new Func();\n        fop.code = function (obj) {\n            return obj.name;\n        };\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke({name: \"Gabor\"}).then(\n            function (result) {\n                assert.equal(result, \"Gabor\");\n            }).nodeify(done);\n    });\n\n    it(\"should run when created from markup\", function (done) {\n        let fop = activityMarkup.parse(\n            {\n                \"@func\": {\n                    code: function (obj) {\n                        return obj.name;\n                    }\n                }\n            });\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke({name: \"Gabor\"}).then(\n            function (result) {\n                assert.equal(result, \"Gabor\");\n            }).nodeify(done);\n    });\n\n    it(\"should run twice\", function (done) {\n        let fop = activityMarkup.parse(\n            {\n                \"@func\": {\n                    code: function (obj) {\n                        return obj.name;\n                    }\n                }\n            });\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke({name: \"Gabor\"})\n            .then(function (result) {\n                assert.equal(result, \"Gabor\");\n                return engine.invoke({name: \"Pisti\"})\n                    .then(function (result2) {\n                        assert.equal(result2, \"Pisti\");\n                    });\n            }).nodeify(done);\n    });\n\n    it(\"should run when code is asynchronous\", function (done) {\n        let fop = new Func();\n        fop.code = function (obj) {\n            return Bluebird.resolve(obj.name);\n        };\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke({name: \"Mezo\"}).then(\n            function (result) {\n                assert.equal(result, \"Mezo\");\n            }).nodeify(done);\n    });\n\n    it(\"should run asynchronously when code is a generator\", function (done) {\n        let fop = Func.async(function* (a) {\n            yield Bluebird.delay(100);\n            return a.name;\n        });\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke({name: \"Mezo\"}).then(\n            function (result) {\n                assert.equal(result, \"Mezo\");\n            }).nodeify(done);\n    });\n\n    it(\"should not accept activities as arguments\", function (done) {\n        let expected = {name: \"Gabor\"};\n        let fop = new Func();\n        fop.code = function (obj) {\n            return obj.name;\n        };\n        let fopin = new Func();\n        fopin.code = function () {\n            return expected;\n        };\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke(fopin)\n            .then(function (result) {\n                assert(false);\n            },\n            function (e) {\n                assert(e instanceof errors.ActivityRuntimeError);\n            }).nodeify(done);\n    });\n\n    it(\"should work as an agument\", function (done) {\n        let expected = {name: \"Gabor\"};\n\n        let fop = activityMarkup.parse(\n            {\n                \"@func\": {\n                    args: {\n                        \"@func\": {\n                            code: function () {\n                                return expected;\n                            }\n                        }\n                    },\n                    code: function (obj) {\n                        return obj.name;\n                    }\n                }\n            });\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke().then(\n            function (result) {\n                assert.equal(result, expected.name);\n            }).nodeify(done);\n    });\n\n    it(\"should include lodash as last argument\", function (done) {\n        let expected = {name: \"GaborMezo\"};\n\n        let fop = activityMarkup.parse(\n            {\n                \"@func\": {\n                    args: {\n                        \"@func\": {\n                            code: function () {\n                                return expected;\n                            }\n                        }\n                    },\n                    code: function (obj, __) {\n                        return __.camelCase(obj.name);\n                    }\n                }\n            });\n\n        let engine = new ActivityExecutionEngine(fop);\n\n        engine.invoke().then(\n            function (result) {\n                assert.equal(result, _.camelCase(expected.name));\n            }).nodeify(done);\n    });\n\n    describe(\"calling other methods\", function () {\n        it(\"should run when created from markup\", function (done) {\n            let markup = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        id: \"block\",\n                        \"code\": {\n                            _: function (obj) {\n                                return obj.name;\n                            }\n                        },\n                        args: {\n                            \"@func\": {\n                                code: \"= this.block.code\",\n                                args: {name: \"Gabor\"}\n                            }\n                        }\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(markup);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, \"Gabor\");\n                }).nodeify(done);\n        });\n\n        it(\"should run when code is asynchronous\", function (done) {\n            let markup = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        id: \"block\",\n                        \"code\": {\n                            _: function (obj) {\n                                return Bluebird.delay(10).then(function () {\n                                    return obj.name;\n                                });\n                            }\n                        },\n                        args: {\n                            \"@func\": {\n                                code: \"= this.block.code\",\n                                args: {name: \"Gabor\"}\n                            }\n                        }\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(markup);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, \"Gabor\");\n                }).nodeify(done);\n        });\n\n        it(\"should include lodash as last argument\", function (done) {\n            let markup = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        id: \"block\",\n                        \"code\": {\n                            _: function (obj, __) {\n                                return Bluebird.delay(10).then(function () {\n                                    return __.camelCase(obj.name);\n                                });\n                            }\n                        },\n                        args: {\n                            \"@func\": {\n                                code: \"= this.block.code\",\n                                args: {name: \"GaborMezo\"}\n                            }\n                        }\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(markup);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, _.camelCase(\"GaborMezo\"));\n                }).nodeify(done);\n        });\n\n        it(\"should fail with error\", function (done) {\n            let markup = activityMarkup.parse(\n                {\n                    \"@block\": [\n                        function () {\n                            throw new Error(\"Boo.\");\n                        }\n                    ]\n                });\n\n            let engine = new ActivityExecutionEngine(markup);\n\n            engine.invoke()\n                .then(function (result) {\n                    assert(false);\n                },\n                function (e) {\n                    assert(/Boo/.test(e.message));\n                }).nodeify(done);\n        });\n    });\n});\n"],"sourceRoot":"/source/"}