"use strict";
var wf4node = require("../../../");
var ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;
var _ = require('lodash');
var assert = require('assert');
describe('Template', function() {
  it('should parse object correctly', function(done) {
    var engine = new ActivityExecutionEngine({template: {declare: {
          a: 'foo',
          b: ['zoo', {c: {'@func': {code: function() {
                  return 6;
                }}}}, '# 42']
        }}});
    engine.invoke().then(function(result) {
      assert.ok(_.isPlainObject(result));
      assert.equal(result.a, 'foo');
      assert.ok(_.isArray(result.b));
      assert.equal(result.b.length, 3);
      assert.equal(result.b[0], 'zoo');
      assert.ok(_.isPlainObject(result.b[1]));
      assert.equal(result.b[1].c, 6);
      assert.equal(result.b[2], 42);
    }).nodeify(done);
  });
  it('should work when specialized', function(done) {
    var engine = new ActivityExecutionEngine({block: [{
        a: 'foo',
        b: ['zoo', {c: {'@func': {code: function() {
                return 6;
              }}}}, '# 42']
      }]});
    engine.invoke().then(function(result) {
      assert.ok(_.isPlainObject(result));
      assert.equal(result.a, 'foo');
      assert.ok(_.isArray(result.b));
      assert.equal(result.b.length, 3);
      assert.equal(result.b[0], 'zoo');
      assert.ok(_.isPlainObject(result.b[1]));
      assert.equal(result.b[1].c, 6);
      assert.equal(result.b[2], 42);
    }).nodeify(done);
  });
});
//# sourceMappingURL=data:application/json;base64,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QyxDQUFDLENBQUM7QUFDbEMsV0FBSyxNQUFNLEFBQUMsQ0FBQyxNQUFLLEVBQUUsQ0FBRyxNQUFJLENBQUMsQ0FBQztBQUM3QixXQUFLLEdBQUcsQUFBQyxDQUFDLENBQUEsUUFBUSxBQUFDLENBQUMsTUFBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzlCLFdBQUssTUFBTSxBQUFDLENBQUMsTUFBSyxFQUFFLE9BQU8sQ0FBRyxFQUFBLENBQUMsQ0FBQztBQUNoQyxXQUFLLE1BQU0sQUFBQyxDQUFDLE1BQUssRUFBRSxDQUFFLENBQUEsQ0FBQyxDQUFHLE1BQUksQ0FBQyxDQUFDO0FBQ2hDLFdBQUssR0FBRyxBQUFDLENBQUMsQ0FBQSxjQUFjLEFBQUMsQ0FBQyxNQUFLLEVBQUUsQ0FBRSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsV0FBSyxNQUFNLEFBQUMsQ0FBQyxNQUFLLEVBQUUsQ0FBRSxDQUFBLENBQUMsRUFBRSxDQUFHLEVBQUEsQ0FBQyxDQUFDO0FBQzlCLFdBQUssTUFBTSxBQUFDLENBQUMsTUFBSyxFQUFFLENBQUUsQ0FBQSxDQUFDLENBQUcsR0FBQyxDQUFDLENBQUM7SUFDakMsQ0FBQyxRQUFRLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztFQUNwQixDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL3RlbXBsYXRlVGVzdHMuanMiLCJzb3VyY2VSb290IjoidGVzdHMvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsidmFyIHdmNG5vZGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vXCIpO1xyXG52YXIgQWN0aXZpdHlFeGVjdXRpb25FbmdpbmUgPSB3ZjRub2RlLmFjdGl2aXRpZXMuQWN0aXZpdHlFeGVjdXRpb25FbmdpbmU7XHJcbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XHJcbnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcclxuXHJcbmRlc2NyaWJlKCdUZW1wbGF0ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgIGl0KCdzaG91bGQgcGFyc2Ugb2JqZWN0IGNvcnJlY3RseScsIGZ1bmN0aW9uIChkb25lKSB7XHJcblxyXG4gICAgICAgIHZhciBlbmdpbmUgPSBuZXcgQWN0aXZpdHlFeGVjdXRpb25FbmdpbmUoe1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZToge1xyXG4gICAgICAgICAgICAgICAgZGVjbGFyZToge1xyXG4gICAgICAgICAgICAgICAgICAgIGE6ICdmb28nLFxyXG4gICAgICAgICAgICAgICAgICAgIGI6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ3pvbycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQGZ1bmMnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA2O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnIyA0MidcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZW5naW5lLmludm9rZSgpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xyXG5cclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKF8uaXNQbGFpbk9iamVjdChyZXN1bHQpKTtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKHJlc3VsdC5hLCAnZm9vJyk7XHJcbiAgICAgICAgICAgIGFzc2VydC5vayhfLmlzQXJyYXkocmVzdWx0LmIpKTtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKHJlc3VsdC5iLmxlbmd0aCwgMyk7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQuYlswXSwgJ3pvbycpO1xyXG4gICAgICAgICAgICBhc3NlcnQub2soXy5pc1BsYWluT2JqZWN0KHJlc3VsdC5iWzFdKSk7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQuYlsxXS5jLCA2KTtcclxuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKHJlc3VsdC5iWzJdLCA0Mik7XHJcbiAgICAgICAgfSkubm9kZWlmeShkb25lKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCdzaG91bGQgd29yayB3aGVuIHNwZWNpYWxpemVkJywgZnVuY3Rpb24gKGRvbmUpIHtcclxuXHJcbiAgICAgICAgdmFyIGVuZ2luZSA9IG5ldyBBY3Rpdml0eUV4ZWN1dGlvbkVuZ2luZSh7XHJcbiAgICAgICAgICAgIGJsb2NrOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgYTogJ2ZvbycsXHJcbiAgICAgICAgICAgICAgICAgICAgYjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnem9vJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdAZnVuYyc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICcjIDQyJ1xyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBlbmdpbmUuaW52b2tlKCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgIGFzc2VydC5vayhfLmlzUGxhaW5PYmplY3QocmVzdWx0KSk7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQuYSwgJ2ZvbycpO1xyXG4gICAgICAgICAgICBhc3NlcnQub2soXy5pc0FycmF5KHJlc3VsdC5iKSk7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQuYi5sZW5ndGgsIDMpO1xyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwocmVzdWx0LmJbMF0sICd6b28nKTtcclxuICAgICAgICAgICAgYXNzZXJ0Lm9rKF8uaXNQbGFpbk9iamVjdChyZXN1bHQuYlsxXSkpO1xyXG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwocmVzdWx0LmJbMV0uYywgNik7XHJcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQuYlsyXSwgNDIpO1xyXG4gICAgICAgIH0pLm5vZGVpZnkoZG9uZSk7XHJcbiAgICB9KTtcclxufSk7Il19
