"use strict";
"use strict";
var wf4node = require("../../../");
var activityMarkup = wf4node.activities.activityMarkup;
var ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;
var path = require("path");
var assert = require("assert");
describe("activityMarkup", function() {
  it("should load custom activity type from string", function(done) {
    var activity = activityMarkup.parse({"@block": {
        "@require": path.join(__dirname, "/customActivities/adder"),
        a: 10,
        b: 20,
        c: 30,
        args: [{"@adder": ["#this.get('a')", "#this.get('b')", "#this.get('c')"]}]
      }});
    var engine = new ActivityExecutionEngine(activity);
    engine.invoke().then(function(result) {
      assert.equal(result, 10 + 20 + 30);
    }).nodeify(done);
  });
  it("should load custom activity type from array", function(done) {
    var activity = activityMarkup.parse({
      "@require": [path.join(__dirname, "/customActivities/adder")],
      "@block": {
        a: 1,
        b: 2,
        c: 3,
        args: [{"@adder": ["= a", "= b", "= c"]}]
      }
    });
    var engine = new ActivityExecutionEngine(activity);
    engine.invoke().then(function(result) {
      assert.equal(result, 1 + 2 + 3);
    }).nodeify(done);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2aXR5TWFya3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsV0FBVyxDQUFDO0FBSVosQUFBSSxFQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsV0FBVSxDQUFDLENBQUM7QUFDbEMsQUFBSSxFQUFBLENBQUEsY0FBYSxFQUFJLENBQUEsT0FBTSxXQUFXLGVBQWUsQ0FBQztBQUN0RCxBQUFJLEVBQUEsQ0FBQSx1QkFBc0IsRUFBSSxDQUFBLE9BQU0sV0FBVyx3QkFBd0IsQ0FBQztBQUN4RSxBQUFJLEVBQUEsQ0FBQSxJQUFHLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUMxQixBQUFJLEVBQUEsQ0FBQSxNQUFLLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUU5QixPQUFPLEFBQUMsQ0FBQyxnQkFBZSxDQUFHLFVBQVUsQUFBRCxDQUFHO0FBQ25DLEdBQUMsQUFBQyxDQUFDLDhDQUE2QyxDQUFHLFVBQVUsSUFBRyxDQUFHO0FBQy9ELEFBQUksTUFBQSxDQUFBLFFBQU8sRUFBSSxDQUFBLGNBQWEsTUFBTSxBQUFDLENBQUMsQ0FDaEMsUUFBTyxDQUFHO0FBQ04saUJBQVMsQ0FBRyxDQUFBLElBQUcsS0FBSyxBQUFDLENBQUMsU0FBUSxDQUFHLDBCQUF3QixDQUFDO0FBQzFELFFBQUEsQ0FBRyxHQUFDO0FBQ0osUUFBQSxDQUFHLEdBQUM7QUFDSixRQUFBLENBQUcsR0FBQztBQUNKLFdBQUcsQ0FBRyxFQUNGLENBQ0ksUUFBTyxDQUFHLEVBQUMsZ0JBQWUsQ0FBRyxpQkFBZSxDQUFHLGlCQUFlLENBQUMsQ0FDbkUsQ0FDSjtBQUFBLE1BQ0osQ0FDSixDQUFDLENBQUM7QUFFRixBQUFJLE1BQUEsQ0FBQSxNQUFLLEVBQUksSUFBSSx3QkFBc0IsQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFDO0FBRWxELFNBQUssT0FBTyxBQUFDLEVBQUMsS0FDTixBQUFDLENBQ0wsU0FBVSxNQUFLLENBQUc7QUFDZCxXQUFLLE1BQU0sQUFBQyxDQUFDLE1BQUssQ0FBRyxDQUFBLEVBQUMsRUFBSSxHQUFDLENBQUEsQ0FBSSxHQUFDLENBQUMsQ0FBQztJQUN0QyxDQUFDLFFBQVEsQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0VBQ3hCLENBQUMsQ0FBQztBQUVGLEdBQUMsQUFBQyxDQUFDLDZDQUE0QyxDQUFHLFVBQVUsSUFBRyxDQUFHO0FBQzlELEFBQUksTUFBQSxDQUFBLFFBQU8sRUFBSSxDQUFBLGNBQWEsTUFBTSxBQUFDLENBQUM7QUFDaEMsZUFBUyxDQUFHLEVBQUUsSUFBRyxLQUFLLEFBQUMsQ0FBQyxTQUFRLENBQUcsMEJBQXdCLENBQUMsQ0FBRTtBQUM5RCxhQUFPLENBQUc7QUFDTixRQUFBLENBQUcsRUFBQTtBQUNILFFBQUEsQ0FBRyxFQUFBO0FBQ0gsUUFBQSxDQUFHLEVBQUE7QUFDSCxXQUFHLENBQUcsRUFDRixDQUNJLFFBQU8sQ0FBRyxFQUFDLEtBQUksQ0FBRyxNQUFJLENBQUcsTUFBSSxDQUFDLENBQ2xDLENBQ0o7QUFBQSxNQUNKO0FBQUEsSUFDSixDQUFDLENBQUM7QUFFRixBQUFJLE1BQUEsQ0FBQSxNQUFLLEVBQUksSUFBSSx3QkFBc0IsQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFDO0FBRWxELFNBQUssT0FBTyxBQUFDLEVBQUMsS0FDTixBQUFDLENBQ0wsU0FBVSxNQUFLLENBQUc7QUFDZCxXQUFLLE1BQU0sQUFBQyxDQUFDLE1BQUssQ0FBRyxDQUFBLENBQUEsRUFBSSxFQUFBLENBQUEsQ0FBSSxFQUFBLENBQUMsQ0FBQztJQUNuQyxDQUFDLFFBQVEsQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0VBQ3hCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUFBIiwiZmlsZSI6ImFjdGl2aXRpZXMvYWN0aXZpdHlNYXJrdXAuanMiLCJzb3VyY2VSb290IjoidGVzdHMvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGdsb2JhbCBkZXNjcmliZSxpdCAqL1xuXG5sZXQgd2Y0bm9kZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9cIik7XG5sZXQgYWN0aXZpdHlNYXJrdXAgPSB3ZjRub2RlLmFjdGl2aXRpZXMuYWN0aXZpdHlNYXJrdXA7XG5sZXQgQWN0aXZpdHlFeGVjdXRpb25FbmdpbmUgPSB3ZjRub2RlLmFjdGl2aXRpZXMuQWN0aXZpdHlFeGVjdXRpb25FbmdpbmU7XG5sZXQgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xubGV0IGFzc2VydCA9IHJlcXVpcmUoXCJhc3NlcnRcIik7XG5cbmRlc2NyaWJlKFwiYWN0aXZpdHlNYXJrdXBcIiwgZnVuY3Rpb24gKCkge1xuICAgIGl0KFwic2hvdWxkIGxvYWQgY3VzdG9tIGFjdGl2aXR5IHR5cGUgZnJvbSBzdHJpbmdcIiwgZnVuY3Rpb24gKGRvbmUpIHtcbiAgICAgICAgbGV0IGFjdGl2aXR5ID0gYWN0aXZpdHlNYXJrdXAucGFyc2Uoe1xuICAgICAgICAgICAgXCJAYmxvY2tcIjoge1xuICAgICAgICAgICAgICAgIFwiQHJlcXVpcmVcIjogcGF0aC5qb2luKF9fZGlybmFtZSwgXCIvY3VzdG9tQWN0aXZpdGllcy9hZGRlclwiKSxcbiAgICAgICAgICAgICAgICBhOiAxMCxcbiAgICAgICAgICAgICAgICBiOiAyMCxcbiAgICAgICAgICAgICAgICBjOiAzMCxcbiAgICAgICAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQGFkZGVyXCI6IFtcIiN0aGlzLmdldCgnYScpXCIsIFwiI3RoaXMuZ2V0KCdiJylcIiwgXCIjdGhpcy5nZXQoJ2MnKVwiXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBsZXQgZW5naW5lID0gbmV3IEFjdGl2aXR5RXhlY3V0aW9uRW5naW5lKGFjdGl2aXR5KTtcblxuICAgICAgICBlbmdpbmUuaW52b2tlKClcbiAgICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGFzc2VydC5lcXVhbChyZXN1bHQsIDEwICsgMjAgKyAzMCk7XG4gICAgICAgICAgICB9KS5ub2RlaWZ5KGRvbmUpO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgbG9hZCBjdXN0b20gYWN0aXZpdHkgdHlwZSBmcm9tIGFycmF5XCIsIGZ1bmN0aW9uIChkb25lKSB7XG4gICAgICAgIGxldCBhY3Rpdml0eSA9IGFjdGl2aXR5TWFya3VwLnBhcnNlKHtcbiAgICAgICAgICAgIFwiQHJlcXVpcmVcIjogWyBwYXRoLmpvaW4oX19kaXJuYW1lLCBcIi9jdXN0b21BY3Rpdml0aWVzL2FkZGVyXCIpIF0sXG4gICAgICAgICAgICBcIkBibG9ja1wiOiB7XG4gICAgICAgICAgICAgICAgYTogMSxcbiAgICAgICAgICAgICAgICBiOiAyLFxuICAgICAgICAgICAgICAgIGM6IDMsXG4gICAgICAgICAgICAgICAgYXJnczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkBhZGRlclwiOiBbXCI9IGFcIiwgXCI9IGJcIiwgXCI9IGNcIl1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGVuZ2luZSA9IG5ldyBBY3Rpdml0eUV4ZWN1dGlvbkVuZ2luZShhY3Rpdml0eSk7XG5cbiAgICAgICAgZW5naW5lLmludm9rZSgpXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnQuZXF1YWwocmVzdWx0LCAxICsgMiArIDMpO1xuICAgICAgICAgICAgfSkubm9kZWlmeShkb25lKTtcbiAgICB9KTtcbn0pOyJdfQ==
