{"version":3,"sources":["activities/loops.js"],"names":[],"mappings":"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","file":"activities/loops.js","sourcesContent":["\"use strict\";\n/* global describe,it */\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet activityMarkup = wf4node.activities.activityMarkup;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\nlet Block = wf4node.activities.Block;\nlet _ = require(\"lodash\");\nlet errors = wf4node.common.errors;\n\ndescribe(\"Loops\", function () {\n    describe(\"While\", function () {\n        it(\"should run a basic cycle\", function (done) {\n            let block = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        i: 10,\n                        j: 0,\n                        z: 0,\n                        args: [\n                            {\n                                \"@while\": {\n                                    condition: \"= this.j < this.i\",\n                                    args: \"= this.j++\",\n                                    \"@to\": \"z\"\n                                }\n                            },\n                            \"= { j: this.j, z: this.z }\"\n                        ]\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(block);\n            //engine.addTracker(new ConsoleTracker());\n\n            engine.invoke().then(\n                function (result) {\n                    assert.ok(_.isObject(result));\n                    assert.equal(result.j, 10);\n                    assert.equal(result.z, 9);\n                }).nodeify(done);\n        });\n    });\n\n    describe(\"For\", function () {\n        it(\"should work between range 0 and 10 by step 1\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    seq: \"\",\n                    args: [\n                        {\n                            \"@for\": {\n                                from: 0,\n                                to: {\n                                    \"@func\": {\n                                        code: function () {\n                                            return Bluebird.delay(100).then(function () {\n                                                return 10;\n                                            });\n                                        }\n                                    }\n                                },\n                                args: \"= this.seq = this.seq + this.i\"\n                            }\n                        },\n                        \"= this.seq\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isString(result));\n                    assert.equal(result, \"0123456789\");\n                }).nodeify(done);\n        });\n\n        it(\"should work between range 10 downto 4 by step -2\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    seq: \"\",\n                    r: null,\n                    args: [\n                        {\n                            \"@for\": {\n                                from: 10,\n                                to: {\n                                    \"@func\": {\n                                        code: function () {\n                                            return Bluebird.delay(100).then(function () {\n                                                return 4;\n                                            });\n                                        }\n                                    }\n                                },\n                                step: -2,\n                                varName: \"klow\",\n                                args: \"= this.seq += this.klow\",\n                                \"@to\": \"r\"\n                            }\n                        },\n                        \"= { v: this.seq, r: this.r }\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isObject(result));\n                    assert.equal(result.v, \"1086\");\n                    assert.equal(result.r, \"1086\");\n                }).nodeify(done);\n        });\n    });\n\n    describe(\"ForEach\", function () {\n        it(\"should work non parallel\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    seq: {\n                        \"@func\": {\n                            code: function () {\n                                return [1, 2, 3, 4, 5, 6];\n                            }\n                        }\n                    },\n                    result: \"\",\n                    args: [\n                        {\n                            \"@forEach\": {\n                                items: \"= this.seq\",\n                                args: \"= this.result += this.item\"\n                            }\n                        },\n                        \"= this.result\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isString(result));\n                    assert.equal(result, \"123456\");\n                }).nodeify(done);\n        });\n\n        it(\"should work parallel non scheduled\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    seq: {\n                        \"@func\": {\n                            code: function () {\n                                return [1, 2, 3, 4, 5, 6];\n                            }\n                        }\n                    },\n                    result: \"\",\n                    args: [\n                        {\n                            \"@forEach\": {\n                                parallel: true,\n                                varName: \"klow\",\n                                items: \"= this.seq\",\n                                args: \"= this.result += this.klow\"\n                            }\n                        },\n                        \"= this.result\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isString(result));\n                    assert.equal(result, \"123456\");\n                }).nodeify(done);\n        });\n\n        it(\"should work parallel scheduled\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    seq: \"function () { return [1, 2, 3, 4, 5, 6]; }\",\n                    result: [],\n                    args: [\n                        {\n                            \"@forEach\": {\n                                parallel: true,\n                                varName: \"klow\",\n                                items: \"= this.seq\",\n                                args: function () {\n                                    let self = this;\n                                    return Bluebird.delay(Math.random() * 100)\n                                        .then(function () {\n                                            self.result.push(self.klow);\n                                        });\n                                }\n                            }\n                        },\n                        \"= this.result\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isArray(result));\n                    assert.equal(result.length, 6);\n                    assert.equal(_(result).sum(), 6 + 5 + 4 + 3 + 2 + 1);\n                }).nodeify(done);\n        });\n\n        it(\"should work with generators non-parallel\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    result: [],\n                    stuff: {\n                        val: -1\n                    },\n                    args: [\n                        {\n                            \"@forEach\": {\n                                items: {\n                                    \"@func\": {\n                                        args: \"= this.stuff\",\n                                        code: function* (stuff) {\n                                            yield -1 * stuff.val;\n                                            yield 2;\n                                            yield 3;\n                                            yield stuff.val;\n                                        }\n                                    }\n                                },\n                                args: function () {\n                                    if (this.stuff.val === -1) {\n                                        this.stuff.val = 4;\n                                    }\n                                    this.result.push(this.item);\n                                }\n                            }\n                        },\n                        \"= this.result\"\n                    ]\n                }\n            });\n\n            engine.invoke().then(\n                function (result) {\n                    assert(_.isArray(result));\n                    assert.equal(result.length, 4);\n                    assert.equal(result[0], 1);\n                    assert.equal(result[1], 2);\n                    assert.equal(result[2], 3);\n                    assert.equal(result[3], 4);\n                }).nodeify(done);\n        });\n\n        it(\"should throw with generators\", function (done) {\n            let engine = new ActivityExecutionEngine({\n                \"@block\": {\n                    result: [],\n                    stuff: {\n                        val: -1\n                    },\n                    args: [\n                        {\n                            \"@forEach\": {\n                                parallel: true,\n                                items: {\n                                    \"@func\": {\n                                        args: \"= this.stuff\",\n                                        code: function* (stuff) {\n                                            yield -1 * stuff.val;\n                                            yield 2;\n                                            yield 3;\n                                            yield stuff.val;\n                                        }\n                                    }\n                                },\n                                args: function () {\n                                    if (this.stuff.val === -1) {\n                                        this.stuff.val = 4;\n                                    }\n                                    this.result.push(this.item);\n                                }\n                            }\n                        },\n                        \"= this.result\"\n                    ]\n                }\n            });\n\n            engine.invoke()\n                .then(function () {\n                    assert(false);\n                },\n                function(e) {\n                    assert(e instanceof errors.ActivityRuntimeError);\n                    assert(/not supported/.test(e.message));\n                }).nodeify(done);\n        });\n    });\n});"],"sourceRoot":"/source/"}