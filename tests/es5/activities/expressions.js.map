{"version":3,"sources":["activities/expressions.js"],"names":[],"mappings":"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","file":"activities/expressions.js","sourcesContent":["\"use strict\";\n\n/* global describe,it */\n\nlet wf4node = require(\"../../../\");\nlet Func = wf4node.activities.Func;\nlet activityMarkup = wf4node.activities.activityMarkup;\nlet ActivityExecutionEngine = wf4node.activities.ActivityExecutionEngine;\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\nlet Block = wf4node.activities.Block;\nlet _ = require(\"lodash\");\nlet Expression = wf4node.activities.Expression;\n\ndescribe(\"expressions\", function () {\n    describe(\"Expression\", function () {\n        it(\"should multiply two numbers\", function (done) {\n            let expr = new Expression();\n            expr.expr = \"this.v * this.v\";\n            let block = new Block();\n            block.v = 2;\n            block.args = [expr];\n\n            let engine = new ActivityExecutionEngine(block);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, 4);\n                }).nodeify(done);\n        });\n\n        it(\"should works from markup\", function (done) {\n            let block = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        v: 2,\n                        args: [\n                            \"= this.v * this.v\"\n                        ]\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(block);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, 4);\n                }).nodeify(done);\n        });\n\n        it(\"should access parent\", function (done) {\n            let block = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        v: 2,\n                        args: [\n                            {\n                                \"@func\": {\n                                    args: [ \"= this.v\", \"= this.$parent.v  \" ],\n                                    code: function(a, b) {\n                                        return a + b;\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(block);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, 4);\n                }).nodeify(done);\n        });\n\n        it(\"should evaluate lodash\", function (done) {\n            let block = activityMarkup.parse(\n                {\n                    \"@block\": {\n                        id: \"me\",\n                        v: 2.11,\n                        args: [\n                            {\n                                \"@func\": {\n                                    args: [ \"= this.v\", \"= this.$parent.v  \", \"= _.round(this.me.v)\" ],\n                                    code: function(a, b, c) {\n                                        return a + b + c;\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                });\n\n            let engine = new ActivityExecutionEngine(block);\n\n            engine.invoke().then(\n                function (result) {\n                    assert.equal(result, 2.11 + 2.11 + 2);\n                }).nodeify(done);\n        });\n    });\n});"],"sourceRoot":"/source/"}