{"version":3,"sources":["common/simpleProxy.js"],"names":[],"mappings":"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","file":"common/simpleProxy.js","sourcesContent":["\"use strict\";\nlet _ = require(\"lodash\");\nlet assert = require(\"better-assert\");\n\nfunction SimpleProxy(backend) {\n    assert(_.isObject(backend));\n    let self = this;\n\n    Object.defineProperty(this, \"_backend\", {\n        enumerable: false,\n        value: backend\n    });\n    Object.defineProperty(this, \"_backendKeys\", {\n        enumerable: false,\n        writable: false,\n        value: []\n    });\n    Object.defineProperty(this, \"$keys\", {\n        enumerable: false,\n        get: function () {\n            return backend.getKeys(self);\n        }\n    });\n    this.update(SimpleProxy.updateMode.init);\n}\n\nSimpleProxy.updateMode = {\n    twoWay: 0,\n    oneWay: 1,\n    init: 2\n};\n\nObject.defineProperties(SimpleProxy.prototype, {\n    _skipKeys: {\n        enumerable: false,\n        writable: false,\n        value: new Set([\"getKeys\", \"getValue\", \"setValue\"])\n    },\n    update: {\n        enumerable: false,\n        writable: false,\n        value: function(mode) {\n            let self = this;\n            if (mode === SimpleProxy.updateMode.init) {\n                for (let newKey of this._backend.getKeys(this)) {\n                    if (_.isUndefined(this[newKey])) { // This makes the list as unique\n                        this._backendKeys.push(newKey);\n                        Object.defineProperty(\n                            self,\n                            newKey,\n                            {\n                                enumerable: true,\n                                configurable: true,\n                                get: function () {\n                                    return self._backend.getValue(self, newKey);\n                                },\n                                set: function (value) {\n                                    self._backend.setValue(self, newKey, value);\n                                }\n                            }\n                        );\n                    }\n                }\n            }\n            else if (mode === SimpleProxy.updateMode.oneWay) {\n                let currBackendKeys = new Set(this._backend.getKeys(this));\n                for (let key in this) {\n                    if (!currBackendKeys.has(key)) {\n                        // new key on proxy, and not defined on backend:\n                        this._backend.setValue(self, key, this[key]);\n                        Object.defineProperty(\n                            self,\n                            key,\n                            {\n                                enumerable: true,\n                                configurable: true,\n                                get: function () {\n                                    return self._backend.getValue(self, key);\n                                },\n                                set: function (value) {\n                                    self._backend.setValue(self, key, value);\n                                }\n                            }\n                        );\n                        this._backendKeys.push(key);\n                    }\n                    else {\n                        currBackendKeys.delete(key);\n                    }\n                }\n                for (let oldKey of currBackendKeys) {\n                    delete this[oldKey];\n                }\n            }\n            else {\n                let prevBackendKeys = new Set(this._backendKeys);\n                let currBackendKeys = new Set(this._backend.getKeys(this));\n                let backedKeys = new Set();\n\n                for (let key in this) {\n                    if (!prevBackendKeys.has(key) && !currBackendKeys.has(key)) {\n                        // new key on proxy, and not defined on backend:\n                        this._backend.setValue(self, key, this[key]);\n                        Object.defineProperty(\n                            self,\n                            key,\n                            {\n                                enumerable: true,\n                                configurable: true,\n                                get: function () {\n                                    return self._backend.getValue(self, key);\n                                },\n                                set: function (value) {\n                                    self._backend.setValue(self, key, value);\n                                }\n                            }\n                        );\n                        backedKeys.add(key);\n                    }\n                }\n\n                this._backendKeys.length = 0;\n                for (let newKey of currBackendKeys) {\n                    if (!this._skipKeys.has(newKey)) {\n                        this._backendKeys.push(newKey);\n                        if (!prevBackendKeys.has(newKey) && !backedKeys.has(newKey)) {\n                            Object.defineProperty(\n                                self,\n                                newKey,\n                                {\n                                    enumerable: true,\n                                    configurable: true,\n                                    get: function () {\n                                        return self._backend.getValue(self, newKey);\n                                    },\n                                    set: function (value) {\n                                        self._backend.setValue(self, newKey, value);\n                                    }\n                                }\n                            );\n                        }\n                        else {\n                            prevBackendKeys.delete(newKey);\n                        }\n                    }\n                }\n                for (let oldKey of prevBackendKeys) {\n                    delete this[oldKey];\n                }\n            }\n        }\n    },\n    delete: {\n        enumerable: false,\n        writable: false,\n        value: function(key) {\n            delete this[key];\n            this._backend.delete(this, key);\n        }\n    }\n});\n\nmodule.exports = SimpleProxy;"],"sourceRoot":"/source/"}