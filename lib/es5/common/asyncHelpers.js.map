{"version":3,"names":[],"mappings":"","sources":["common/asyncHelpers.js"],"sourcesContent":["var Bluebird = require(\"bluebird\");\nvar is = require(\"./is\");\n\nvar async = Bluebird.coroutine;\n\nvar asyncHelpers = {\n    async: async,\n\n    aggressiveRetry: async(function* (asyncFunc, until, timeout, timeoutError) {\n        timeoutError = timeoutError || function () {\n            return new Error(\"Retry timeout.\");\n        };\n        var startTime = new Date().getTime();\n        var waitTime = 0;\n        var waitCount = 0;\n        var result = yield asyncFunc();\n        while (!until(result)) {\n            if (new Date().getTime() - startTime > timeout) throw timeoutError();\n            yield Bluebird.delay(waitTime);\n            waitTime = Math.min(++waitCount * 250, 3000);\n            result = yield asyncFunc();\n        }\n        return result;\n    })\n}\n\nmodule.exports = asyncHelpers;"],"file":"common/asyncHelpers.js","sourceRoot":"/source/"}