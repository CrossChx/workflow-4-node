{"version":3,"names":[],"mappings":"","sources":["common/asyncHelpers.js"],"sourcesContent":["var Bluebird = require(\"bluebird\");\r\nvar is = require(\"./is\");\r\n\r\nvar async = Bluebird.coroutine;\r\n\r\nvar asyncHelpers = {\r\n    async: async,\r\n\r\n    aggressiveRetry: async(function* (asyncFunc, until, timeout, timeoutError) {\r\n        timeoutError = timeoutError || function () {\r\n            return new Error(\"Retry timeout.\");\r\n        };\r\n        var startTime = new Date().getTime();\r\n        var waitTime = 0;\r\n        var waitCount = 0;\r\n        var result = yield asyncFunc();\r\n        while (!until(result)) {\r\n            if (new Date().getTime() - startTime > timeout) throw timeoutError();\r\n            yield Bluebird.delay(waitTime);\r\n            waitTime = Math.min(++waitCount * 250, 3000);\r\n            result = yield asyncFunc();\r\n        }\r\n        return result;\r\n    })\r\n}\r\n\r\nmodule.exports = asyncHelpers;"],"file":"common/asyncHelpers.js","sourceRoot":"/source/"}