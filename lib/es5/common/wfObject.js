"use strict";
var Guid = require("guid");
var _ = require("lodash");
function WFObject(initArgs) {
  if (_.isPlainObject(initArgs))
    _.extend(this, initArgs);
  this._instanceId = Guid.create().toString();
}
Object.defineProperties(WFObject.prototype, {_keys: {
    value: null,
    writable: true,
    enumerable: false
  }});
WFObject.prototype._getMapKey = function() {
  return this._instanceId;
};
WFObject.prototype.getKeys = function() {
  if (!this._keys) {
    var keys = [];
    for (var k in this)
      keys.push(k);
    this._keys = keys;
  }
  return this._keys;
};
WFObject.prototype.clearKeys = function() {
  this._keys = null;
};
module.exports = WFObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndmT2JqZWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFFekIsT0FBUyxTQUFPLENBQUUsUUFBTyxDQUFHO0FBQ3hCLEtBQUksQ0FBQSxjQUFjLEFBQUMsQ0FBQyxRQUFPLENBQUM7QUFBRyxJQUFBLE9BQU8sQUFBQyxDQUFDLElBQUcsQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUFBLEFBQ3ZELEtBQUcsWUFBWSxFQUFJLENBQUEsSUFBRyxPQUFPLEFBQUMsRUFBQyxTQUFTLEFBQUMsRUFBQyxDQUFDO0FBQy9DO0FBQUEsQUFFQSxLQUFLLGlCQUFpQixBQUFDLENBQUMsUUFBTyxVQUFVLENBQUcsRUFDeEMsS0FBSSxDQUFHO0FBQ0gsUUFBSSxDQUFHLEtBQUc7QUFDVixXQUFPLENBQUcsS0FBRztBQUNiLGFBQVMsQ0FBRyxNQUFJO0FBQUEsRUFDcEIsQ0FDSixDQUFDLENBQUE7QUFFRCxPQUFPLFVBQVUsV0FBVyxFQUFJLFVBQVUsQUFBRCxDQUFHO0FBQ3hDLE9BQU8sQ0FBQSxJQUFHLFlBQVksQ0FBQztBQUMzQixDQUFBO0FBRUEsT0FBTyxVQUFVLFFBQVEsRUFBSSxVQUFVLEFBQUQsQ0FBRztBQUNyQyxLQUFJLENBQUMsSUFBRyxNQUFNLENBQUc7QUFDYixBQUFJLE1BQUEsQ0FBQSxJQUFHLEVBQUksR0FBQyxDQUFDO0FBQ2IsUUFBUyxHQUFBLENBQUEsQ0FBQSxDQUFBLEVBQUssS0FBRztBQUFHLFNBQUcsS0FBSyxBQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFBQSxBQUNoQyxPQUFHLE1BQU0sRUFBSSxLQUFHLENBQUM7RUFDckI7QUFBQSxBQUNBLE9BQU8sQ0FBQSxJQUFHLE1BQU0sQ0FBQztBQUNyQixDQUFBO0FBRUEsT0FBTyxVQUFVLFVBQVUsRUFBSSxVQUFVLEFBQUQsQ0FBRztBQUN2QyxLQUFHLE1BQU0sRUFBSSxLQUFHLENBQUM7QUFDckIsQ0FBQTtBQUVBLEtBQUssUUFBUSxFQUFJLFNBQU8sQ0FBQztBQUFBIiwiZmlsZSI6ImNvbW1vbi93Zk9iamVjdC5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsidmFyIEd1aWQgPSByZXF1aXJlKFwiZ3VpZFwiKTtcclxudmFyIF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xyXG5cclxuZnVuY3Rpb24gV0ZPYmplY3QoaW5pdEFyZ3MpIHtcclxuICAgIGlmIChfLmlzUGxhaW5PYmplY3QoaW5pdEFyZ3MpKSBfLmV4dGVuZCh0aGlzLCBpbml0QXJncyk7XHJcbiAgICB0aGlzLl9pbnN0YW5jZUlkID0gR3VpZC5jcmVhdGUoKS50b1N0cmluZygpO1xyXG59XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhXRk9iamVjdC5wcm90b3R5cGUsIHtcclxuICAgIF9rZXlzOiB7XHJcbiAgICAgICAgdmFsdWU6IG51bGwsXHJcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2VcclxuICAgIH1cclxufSlcclxuXHJcbldGT2JqZWN0LnByb3RvdHlwZS5fZ2V0TWFwS2V5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlSWQ7XHJcbn1cclxuXHJcbldGT2JqZWN0LnByb3RvdHlwZS5nZXRLZXlzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCF0aGlzLl9rZXlzKSB7XHJcbiAgICAgICAgdmFyIGtleXMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBrIGluIHRoaXMpIGtleXMucHVzaChrKTtcclxuICAgICAgICB0aGlzLl9rZXlzID0ga2V5cztcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLl9rZXlzO1xyXG59XHJcblxyXG5XRk9iamVjdC5wcm90b3R5cGUuY2xlYXJLZXlzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5fa2V5cyA9IG51bGw7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gV0ZPYmplY3Q7Il19
