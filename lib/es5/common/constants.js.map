{"version":3,"names":[],"mappings":"","sources":["common/constants.js"],"sourcesContent":["\"use strict\";\n\nlet _ = require(\"lodash\");\n\nconst maxLen = \"collectingCompletedBookmark\".length;\nconst identity = \"-:\\|$WF4N$|/:-\";\n\nfunction make(name) {\n    let inner = _.snakeCase(name).toUpperCase();\n    if (inner.length > maxLen) {\n        inner = inner.substr(0, maxLen);\n    }\n    else while (inner.length < maxLen) {\n        inner += \"_\";\n    }\n    return identity + inner;\n}\n\nlet constants = {\n    identity: identity,\n    markers: {\n        valueCollectedBookmark: make(\"mValueCollectedBookmark\"),\n        collectingCompletedBookmark: make(\"mCollectingCompletedBookmark\"),\n        beginMethodBookmark: make(\"mBeginMethodBookmark\"),\n        activityProperty: make(\"mActivityProperty\"),\n        activityInstance: make(\"mActivityInstance\"),\n        keySeparator: make(\"mKeySeparator\"),\n        nope: make(\"mNope\"),\n        delayToMethodNamePrefix: make(\"mDelayToMethodNamePrefix\"),\n        $parent: make(\"mParent\")\n    },\n    ids: {\n        initialScope: make(\"mInitialScope\")\n    },\n    types: {\n        error: make(\"mError\"),\n        schedulingState: make(\"mSchedulingState\"),\n        date: make(\"mDate\"),\n        set: make(\"mSet\"),\n        map: make(\"mMap\"),\n        rex: make(\"mRex\"),\n        object: make(\"mObject\")\n    }\n};\n\nmodule.exports = constants;\n"],"file":"common/constants.js","sourceRoot":"/source/"}