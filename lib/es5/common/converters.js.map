{"version":3,"names":[],"mappings":"","sources":["common/converters.js"],"sourcesContent":["\"use strict\";\r\nlet assert = require(\"better-assert\");\r\nlet _ = require(\"lodash\");\r\n\r\nmodule.exports = {\r\n    mapToArray: function (map) {\r\n        if (!map) {\r\n            return null;\r\n        }\r\n        assert(map instanceof Map);\r\n        let json = [];\r\n        for (let kvp of map.entries()) {\r\n            json.push(kvp);\r\n        }\r\n        return json;\r\n    },\r\n    arrayToMap: function (json) {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        assert(_.isArray(json));\r\n        let map = new Map();\r\n        for (let kvp of json) {\r\n            map.set(kvp[0], kvp[1]);\r\n        }\r\n        return map;\r\n    },\r\n    setToArray: function (set) {\r\n        if (!set) {\r\n            return null;\r\n        }\r\n        assert(set instanceof Set);\r\n        let json = [];\r\n        for (let val of set.values()) {\r\n            json.push(val);\r\n        }\r\n        return json;\r\n    },\r\n    arrayToSet: function (json) {\r\n        if (!json) {\r\n            return null;\r\n        }\r\n        assert(_.isArray(json));\r\n        let set = new Set();\r\n        for (let val of json) {\r\n            set.add(val);\r\n        }\r\n        return set;\r\n    }\r\n};"],"file":"common/converters.js","sourceRoot":"/source/"}