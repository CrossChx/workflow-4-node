{"version":3,"names":[],"mappings":"","sources":["common/errors.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet util = require(\"util\");\r\nlet constants = require(\"./constants\");\r\n\r\nfunction ActivityStateExceptionError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(ActivityStateExceptionError, Error);\r\n\r\nfunction Cancelled() {\r\n    ActivityStateExceptionError.call(this, \"Activity execution has been cancelled.\");\r\n}\r\n\r\nutil.inherits(Cancelled, ActivityStateExceptionError);\r\n\r\nfunction Idle(message) {\r\n    ActivityStateExceptionError.call(this, message || \"Activity is idle.\");\r\n}\r\n\r\nutil.inherits(Idle, ActivityStateExceptionError);\r\n\r\nfunction ActivityMarkupError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(ActivityMarkupError, Error);\r\n\r\nfunction ActivityRuntimeError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(ActivityRuntimeError, Error);\r\n\r\nfunction BookmarkNotFoundError(message) {\r\n    ActivityRuntimeError.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(BookmarkNotFoundError, ActivityRuntimeError);\r\n\r\nfunction AggregateError(errors) {\r\n    let message = \"\";\r\n    if (errors.length) {\r\n        message = \" First: \" + errors[0].message;\r\n    }\r\n    ActivityRuntimeError.call(this, \"Many errors occurred.\" + message);\r\n    this.errors = errors;\r\n}\r\n\r\nutil.inherits(AggregateError, ActivityRuntimeError);\r\n\r\nfunction ValidationError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(ValidationError, Error);\r\n\r\nfunction TimeoutError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(TimeoutError, Error);\r\n\r\nfunction WorkflowError(message) {\r\n    Error.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(WorkflowError, Error);\r\n\r\nfunction MethodNotFoundError(message) {\r\n    WorkflowError.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(MethodNotFoundError, WorkflowError);\r\n\r\nfunction MethodIsNotAccessibleError(message) {\r\n    WorkflowError.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(MethodIsNotAccessibleError, WorkflowError);\r\n\r\nfunction WorkflowNotFoundError(message) {\r\n    WorkflowError.call(this);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.message = message;\r\n}\r\n\r\nutil.inherits(WorkflowNotFoundError, WorkflowError);\r\n\r\nmodule.exports.ActivityStateExceptionError = ActivityStateExceptionError;\r\nmodule.exports.ActivityExceptionError = ActivityStateExceptionError;\r\nmodule.exports.Cancelled = Cancelled;\r\nmodule.exports.Idle = Idle;\r\nmodule.exports.AggregateError = AggregateError;\r\nmodule.exports.ActivityMarkupError = ActivityMarkupError;\r\nmodule.exports.ActivityRuntimeError = ActivityRuntimeError;\r\nmodule.exports.ValidationError = ValidationError;\r\nmodule.exports.TimeoutError = TimeoutError;\r\nmodule.exports.WorkflowError = WorkflowError;\r\nmodule.exports.MethodNotFoundError = MethodNotFoundError;\r\nmodule.exports.MethodIsNotAccessibleError = MethodIsNotAccessibleError;\r\nmodule.exports.WorkflowNotFoundError = WorkflowNotFoundError;\r\nmodule.exports.BookmarkNotFoundError = BookmarkNotFoundError;"],"file":"common/errors.js","sourceRoot":"/source/"}