{"version":3,"sources":["activities/scopeTree.js"],"names":[],"mappings":"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","file":"activities/scopeTree.js","sourcesContent":["\"use strict\";\n\nlet ScopeNode = require(\"./scopeNode\");\nlet constants = require(\"../common/constants\");\nlet _ = require(\"lodash\");\nlet specStrings = require(\"../common/specStrings\");\nlet errors = require(\"../common/errors\");\nlet is = require(\"../common/is\");\nlet scope = require(\"./scope\");\nlet Expression = require(\"./expression\");\nlet scopeSerializer = require(\"./scopeSerializer\");\n\nfunction ScopeTree(initialScope, getActivityByIdFunc) {\n    this._initialNode = new ScopeNode(constants.ids.initialScope, initialScope);\n    this._nodes = new Map();\n    this._nodes.set(this._initialNode.instanceId, this._initialNode);\n    this._getActivityById = getActivityByIdFunc;\n}\n\n/* SERIALIZATION */\nScopeTree.prototype.getExecutionState = function (execContext, enablePromotions, serializer) {\n    return scopeSerializer.serialize(execContext, this._getActivityById, enablePromotions, this._nodes.values(), serializer);\n};\n\nScopeTree.prototype.setState = function (json, serializer) {\n    if (!_.isArray(json)) {\n        throw new TypeError(\"Array argument expected.\");\n    }\n\n    if (this._nodes.count !== 1) {\n        let prev = this._nodes;\n        this._nodes = new Map();\n        this._nodes.set(constants.ids.initialScope, prev.get(constants.ids.initialScope));\n        this._initialNode.clearChildren();\n    }\n\n    try {\n        // Create nodes:\n        for (let node of scopeSerializer.deserializeNodes(this._getActivityById, json, serializer)) {\n            this._nodes.set(node.instanceId, node);\n        }\n        // Setup Tree:\n        for (let item of json) {\n            this._nodes.get(item.instanceId).parent = this._nodes.get(item.parentId);\n        }\n        // Setup specials:\n        for (let node of this._nodes.values()) {\n            for (let key of node._keys) {\n                let value = node.scopePart[key];\n                if (value && value.$type === constants.markers.$parent) {\n                    let parentScope = scope.create(this, this._nodes.get(value.id), true);\n                    parentScope.__marker = constants.markers.$parent;\n                    node.scopePart[key] = parentScope;\n                }\n            }\n        }\n    }\n    catch (e) {\n        throw new errors.WorkflowError(\"Cannot restore state tree, because data is corrupt. Inner error: \" + e.stack);\n    }\n};\n/* SERIALIZATION */\n\n/* PROXY */\n\nScopeTree.prototype._getRealParent = function (currentNode) {\n    let parent = currentNode.parent;\n    if (currentNode.activity instanceof Expression) {\n        parent = parent.parent;\n    }\n    return parent;\n};\n\nScopeTree.prototype.hasProperty = function (currentNode, name) {\n    if (name === \"$parent\") {\n        let parent = this._getRealParent(currentNode);\n        if (parent && parent !== this._initialNode) {\n            return !!parent;\n        }\n    }\n\n    if (name === \"$activity\") {\n        return true;\n    }\n\n    let found = false;\n    for (let node of currentNode.walkToRoot()) {\n        if (node.isPropertyExists(name)) {\n            found = true;\n            break;\n        }\n        if (node.userId === name) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n};\n\nScopeTree.prototype.getValue = function (currentNode, name) {\n    let self = this;\n\n    if (name === \"$parent\") {\n        let parent = this._getRealParent(currentNode);\n        if (parent && parent !== this._initialNode) {\n            let parentScope = scope.create(this, parent);\n            parentScope.__marker = constants.markers.$parent;\n            return parentScope;\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    if (name === \"$activity\") {\n        return currentNode.activity;\n    }\n\n    let canReturnPrivate = true;\n    let value;\n    for (let node of currentNode.walkToRoot()) {\n        if (!_.isUndefined(value = node.getPropertyValue(name, canReturnPrivate))) {\n            break;\n        }\n        if (node.userId === name && node !== currentNode) {\n            value = scope.create(self, node);\n            break;\n        }\n        canReturnPrivate = false;\n    }\n    return value;\n};\n\nScopeTree.prototype.setValue = function (currentNode, name, value, noWalk) {\n    if (this.isOnInitial) {\n        throw new Error(\"Cannot set property of the initial scope.\");\n    }\n\n    let self = this;\n    let canSetPrivate = true;\n    let setDone = false;\n    for (let node of currentNode.walkToRoot(noWalk)) {\n        if (node === self._initialNode) {\n            break;\n        }\n        if (node.setPropertyValue(name, value, canSetPrivate)) {\n            setDone = true;\n            break;\n        }\n        canSetPrivate = false;\n    }\n\n    if (!setDone) {\n        currentNode.createPropertyWithValue(name, value);\n    }\n\n    return true;\n};\n\nScopeTree.prototype.deleteProperty = function (currentNode, name, noWalk) {\n    let self = this;\n    let canDeletePrivate = true;\n    let deleteDone = false;\n    for (let node of currentNode.walkToRoot(noWalk)) {\n        if (node === self._initialNode) {\n            break;\n        }\n        if (node.deleteProperty(name, canDeletePrivate)) {\n            deleteDone = true;\n            break;\n        }\n        canDeletePrivate = false;\n    }\n\n    return deleteDone;\n};\n\nScopeTree.prototype.enumeratePropertyNames = function* (currentNode, noWalk) {\n    let canEnumeratePrivate = true;\n    let node = currentNode;\n    do\n    {\n        yield \"$parent\";\n        yield \"$activity\";\n        if (node.userId) {\n            yield node.userId;\n        }\n        yield* node.enumeratePropertyNames(canEnumeratePrivate);\n        canEnumeratePrivate = false;\n\n        if (noWalk) {\n            break;\n        }\n\n        node = node.parent;\n    }\n    while (node);\n};\n/* PROXY */\n\n/* WALK */\nScopeTree.prototype.next = function (nodeInstanceId, childInstanceId, scopePart, childUserId) {\n    let currentNode = this._getNodeByExternalId(nodeInstanceId);\n    let nextNode = new ScopeNode(childInstanceId, scopePart, childUserId, this._getActivityById(childInstanceId));\n    currentNode.addChild(nextNode);\n    this._nodes.set(childInstanceId, nextNode);\n    return scope.create(this, nextNode);\n};\n\nScopeTree.prototype.back = function (nodeId, keepItem) {\n    let currentNode = this._getNodeByExternalId(nodeId);\n    if (currentNode === this._initialNode) {\n        throw new Error(\"Cannot go back because current scope is the initial scope.\");\n    }\n    let toRemove = currentNode;\n    let goTo = toRemove.parent;\n    currentNode = goTo;\n    if (!keepItem) {\n        goTo.removeChild(toRemove);\n        this._nodes.delete(toRemove.instanceId);\n    }\n    return scope.create(this, currentNode);\n};\n\nScopeTree.prototype.find = function (nodeId) {\n    let currentNode = this._getNodeByExternalId(nodeId);\n    return scope.create(this, currentNode);\n};\n\nScopeTree.prototype.findPart = function (nodeId) {\n    let currentNode = this._getNodeByExternalId(nodeId);\n    if (currentNode !== this._initialNode) {\n        return currentNode.scopePart;\n    }\n    return null;\n};\n/* WALK */\n\nScopeTree.prototype._getNodeByExternalId = function (id) {\n    if (id === null) {\n        return this._initialNode;\n    }\n    let node = this._nodes.get(id);\n    if (!node) {\n        throw new Error(\"Scope node for activity id '\" + id + \"' is not found.\");\n    }\n    return node;\n};\n\nScopeTree.prototype.deleteScopePart = function (currentNodeId, id) {\n    let self = this;\n    let currentNode = this._getNodeByExternalId(currentNodeId);\n    let delNode = self._nodes.get(id);\n    if (delNode) {\n        if (delNode === self._initialNode) {\n            throw new Error(\"Cannot delete the initial scope.\");\n        }\n        let found = false;\n        for (let node of delNode.walkToRoot()) {\n            if (node === currentNode) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            throw new Error(\"Cannot delete scope, because current active scope is inside in it.\");\n        }\n        delNode.parent.removeChild(delNode);\n        self._removeAllNodes(delNode);\n    }\n};\n\nScopeTree.prototype._removeAllNodes = function (node) {\n    let self = this;\n\n    self._nodes.delete(node.instanceId);\n    for (let c of node.children()) {\n        self._removeAllNodes(c);\n    }\n};\n\nmodule.exports = ScopeTree;"],"sourceRoot":"/source/"}