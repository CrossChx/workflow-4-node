{"version":3,"names":[],"mappings":"","sources":["activities/if.js"],"sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet Block = require(\"./block\");\nlet _ = require(\"lodash\");\n\nfunction If() {\n    Activity.call(this);\n\n    this.arrayProperties.add(\"then\");\n    this.arrayProperties.add(\"else\");\n\n    this.condition = null;\n    this.then = null;\n    this.else = null;\n}\n\nutil.inherits(If, Activity);\n\nIf.prototype.initializeStructure = function() {\n    if (this.then) {\n        let prev = this.then;\n        this.then = new Block();\n        this.then.args = prev;\n    }\n    if (this.else) {\n        let prev = this.else;\n        this.else = new Block();\n        this.else.args = prev;\n    }\n};\n\nIf.prototype.run = function (callContext, args) {\n    let condition = this.condition;\n    if (condition) {\n        callContext.schedule(condition, \"_conditionGot\");\n    }\n    else {\n        callContext.complete();\n    }\n};\n\nIf.prototype._conditionGot = function (callContext, reason, result) {\n    if (reason === Activity.states.complete) {\n        if (result) {\n            let then = this.then;\n            if (then) {\n                callContext.schedule(then, \"_bodyFinished\");\n                return;\n            }\n        }\n        else {\n            let _else = this.else;\n            if (_else) {\n                callContext.schedule(_else, \"_bodyFinished\");\n                return;\n            }\n        }\n        callContext.complete();\n    }\n    else {\n        callContext.end(reason, result);\n    }\n};\n\nIf.prototype._bodyFinished = function (callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nmodule.exports = If;\n"],"file":"activities/if.js","sourceRoot":"/source/"}