{"version":3,"sources":["activities/if.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,SAAS,EAAE,GAAG;AACV,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEpB,QAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjC,QAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;AAEjC,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACpB;;AAED,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;;AAE5B,EAAE,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAW;AAC1C,QAAI,IAAI,CAAC,IAAI,EAAE;AACX,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,YAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;AACxB,YAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACzB;AACD,QAAI,IAAI,CAAC,IAAI,EAAE;AACX,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,YAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;AACxB,YAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACzB;CACJ,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AAC5C,QAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,QAAI,SAAS,EAAE;AACX,mBAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;KACpD,MACI;AACD,mBAAW,CAAC,QAAQ,EAAE,CAAC;KAC1B;CACJ,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAChE,QAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACrC,YAAI,MAAM,EAAE;AACR,gBAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,gBAAI,IAAI,EAAE;AACN,2BAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC5C,uBAAO;aACV;SACJ,MACI;AACD,gBAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB,gBAAI,KAAK,EAAE;AACP,2BAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AAC7C,uBAAO;aACV;SACJ;AACD,mBAAW,CAAC,QAAQ,EAAE,CAAC;KAC1B,MACI;AACD,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACnC;CACJ,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAChE,eAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACnC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC","file":"activities/if.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet Block = require(\"./block\");\nlet _ = require(\"lodash\");\n\nfunction If() {\n    Activity.call(this);\n\n    this.arrayProperties.add(\"then\");\n    this.arrayProperties.add(\"else\");\n\n    this.condition = null;\n    this.then = null;\n    this.else = null;\n}\n\nutil.inherits(If, Activity);\n\nIf.prototype.initializeStructure = function() {\n    if (this.then) {\n        let prev = this.then;\n        this.then = new Block();\n        this.then.args = prev;\n    }\n    if (this.else) {\n        let prev = this.else;\n        this.else = new Block();\n        this.else.args = prev;\n    }\n};\n\nIf.prototype.run = function (callContext, args) {\n    let condition = this.condition;\n    if (condition) {\n        callContext.schedule(condition, \"_conditionGot\");\n    }\n    else {\n        callContext.complete();\n    }\n};\n\nIf.prototype._conditionGot = function (callContext, reason, result) {\n    if (reason === Activity.states.complete) {\n        if (result) {\n            let then = this.then;\n            if (then) {\n                callContext.schedule(then, \"_bodyFinished\");\n                return;\n            }\n        }\n        else {\n            let _else = this.else;\n            if (_else) {\n                callContext.schedule(_else, \"_bodyFinished\");\n                return;\n            }\n        }\n        callContext.complete();\n    }\n    else {\n        callContext.end(reason, result);\n    }\n};\n\nIf.prototype._bodyFinished = function (callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nmodule.exports = If;\n"],"sourceRoot":"/source/"}