{"version":3,"sources":["activities/notEquals.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,SAAS,SAAS,GAAG;AACjB,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEpB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,EAAE,GAAG,IAAI,CAAC;AACf,QAAI,CAAC,EAAE,GAAG,IAAI,CAAC;AACf,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAI,CAAC,MAAM,GAAG,KAAK,CAAC;CACvB;;AAED,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;AAEnC,SAAS,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,WAAW,EAAE,IAAI,EAAE;AAClD,eAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;CACjE,CAAC;;AAEF,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,UAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AACvE,QAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACrC,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChC,eAAO;KACV;;AAED,QAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE;AACjE,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC7C,MACI;AACD,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC1C;CACJ,CAAC;;AAEF,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9D,eAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACnC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"activities/notEquals.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\n\nfunction NotEquals() {\n    Activity.call(this);\n\n    this.value = null;\n    this.to = null;\n    this.is = true;\n    this.isNot = false;\n    this.strict = false;\n}\n\nutil.inherits(NotEquals, Activity);\n\nNotEquals.prototype.run = function(callContext, args) {\n    callContext.schedule([this.value, this.to], \"_valueAndToGot\");\n};\n\nNotEquals.prototype._valueAndToGot = function(callContext, reason, result) {\n    if (reason !== Activity.states.complete) {\n        callContext.end(reason, result);\n        return;\n    }\n\n    if (this.strict ? result[0] === result[1] : result[0] === result[1]) {\n        callContext.schedule(this.isNot, \"_done\");\n    }\n    else {\n        callContext.schedule(this.is, \"_done\");\n    }\n};\n\nNotEquals.prototype._done = function(callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nmodule.exports = NotEquals;"],"sourceRoot":"/source/"}