{"version":3,"sources":["activities/expression.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAEzC,SAAS,UAAU,CAAC,IAAI,EAAE;AACtB,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,QAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;AACzB,QAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1C;;AAED,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;AAEpC,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AACpD,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,QAAI,IAAI,EAAE;AACN,YAAI;AACA,gBAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;AAChB,gBAAI,CAAC,CAAC,EAAE;AACJ,iBAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;aAC5D;AACD,gBAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7B,gBAAI,MAAM,KAAK,WAAW,CAAC,QAAQ,EAAE;AACjC,oBAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1B,oBAAI,CAAC,MAAM,EAAE;AACT,+BAAW,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,oBAAoB,CAAC,mCAAmC,CAAC,CAAC,CAAC;AACvF,2BAAO;iBACV;AACD,sBAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aAC9B;AACD,uBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAChC,CACD,OAAM,CAAC,EAAE;AACL,uBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB;KACJ,MACI;AACD,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC9B;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"activities/expression.js","sourcesContent":["/* jshint -W054*/\n\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet _ = require(\"lodash\");\nlet errors = require(\"../common/errors\");\n\nfunction Expression(expr) {\n    Activity.call(this);\n    this.expr = expr || null;\n    this.nonSerializedProperties.add(\"_f\");\n}\n\nutil.inherits(Expression, Activity);\n\nExpression.prototype.run = function (callContext, args) {\n    let self = this;\n    let expr = self.expr;\n    if (expr) {\n        try {\n            let f = self._f;\n            if (!f) {\n                f = self._f = new Function(\"_\", \"return (\" + expr + \")\");\n            }\n            let result = f.call(self, _);\n            if (result === callContext.activity) {\n                let parent = this.$parent;\n                if (!parent) {\n                    callContext.fail(new errors.ActivityRuntimeError(\"Exception can't reference itself.\"));\n                    return;\n                }\n                result = f.call(parent, _);\n            }\n            callContext.complete(result);\n        }\n        catch(e) {\n            callContext.fail(e);\n        }\n    }\n    else {\n        callContext.complete(null);\n    }\n};\n\nmodule.exports = Expression;\n"],"sourceRoot":"/source/"}