{"version":3,"names":[],"mappings":"","sources":["activities/expression.js"],"sourcesContent":["/* jshint -W054*/\r\n\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet util = require(\"util\");\r\nlet _ = require(\"lodash\");\r\nlet errors = require(\"../common/errors\");\r\n\r\nfunction Expression(expr) {\r\n    Activity.call(this);\r\n    this.expr = expr || null;\r\n    this.nonSerializedProperties.add(\"_f\");\r\n}\r\n\r\nutil.inherits(Expression, Activity);\r\n\r\nExpression.prototype.run = function (callContext, args) {\r\n    let self = this;\r\n    let expr = self.expr;\r\n    if (expr) {\r\n        try {\r\n            let f = self._f;\r\n            if (!f) {\r\n                f = self._f = new Function(\"_\", \"return (\" + expr + \")\");\r\n            }\r\n            let result = f.call(self, _);\r\n            if (result === callContext.activity) {\r\n                let parent = this.$parent;\r\n                if (!parent) {\r\n                    callContext.fail(new errors.ActivityRuntimeError(\"Exception can't reference itself.\"));\r\n                    return;\r\n                }\r\n                result = f.call(parent, _);\r\n            }\r\n            callContext.complete(result);\r\n        }\r\n        catch(e) {\r\n            callContext.fail(e);\r\n        }\r\n    }\r\n    else {\r\n        callContext.complete(null);\r\n    }\r\n};\r\n\r\nmodule.exports = Expression;\r\n"],"file":"activities/expression.js","sourceRoot":"/source/"}