"use strict";
var Activity = require("./activity");
var util = require("util");
var errors = require("../common/errors");
var _ = require("lodash");
function Throw() {
  Activity.call(this);
  this.error = null;
}
util.inherits(Throw, Activity);
Throw.prototype.run = function(callContext, args) {
  if (!this.error) {
    if (!_.isUndefined(this.Try_ReThrow)) {
      this.Try_ReThrow = true;
    }
    callContext.complete();
  } else {
    callContext.schedule(this.error, "_errorGot");
  }
};
Throw.prototype._errorGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return;
  }
  var e;
  if (_.isString(result)) {
    e = new Error(result);
  } else if (result instanceof Error) {
    e = result;
  } else {
    callContext.complete();
    return;
  }
  if (!_.isUndefined(this.Try_ReThrow)) {
    this.Try_ReThrow = e;
    callContext.complete();
  } else {
    callContext.fail(e);
  }
};
module.exports = Throw;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocm93LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsa0JBQWlCLENBQUMsQ0FBQztBQUN4QyxBQUFJLEVBQUEsQ0FBQSxDQUFBLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUV6QixPQUFTLE1BQUksQ0FBRSxBQUFELENBQUc7QUFDYixTQUFPLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBRW5CLEtBQUcsTUFBTSxFQUFJLEtBQUcsQ0FBQztBQUNyQjtBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxLQUFJLENBQUcsU0FBTyxDQUFDLENBQUM7QUFFOUIsSUFBSSxVQUFVLElBQUksRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUMvQyxLQUFJLENBQUMsSUFBRyxNQUFNLENBQUc7QUFDYixPQUFJLENBQUMsQ0FBQSxZQUFZLEFBQUMsQ0FBQyxJQUFHLFlBQVksQ0FBQyxDQUFHO0FBQ2xDLFNBQUcsWUFBWSxFQUFJLEtBQUcsQ0FBQztJQUMzQjtBQUFBLEFBQ0EsY0FBVSxTQUFTLEFBQUMsRUFBQyxDQUFDO0VBQzFCLEtBQ0s7QUFDRCxjQUFVLFNBQVMsQUFBQyxDQUFDLElBQUcsTUFBTSxDQUFHLFlBQVUsQ0FBQyxDQUFDO0VBQ2pEO0FBQUEsQUFDSixDQUFDO0FBRUQsSUFBSSxVQUFVLFVBQVUsRUFBSSxVQUFTLFdBQVUsQ0FBRyxDQUFBLE1BQUssQ0FBRyxDQUFBLE1BQUssQ0FBRztBQUM5RCxLQUFJLE1BQUssSUFBTSxDQUFBLFFBQU8sT0FBTyxTQUFTLENBQUc7QUFDckMsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7QUFDL0IsVUFBTTtFQUNWO0FBQUEsQUFFSSxJQUFBLENBQUEsQ0FBQSxDQUFDO0FBQ0wsS0FBSSxDQUFBLFNBQVMsQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFHO0FBQ3BCLElBQUEsRUFBSSxJQUFJLE1BQUksQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO0VBQ3pCLEtBQ0ssS0FBSSxNQUFLLFdBQWEsTUFBSSxDQUFHO0FBQzlCLElBQUEsRUFBSSxPQUFLLENBQUM7RUFDZCxLQUNLO0FBQ0QsY0FBVSxTQUFTLEFBQUMsRUFBQyxDQUFDO0FBQ3RCLFVBQU07RUFDVjtBQUFBLEFBRUEsS0FBSSxDQUFDLENBQUEsWUFBWSxBQUFDLENBQUMsSUFBRyxZQUFZLENBQUMsQ0FBRztBQUNsQyxPQUFHLFlBQVksRUFBSSxFQUFBLENBQUM7QUFDcEIsY0FBVSxTQUFTLEFBQUMsRUFBQyxDQUFDO0VBQzFCLEtBQ0s7QUFDRCxjQUFVLEtBQUssQUFBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0VBQ3ZCO0FBQUEsQUFDSixDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksTUFBSSxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy90aHJvdy5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmxldCBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuL2FjdGl2aXR5XCIpO1xubGV0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcbmxldCBlcnJvcnMgPSByZXF1aXJlKFwiLi4vY29tbW9uL2Vycm9yc1wiKTtcbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcblxuZnVuY3Rpb24gVGhyb3coKSB7XG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcblxuICAgIHRoaXMuZXJyb3IgPSBudWxsO1xufVxuXG51dGlsLmluaGVyaXRzKFRocm93LCBBY3Rpdml0eSk7XG5cblRocm93LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIGFyZ3MpIHtcbiAgICBpZiAoIXRoaXMuZXJyb3IpIHtcbiAgICAgICAgaWYgKCFfLmlzVW5kZWZpbmVkKHRoaXMuVHJ5X1JlVGhyb3cpKSB7XG4gICAgICAgICAgICB0aGlzLlRyeV9SZVRocm93ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY2FsbENvbnRleHQuc2NoZWR1bGUodGhpcy5lcnJvciwgXCJfZXJyb3JHb3RcIik7XG4gICAgfVxufTtcblxuVGhyb3cucHJvdG90eXBlLl9lcnJvckdvdCA9IGZ1bmN0aW9uKGNhbGxDb250ZXh0LCByZWFzb24sIHJlc3VsdCkge1xuICAgIGlmIChyZWFzb24gIT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGU7XG4gICAgaWYgKF8uaXNTdHJpbmcocmVzdWx0KSkge1xuICAgICAgICBlID0gbmV3IEVycm9yKHJlc3VsdCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIGUgPSByZXN1bHQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFfLmlzVW5kZWZpbmVkKHRoaXMuVHJ5X1JlVGhyb3cpKSB7XG4gICAgICAgIHRoaXMuVHJ5X1JlVGhyb3cgPSBlO1xuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY2FsbENvbnRleHQuZmFpbChlKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRocm93OyJdfQ==
