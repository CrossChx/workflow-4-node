{"version":3,"names":[],"mappings":"","sources":["activities/consoleTracker.js"],"sourcesContent":["\"use strict\";\n\nlet _ = require(\"lodash\");\nlet util = require(\"util\");\nlet Activity = require(\"./activity\");\n\nfunction ConsoleTracker() {\n}\n\nConsoleTracker.prototype.activityStateChanged = function (args) {\n    let activity = args.scope.$activity;\n    let reason = args.reason;\n    let result = args.result;\n    let name = activity.toString();\n    if (result instanceof Error) {\n        result = result.message;\n    }\n    else {\n        if (_.isObject(result)) result = util.inspect(result);\n        if (_.isString(result) && result.length > 100) result = result.substr(0, 100);\n    }\n    if (result) result = \", result: \" + result; else result = \"\";\n    let method = reason === Activity.states.fail? \"error\" : \"log\";\n    console[method](\"Activity '\" + name + \"' state changed - reason: \" + reason + result);\n};\n\nmodule.exports = ConsoleTracker;\n"],"file":"activities/consoleTracker.js","sourceRoot":"/source/"}