"use strict";
"use strict";
var Activity = require("./activity");
var util = require("util");
function If() {
  Activity.call(this);
  this.condition = null;
  this.then = null;
  this.else = null;
}
util.inherits(If, Activity);
If.prototype.run = function(callContext, args) {
  var condition = this.get("condition");
  if (condition) {
    callContext.schedule(condition, "_conditionGot");
  } else {
    callContext.complete();
  }
};
If.prototype._conditionGot = function(callContext, reason, result) {
  if (reason === Activity.states.complete) {
    if (result) {
      var then = this.get("then");
      if (then) {
        callContext.schedule(then, "_bodyFinished");
        return ;
      }
    } else {
      var _else = this.get("else");
      if (_else) {
        callContext.schedule(_else, "_bodyFinished");
        return ;
      }
    }
    callContext.complete();
  } else {
    callContext.end(reason, result);
  }
};
If.prototype._bodyFinished = function(callContext, reason, result) {
  callContext.end(reason, result);
};
module.exports = If;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlmLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsV0FBVyxDQUFDO0FBRVosQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFFMUIsT0FBUyxHQUFDLENBQUUsQUFBRCxDQUFHO0FBQ1YsU0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUVuQixLQUFHLFVBQVUsRUFBSSxLQUFHLENBQUM7QUFDckIsS0FBRyxLQUFLLEVBQUksS0FBRyxDQUFDO0FBQ2hCLEtBQUcsS0FBSyxFQUFJLEtBQUcsQ0FBQztBQUNwQjtBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxFQUFDLENBQUcsU0FBTyxDQUFDLENBQUM7QUFFM0IsQ0FBQyxVQUFVLElBQUksRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUM1QyxBQUFJLElBQUEsQ0FBQSxTQUFRLEVBQUksQ0FBQSxJQUFHLElBQUksQUFBQyxDQUFDLFdBQVUsQ0FBQyxDQUFDO0FBQ3JDLEtBQUksU0FBUSxDQUFHO0FBQ1gsY0FBVSxTQUFTLEFBQUMsQ0FBQyxTQUFRLENBQUcsZ0JBQWMsQ0FBQyxDQUFDO0VBQ3BELEtBQ0s7QUFDRCxjQUFVLFNBQVMsQUFBQyxFQUFDLENBQUM7RUFDMUI7QUFBQSxBQUNKLENBQUM7QUFFRCxDQUFDLFVBQVUsY0FBYyxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsTUFBSyxDQUFHLENBQUEsTUFBSyxDQUFHO0FBQ2hFLEtBQUksTUFBSyxJQUFNLENBQUEsUUFBTyxPQUFPLFNBQVMsQ0FBRztBQUNyQyxPQUFJLE1BQUssQ0FBRztBQUNSLEFBQUksUUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLElBQUcsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDM0IsU0FBSSxJQUFHLENBQUc7QUFDTixrQkFBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLENBQUcsZ0JBQWMsQ0FBQyxDQUFDO0FBQzNDLGVBQU07TUFDVjtBQUFBLElBQ0osS0FDSztBQUNELEFBQUksUUFBQSxDQUFBLEtBQUksRUFBSSxDQUFBLElBQUcsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDNUIsU0FBSSxLQUFJLENBQUc7QUFDUCxrQkFBVSxTQUFTLEFBQUMsQ0FBQyxLQUFJLENBQUcsZ0JBQWMsQ0FBQyxDQUFDO0FBQzVDLGVBQU07TUFDVjtBQUFBLElBQ0o7QUFBQSxBQUNBLGNBQVUsU0FBUyxBQUFDLEVBQUMsQ0FBQztFQUMxQixLQUNLO0FBQ0QsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7RUFDbkM7QUFBQSxBQUNKLENBQUM7QUFFRCxDQUFDLFVBQVUsY0FBYyxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsTUFBSyxDQUFHLENBQUEsTUFBSyxDQUFHO0FBQ2hFLFlBQVUsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFHLE9BQUssQ0FBQyxDQUFDO0FBQ25DLENBQUM7QUFFRCxLQUFLLFFBQVEsRUFBSSxHQUFDLENBQUM7QUFDbkIiLCJmaWxlIjoiYWN0aXZpdGllcy9pZi5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmxldCBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuL2FjdGl2aXR5XCIpO1xubGV0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcblxuZnVuY3Rpb24gSWYoKSB7XG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcblxuICAgIHRoaXMuY29uZGl0aW9uID0gbnVsbDtcbiAgICB0aGlzLnRoZW4gPSBudWxsO1xuICAgIHRoaXMuZWxzZSA9IG51bGw7XG59XG5cbnV0aWwuaW5oZXJpdHMoSWYsIEFjdGl2aXR5KTtcblxuSWYucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgYXJncykge1xuICAgIGxldCBjb25kaXRpb24gPSB0aGlzLmdldChcImNvbmRpdGlvblwiKTtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKGNvbmRpdGlvbiwgXCJfY29uZGl0aW9uR290XCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUoKTtcbiAgICB9XG59O1xuXG5JZi5wcm90b3R5cGUuX2NvbmRpdGlvbkdvdCA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgcmVhc29uLCByZXN1bHQpIHtcbiAgICBpZiAocmVhc29uID09PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgbGV0IHRoZW4gPSB0aGlzLmdldChcInRoZW5cIik7XG4gICAgICAgICAgICBpZiAodGhlbikge1xuICAgICAgICAgICAgICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKHRoZW4sIFwiX2JvZHlGaW5pc2hlZFwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsZXQgX2Vsc2UgPSB0aGlzLmdldChcImVsc2VcIik7XG4gICAgICAgICAgICBpZiAoX2Vsc2UpIHtcbiAgICAgICAgICAgICAgICBjYWxsQ29udGV4dC5zY2hlZHVsZShfZWxzZSwgXCJfYm9keUZpbmlzaGVkXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY2FsbENvbnRleHQuZW5kKHJlYXNvbiwgcmVzdWx0KTtcbiAgICB9XG59O1xuXG5JZi5wcm90b3R5cGUuX2JvZHlGaW5pc2hlZCA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgcmVhc29uLCByZXN1bHQpIHtcbiAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJZjtcbiJdfQ==
