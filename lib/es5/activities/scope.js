"use strict";
module.exports.create = function(scopeTree, node) {
  var obj = {
    has: function(name) {
      return scopeTree.hasProperty(node, name);
    },
    get: function(name) {
      return scopeTree.getValue(node, name);
    },
    set: function(name, value) {
      scopeTree.setValue(node, name, value);
      return value;
    },
    inc: function(name) {
      return obj.set(name, obj.get(name) + 1);
    },
    dec: function(name) {
      return obj.set(name, obj.get(name) - 1);
    },
    postfixInc: function(name) {
      var v = obj.get(name);
      obj.set(name, v + 1);
      return v;
    },
    postfixDec: function(name) {
      var v = obj.get(name);
      obj.set(name, v - 1);
      return v;
    },
    add: function(name, value) {
      return obj.set(name, obj.get(name) + value);
    },
    subtract: function(name, value) {
      return obj.set(name, obj.get(name) - value);
    },
    delete: function(name) {
      return scopeTree.deleteProperty(node, name);
    }
  };
  return obj;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjb3BlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsS0FBSyxRQUFRLE9BQU8sRUFBSSxVQUFVLFNBQVEsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUUvQyxBQUFJLElBQUEsQ0FBQSxHQUFFLEVBQUk7QUFDTixNQUFFLENBQUcsVUFBVSxJQUFHLENBQUc7QUFDakIsV0FBTyxDQUFBLFNBQVEsWUFBWSxBQUFDLENBQUMsSUFBRyxDQUFHLEtBQUcsQ0FBQyxDQUFDO0lBQzVDO0FBRUEsTUFBRSxDQUFHLFVBQVUsSUFBRyxDQUFHO0FBQ2pCLFdBQU8sQ0FBQSxTQUFRLFNBQVMsQUFBQyxDQUFDLElBQUcsQ0FBRyxLQUFHLENBQUMsQ0FBQztJQUN6QztBQUVBLE1BQUUsQ0FBRyxVQUFVLElBQUcsQ0FBRyxDQUFBLEtBQUksQ0FBRztBQUN4QixjQUFRLFNBQVMsQUFBQyxDQUFDLElBQUcsQ0FBRyxLQUFHLENBQUcsTUFBSSxDQUFDLENBQUM7QUFDckMsV0FBTyxNQUFJLENBQUM7SUFDaEI7QUFFQSxNQUFFLENBQUcsVUFBUyxJQUFHLENBQUc7QUFDaEIsV0FBTyxDQUFBLEdBQUUsSUFBSSxBQUFDLENBQUMsSUFBRyxDQUFHLENBQUEsR0FBRSxJQUFJLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQSxDQUFJLEVBQUEsQ0FBQyxDQUFDO0lBQzNDO0FBRUEsTUFBRSxDQUFHLFVBQVMsSUFBRyxDQUFHO0FBQ2hCLFdBQU8sQ0FBQSxHQUFFLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBRyxDQUFBLEdBQUUsSUFBSSxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUEsQ0FBSSxFQUFBLENBQUMsQ0FBQztJQUMzQztBQUVBLGFBQVMsQ0FBRyxVQUFTLElBQUcsQ0FBRztBQUN2QixBQUFJLFFBQUEsQ0FBQSxDQUFBLEVBQUksQ0FBQSxHQUFFLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBQ3JCLFFBQUUsSUFBSSxBQUFDLENBQUMsSUFBRyxDQUFHLENBQUEsQ0FBQSxFQUFJLEVBQUEsQ0FBQyxDQUFDO0FBQ3BCLFdBQU8sRUFBQSxDQUFDO0lBQ1o7QUFFQSxhQUFTLENBQUcsVUFBUyxJQUFHLENBQUc7QUFDdkIsQUFBSSxRQUFBLENBQUEsQ0FBQSxFQUFJLENBQUEsR0FBRSxJQUFJLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUNyQixRQUFFLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBRyxDQUFBLENBQUEsRUFBSSxFQUFBLENBQUMsQ0FBQztBQUNwQixXQUFPLEVBQUEsQ0FBQztJQUNaO0FBRUEsTUFBRSxDQUFHLFVBQVMsSUFBRyxDQUFHLENBQUEsS0FBSSxDQUFHO0FBQ3ZCLFdBQU8sQ0FBQSxHQUFFLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBRyxDQUFBLEdBQUUsSUFBSSxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUEsQ0FBSSxNQUFJLENBQUMsQ0FBQztJQUMvQztBQUVBLFdBQU8sQ0FBRyxVQUFTLElBQUcsQ0FBRyxDQUFBLEtBQUksQ0FBRztBQUM1QixXQUFPLENBQUEsR0FBRSxJQUFJLEFBQUMsQ0FBQyxJQUFHLENBQUcsQ0FBQSxHQUFFLElBQUksQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFBLENBQUksTUFBSSxDQUFDLENBQUM7SUFDL0M7QUFFQSxTQUFLLENBQUcsVUFBVSxJQUFHLENBQUc7QUFDcEIsV0FBTyxDQUFBLFNBQVEsZUFBZSxBQUFDLENBQUMsSUFBRyxDQUFHLEtBQUcsQ0FBQyxDQUFDO0lBQy9DO0FBQUEsRUFDSixDQUFDO0FBRUQsT0FBTyxJQUFFLENBQUM7QUF1QmQsQ0FBQTtBQUNBIiwiZmlsZSI6ImFjdGl2aXRpZXMvc2NvcGUuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzLmNyZWF0ZSA9IGZ1bmN0aW9uIChzY29wZVRyZWUsIG5vZGUpIHtcbiAgICAvLyBDYW5ub3QgdXNlIHByb3h5IGJlY2F1c2Ugb2YgY3VycmVudCB2OCBwcm94eSBpc3N1ZXNcbiAgICB2YXIgb2JqID0ge1xuICAgICAgICBoYXM6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gc2NvcGVUcmVlLmhhc1Byb3BlcnR5KG5vZGUsIG5hbWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldDogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBzY29wZVRyZWUuZ2V0VmFsdWUobm9kZSwgbmFtZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHNjb3BlVHJlZS5zZXRWYWx1ZShub2RlLCBuYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5jOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqLnNldChuYW1lLCBvYmouZ2V0KG5hbWUpICsgMSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZGVjOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqLnNldChuYW1lLCBvYmouZ2V0KG5hbWUpIC0gMSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcG9zdGZpeEluYzogZnVuY3Rpb24obmFtZSkge1xuICAgICAgICAgICAgdmFyIHYgPSBvYmouZ2V0KG5hbWUpO1xuICAgICAgICAgICAgb2JqLnNldChuYW1lLCB2ICsgMSk7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfSxcblxuICAgICAgICBwb3N0Zml4RGVjOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgICAgICB2YXIgdiA9IG9iai5nZXQobmFtZSk7XG4gICAgICAgICAgICBvYmouc2V0KG5hbWUsIHYgLSAxKTtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9LFxuXG4gICAgICAgIGFkZDogZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmouc2V0KG5hbWUsIG9iai5nZXQobmFtZSkgKyB2YWx1ZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc3VidHJhY3Q6IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqLnNldChuYW1lLCBvYmouZ2V0KG5hbWUpIC0gdmFsdWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGRlbGV0ZTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBzY29wZVRyZWUuZGVsZXRlUHJvcGVydHkobm9kZSwgbmFtZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIG9iajtcbiAgICAvL3JldHVybiBQcm94eS5jcmVhdGUoXG4gICAgLy8gICAge1xuICAgIC8vICAgICAgICBoYXM6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgLy8gICAgICAgICAgICByZXR1cm4gc2NvcGVUcmVlLmhhc1Byb3BlcnR5KG5vZGUsIG5hbWUpO1xuICAgIC8vICAgICAgICB9LFxuICAgIC8vXG4gICAgLy8gICAgICAgIGdldDogZnVuY3Rpb24gKHRhcmdldCwgbmFtZSkge1xuICAgIC8vICAgICAgICAgICAgcmV0dXJuIHNjb3BlVHJlZS5nZXRWYWx1ZShub2RlLCBuYW1lKTtcbiAgICAvLyAgICAgICAgfSxcbiAgICAvL1xuICAgIC8vICAgICAgICBzZXQ6IGZ1bmN0aW9uICh0YXJnZXQsIG5hbWUsIHZhbHVlKSB7XG4gICAgLy8gICAgICAgICAgICByZXR1cm4gc2NvcGVUcmVlLnNldFZhbHVlKG5vZGUsIG5hbWUsIHZhbHVlKTtcbiAgICAvLyAgICAgICAgfSxcbiAgICAvL1xuICAgIC8vICAgICAgICBkZWxldGU6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgLy8gICAgICAgICAgICByZXR1cm4gc2NvcGVUcmVlLmRlbGV0ZVByb3BlcnR5KG5vZGUsIG5hbWUpO1xuICAgIC8vICAgICAgICB9LFxuICAgIC8vXG4gICAgLy8gICAgICAgIGVudW1lcmF0ZTogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIC8vICAgICAgICAgICAgcmV0dXJuIHNjb3BlVHJlZS5lbnVtZXJhdGVQcm9wZXJ0eU5hbWVzKG5vZGUpO1xuICAgIC8vICAgICAgICB9XG4gICAgLy8gICAgfSk7XG59XG4iXX0=
