{"version":3,"names":[],"mappings":"","sources":["activities/template.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet util = require(\"util\");\r\nlet _ = require(\"lodash\");\r\nlet activityMarkup = require(\"./activityMarkup\");\r\nlet is = require(\"../common/is\");\r\nlet templateHelpers = require(\"./templateHelpers\");\r\nlet constants = require(\"../common/constants\");\r\n\r\nfunction Template() {\r\n    Activity.call(this);\r\n\r\n    this.declare = null;\r\n\r\n    this.nonScopedProperties.add(\"_visitActivities\");\r\n    this.nonScopedProperties.add(\"_getInternalActivities\");\r\n}\r\n\r\nutil.inherits(Template, Activity);\r\n\r\nTemplate.prototype.initializeStructure = function(execContext) {\r\n    let self = this;\r\n    let require = execContext.rootActivity[\"@require\"];\r\n    self.args = [];\r\n    templateHelpers.visitActivities(self.declare,\r\n        function(markup, parent, key) {\r\n            if (require) {\r\n                markup = _.cloneDeep(markup);\r\n                markup[\"@require\"] = require;\r\n            }\r\n            self.args.push(activityMarkup.parse(markup));\r\n        });\r\n};\r\n\r\nTemplate.prototype.run = function(callContext, args) {\r\n    if (_.isArray(args)) {\r\n        callContext.schedule(args, \"_activitiesGot\");\r\n    }\r\n    else {\r\n        callContext.complete();\r\n    }\r\n};\r\n\r\nTemplate.prototype._activitiesGot = function(callContext, reason, result) {\r\n    if (reason === Activity.states.complete) {\r\n        if (_.isArray(result) && result.length) {\r\n            let idx = 0;\r\n            let declare = _.cloneDeep(this.declare);\r\n            let setupTasks = [];\r\n            templateHelpers.visitActivities(declare, function(markup, parent, key) {\r\n                setupTasks.push(function() {\r\n                    parent[key] = result[idx++];\r\n                });\r\n            });\r\n            for (let t of setupTasks) {\r\n                t();\r\n            }\r\n            callContext.complete(declare);\r\n        }\r\n    }\r\n    else {\r\n        callContext.end(reason, result);\r\n    }\r\n};\r\n\r\nmodule.exports = Template;"],"file":"activities/template.js","sourceRoot":"/source/"}