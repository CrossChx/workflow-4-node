{"version":3,"sources":["activities/forEach.js"],"names":[],"mappings":"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","file":"activities/forEach.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet _ = require(\"lodash\");\nlet is = require(\"../common/is\");\nlet Block = require(\"./block\");\nlet WithBody = require(\"./withBody\");\nlet errors = require(\"../common/errors\");\n\nfunction ForEach() {\n    WithBody.call(this);\n\n    this.items = null;\n    this.varName = \"item\";\n    this.parallel = false;\n    this._bodies = null;\n}\n\nutil.inherits(ForEach, WithBody);\n\nForEach.prototype.initializeStructure = function() {\n    if (this.parallel) {\n        let numCPUs = require(\"os\").cpus().length;\n        this._bodies = [];\n        if (this.args && this.args.length) {\n            for (let i = 0; i < Math.min(process.env.UV_THREADPOOL_SIZE || 100000, numCPUs); i++) {\n                let newArgs = [];\n                for (let arg of this.args) {\n                    if (arg instanceof Activity) {\n                        newArgs.push(arg.clone());\n                    }\n                    else {\n                        newArgs.push(arg);\n                    }\n                }\n                let newBody = new Block();\n                newBody.args = newArgs;\n                this._bodies.push(newBody);\n            }\n        }\n        this.args = null;\n    }\n    else {\n        WithBody.prototype.initializeStructure.call(this);\n    }\n};\n\nForEach.prototype.run = function (callContext, args) {\n    const varName = this.varName;\n    let items = this.items;\n    if (!_.isNull(items)) {\n        this[varName] = null;\n        callContext.schedule(items, \"_itemsGot\");\n    }\n    else {\n        callContext.complete();\n    }\n};\n\nForEach.prototype._itemsGot = function (callContext, reason, result) {\n    if (reason === Activity.states.complete && !_.isUndefined(result)) {\n        if (result && _.isFunction(result.next)) {\n            this._iterator = result;\n        }\n        else {\n            this._remainingItems = _.isArray(result) ? result : [result];\n        }\n        callContext.activity._doStep.call(this, callContext);\n    }\n    else {\n        callContext.end(reason, result);\n    }\n};\n\nForEach.prototype._doStep = function (callContext, lastResult) {\n    const varName = this.varName;\n    let remainingItems = this._remainingItems;\n    let iterator = this._iterator;\n    if (remainingItems && remainingItems.length) {\n        if (this.parallel) {\n            let bodies = this._bodies;\n            let pack = [];\n            let idx = 0;\n            while (remainingItems.length && idx < bodies.length) {\n                let item = remainingItems[0];\n                remainingItems.splice(0, 1);\n                let variables = {};\n                variables[varName] = item;\n                pack.push({\n                    variables: variables,\n                    activity: bodies[idx++]\n                });\n            }\n            callContext.schedule(pack, \"_bodyFinished\");\n        }\n        else {\n            let item = remainingItems[0];\n            remainingItems.splice(0, 1);\n            let variables = {};\n            variables[varName] = item;\n            callContext.schedule({ activity: this._body, variables: variables }, \"_bodyFinished\");\n        }\n        return;\n    }\n\n    if (iterator) {\n        if (this.parallel) {\n            callContext.fail(new errors.ActivityRuntimeError(\"Parallel execution not supported with generators.\"));\n            return;\n        }\n        else {\n            let next = iterator.next();\n            if (!next.done) {\n                let variables = {};\n                variables[varName] = next.value;\n                callContext.schedule({ activity: this._body, variables: variables }, \"_bodyFinished\");\n                return;\n            }\n        }\n    }\n\n    callContext.complete(lastResult);\n};\n\nForEach.prototype._bodyFinished = function (callContext, reason, result) {\n    if (reason === Activity.states.complete) {\n        callContext.activity._doStep.call(this, callContext, result);\n    }\n    else {\n        callContext.end(reason, result);\n    }\n};\n\nmodule.exports = ForEach;"],"sourceRoot":"/source/"}