"use strict";
"use strict";
var Activity = require("./activity");
var util = require("util");
var _ = require("lodash");
function Or() {
  Activity.call(this);
  this.isTrue = true;
  this.isFalse = false;
}
util.inherits(Or, Activity);
Or.prototype.run = function(callContext, args) {
  callContext.schedule(args, "_argsGot");
};
Or.prototype._argsGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return ;
  }
  var isTrue = false;
  var $__3 = true;
  var $__4 = false;
  var $__5 = undefined;
  try {
    for (var $__1 = void 0,
        $__0 = (result)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__3 = ($__1 = $__0.next()).done); $__3 = true) {
      var v = $__1.value;
      {
        isTrue = (v ? true : false) || isTrue;
      }
    }
  } catch ($__6) {
    $__4 = true;
    $__5 = $__6;
  } finally {
    try {
      if (!$__3 && $__0.return != null) {
        $__0.return();
      }
    } finally {
      if ($__4) {
        throw $__5;
      }
    }
  }
  if (isTrue) {
    callContext.schedule(this.get("isTrue"), "_done");
  } else {
    callContext.schedule(this.get("isFalse"), "_done");
  }
};
Or.prototype._done = function(callContext, reason, result) {
  callContext.end(reason, result);
};
module.exports = Or;
//# sourceMappingURL=data:application/json;base64,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QUFDbkMsQ0FBQztBQUVELEtBQUssUUFBUSxFQUFJLEdBQUMsQ0FBQztBQUFBIiwiZmlsZSI6ImFjdGl2aXRpZXMvb3IuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5sZXQgQWN0aXZpdHkgPSByZXF1aXJlKFwiLi9hY3Rpdml0eVwiKTtcbmxldCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5sZXQgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5cbmZ1bmN0aW9uIE9yKCkge1xuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XG5cbiAgICB0aGlzLmlzVHJ1ZSA9IHRydWU7XG4gICAgdGhpcy5pc0ZhbHNlID0gZmFsc2U7XG59XG5cbnV0aWwuaW5oZXJpdHMoT3IsIEFjdGl2aXR5KTtcblxuT3IucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgYXJncykge1xuICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKGFyZ3MsIFwiX2FyZ3NHb3RcIik7XG59O1xuXG5Pci5wcm90b3R5cGUuX2FyZ3NHb3QgPSBmdW5jdGlvbihjYWxsQ29udGV4dCwgcmVhc29uLCByZXN1bHQpIHtcbiAgICBpZiAocmVhc29uICE9PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcbiAgICAgICAgY2FsbENvbnRleHQuZW5kKHJlYXNvbiwgcmVzdWx0KTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBpc1RydWUgPSBmYWxzZTtcbiAgICBmb3IgKGxldCB2IG9mIHJlc3VsdCkge1xuICAgICAgICBpc1RydWUgPSAodiA/IHRydWUgOiBmYWxzZSkgfHwgaXNUcnVlO1xuICAgIH1cblxuICAgIGlmIChpc1RydWUpIHtcbiAgICAgICAgY2FsbENvbnRleHQuc2NoZWR1bGUodGhpcy5nZXQoXCJpc1RydWVcIiksIFwiX2RvbmVcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5zY2hlZHVsZSh0aGlzLmdldChcImlzRmFsc2VcIiksIFwiX2RvbmVcIik7XG4gICAgfVxufTtcblxuT3IucHJvdG90eXBlLl9kb25lID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgY2FsbENvbnRleHQuZW5kKHJlYXNvbiwgcmVzdWx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT3I7Il19
