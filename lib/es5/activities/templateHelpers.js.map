{"version":3,"names":[],"mappings":"","sources":["activities/templateHelpers.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet _ = require(\"lodash\");\r\nlet Reflection = require(\"backpack-node\").system.Reflection;\r\n\r\nlet maxDepth = 10;\r\n\r\nlet templateHelpers = {\r\n\r\n    isFunctionString: function (str) {\r\n        return _.isString(str) && str.match(/^\\s*function\\s*\\w*\\s*\\((?:\\w+,)*(?:\\w+)?\\)\\s*\\{/);\r\n    },\r\n    isTemplate: function (obj) {\r\n        let activityCount = 0;\r\n        templateHelpers.visitActivities(obj, function () {\r\n            activityCount++;\r\n        });\r\n        return activityCount > 0;\r\n    },\r\n    visitActivities: function (obj, f) {\r\n        if (!_.isPlainObject(obj) && !_.isArray(obj)) {\r\n            return;\r\n        }\r\n        Reflection.visitObject(obj,\r\n            function (subObj, parent, pkey) {\r\n                if (_.isString(subObj)) {\r\n                    let str = subObj.trim();\r\n                    if (str.length > 1) {\r\n                        if (str[0] === \"=\") {\r\n                            let markup = {\r\n                                \"@expression\": {\r\n                                    expr: str.substr(1)\r\n                                }\r\n                            };\r\n                            f(markup, parent, pkey);\r\n                            return false;\r\n                        }\r\n                        if (templateHelpers.isFunctionString(str)) {\r\n                            let markup = {\r\n                                \"@func\": {\r\n                                    code: str\r\n                                }\r\n                            };\r\n                            f(markup, parent, pkey);\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else if (_.isPlainObject(subObj)) {\r\n                    let keys = _.keys(subObj);\r\n\r\n                    if (keys.length === 1) {\r\n                        let key = keys[0];\r\n                        if (key[0] === \"@\" && key.length > 1) {\r\n                            let markup = {};\r\n                            markup[key] = subObj[key];\r\n                            f(markup, parent, pkey);\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (keys.length === 2) {\r\n                        let key1 = keys[0];\r\n                        let key2 = keys[1];\r\n                        if (key1 === \"@require\" && key2[0] === \"@\" && key2.length > 1) {\r\n                            let markup = {};\r\n                            markup[key1] = subObj[key1];\r\n                            markup[key2] = subObj[key2];\r\n                            f(markup, parent, pkey);\r\n                            return false;\r\n                        }\r\n                        else if (key2 === \"@require\" && key1[0] === \"@\" && key1.length > 1) {\r\n                            let markup = {};\r\n                            markup[key2] = subObj[key2];\r\n                            markup[key1] = subObj[key1];\r\n                            f(markup, parent, pkey);\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else if (_.isFunction(subObj)) {\r\n                    let markup = {\r\n                        \"@func\": {\r\n                            code: subObj\r\n                        }\r\n                    };\r\n                    f(markup, parent, pkey);\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            maxDepth);\r\n    }\r\n};\r\n\r\nmodule.exports = templateHelpers;"],"file":"activities/templateHelpers.js","sourceRoot":"/source/"}