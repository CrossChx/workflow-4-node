"use strict";
var Activity = require("./activity");
var util = require("util");
var _ = require("lodash");
var errors = require("../common/errors");
var fast = require("fast.js");
var guids = require('../common/guids');
function Func() {
  Activity.call(this);
  this.code = null;
  this.codeProperties.add('code');
}
util.inherits(Func, Activity);
Func.prototype.run = function(callContext, args) {
  if (typeof this.get("code") != "function") {
    callContext.fail(new errors.ValidationError("Func activity's property 'code' is not a function."));
    return ;
  }
  callContext.schedule(args, "_argsGot");
};
Func.prototype._argsGot = function(callContext, reason, result) {
  var self = this;
  if (reason === Activity.states.complete) {
    var e = fast.try(function() {
      var fResult = self.get("code").apply(self, result || []);
      if (_.isObject(fResult) && _.isFunction(fResult["then"])) {
        fResult.then(function(v) {
          callContext.complete(v);
        }, function(e) {
          callContext.fail(v);
        });
      } else {
        callContext.complete(fResult);
      }
    });
    if (e instanceof Error) {
      callContext.fail(e);
    }
  } else {
    callContext.end(reason, result);
  }
};
module.exports = Func;
//# sourceMappingURL=data:application/json;base64,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QUFBQSxBQUNKLENBQUE7QUFFQSxLQUFLLFFBQVEsRUFBSSxLQUFHLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL2Z1bmMuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbInZhciBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuL2FjdGl2aXR5XCIpO1xyXG52YXIgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xyXG52YXIgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XHJcbnZhciBlcnJvcnMgPSByZXF1aXJlKFwiLi4vY29tbW9uL2Vycm9yc1wiKTtcclxudmFyIGZhc3QgPSByZXF1aXJlKFwiZmFzdC5qc1wiKTtcclxudmFyIGd1aWRzID0gcmVxdWlyZSgnLi4vY29tbW9uL2d1aWRzJyk7XHJcblxyXG5mdW5jdGlvbiBGdW5jKCkge1xyXG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcclxuICAgIHRoaXMuY29kZSA9IG51bGw7XHJcbiAgICB0aGlzLmNvZGVQcm9wZXJ0aWVzLmFkZCgnY29kZScpO1xyXG59XHJcblxyXG51dGlsLmluaGVyaXRzKEZ1bmMsIEFjdGl2aXR5KTtcclxuXHJcbkZ1bmMucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgYXJncykge1xyXG4gICAgaWYgKHR5cGVvZiB0aGlzLmdldChcImNvZGVcIikgIT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgY2FsbENvbnRleHQuZmFpbChuZXcgZXJyb3JzLlZhbGlkYXRpb25FcnJvcihcIkZ1bmMgYWN0aXZpdHkncyBwcm9wZXJ0eSAnY29kZScgaXMgbm90IGEgZnVuY3Rpb24uXCIpKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY2FsbENvbnRleHQuc2NoZWR1bGUoYXJncywgXCJfYXJnc0dvdFwiKTtcclxufVxyXG5cclxuRnVuYy5wcm90b3R5cGUuX2FyZ3NHb3QgPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBpZiAocmVhc29uID09PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcclxuICAgICAgICB2YXIgZSA9IGZhc3QudHJ5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGZSZXN1bHQgPSBzZWxmLmdldChcImNvZGVcIikuYXBwbHkoc2VsZiwgcmVzdWx0IHx8IFtdKTtcclxuICAgICAgICAgICAgaWYgKF8uaXNPYmplY3QoZlJlc3VsdCkgJiYgXy5pc0Z1bmN0aW9uKGZSZXN1bHRbXCJ0aGVuXCJdKSkge1xyXG4gICAgICAgICAgICAgICAgZlJlc3VsdC50aGVuKFxyXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICh2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxDb250ZXh0LmNvbXBsZXRlKHYpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbENvbnRleHQuZmFpbCh2KTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNhbGxDb250ZXh0LmNvbXBsZXRlKGZSZXN1bHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmIChlIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgICAgICAgICAgY2FsbENvbnRleHQuZmFpbChlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmM7Il19
