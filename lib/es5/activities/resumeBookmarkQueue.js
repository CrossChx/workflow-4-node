"use strict";
var errors = require("../common/errors");
var StrSet = require("backpack-node").collections.StrSet;
function ResumeBookmarkQueue() {
  this._names = new StrSet();
  this._commands = [];
}
ResumeBookmarkQueue.prototype.isEmpty = function() {
  return this._commands.length === 0;
};
ResumeBookmarkQueue.prototype.enqueue = function(bookmarkName, reason, result) {
  if (!this._names.exists(bookmarkName)) {
    this._names.add(bookmarkName);
    this._commands.push({
      name: bookmarkName,
      reason: reason,
      result: result
    });
  } else {
    throw new errors.ActivityRuntimeError("The '" + bookmarkName + "' bookmark continuation already enqueued.");
  }
};
ResumeBookmarkQueue.prototype.dequeue = function() {
  var self = this;
  for (var i = 0; i < self._commands.length; i++) {
    var command = self._commands[i];
    self._commands.splice(0, 1);
    self._names.remove(command.name);
    return command;
  }
  return null;
};
ResumeBookmarkQueue.prototype.remove = function(bookmarkName) {
  if (this._names.exists(bookmarkName)) {
    var idx = -1;
    for (var i = 0; i < self._commands.length; i++) {
      var command = self._commands[i];
      if (command.name === bookmarkName) {
        idx = i;
        break;
      }
    }
    if (idx != -1)
      self._commands.splice(idx, 1);
    this._names.remove(bookmarkName);
  }
};
module.exports = ResumeBookmarkQueue;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3VtZUJvb2ttYXJrUXVldWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxBQUFJLEVBQUEsQ0FBQSxNQUFLLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxrQkFBaUIsQ0FBQyxDQUFDO0FBQ3hDLEFBQUksRUFBQSxDQUFBLE1BQUssRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLGVBQWMsQ0FBQyxZQUFZLE9BQU8sQ0FBQztBQUV4RCxPQUFTLG9CQUFrQixDQUFFLEFBQUQsQ0FBRztBQUMzQixLQUFHLE9BQU8sRUFBSSxJQUFJLE9BQUssQUFBQyxFQUFDLENBQUM7QUFDMUIsS0FBRyxVQUFVLEVBQUksR0FBQyxDQUFDO0FBQ3ZCO0FBQUEsQUFFQSxrQkFBa0IsVUFBVSxRQUFRLEVBQUksVUFBVSxBQUFELENBQUc7QUFDaEQsT0FBTyxDQUFBLElBQUcsVUFBVSxPQUFPLElBQU0sRUFBQSxDQUFDO0FBQ3RDLENBQUE7QUFFQSxrQkFBa0IsVUFBVSxRQUFRLEVBQUksVUFBVSxZQUFXLENBQUcsQ0FBQSxNQUFLLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDNUUsS0FBSSxDQUFDLElBQUcsT0FBTyxPQUFPLEFBQUMsQ0FBQyxZQUFXLENBQUMsQ0FBRztBQUNuQyxPQUFHLE9BQU8sSUFBSSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDN0IsT0FBRyxVQUFVLEtBQUssQUFBQyxDQUNmO0FBQ0ksU0FBRyxDQUFHLGFBQVc7QUFDakIsV0FBSyxDQUFHLE9BQUs7QUFDYixXQUFLLENBQUcsT0FBSztBQUFBLElBQ2pCLENBQUMsQ0FBQztFQUNWLEtBQ0s7QUFDRCxRQUFNLElBQUksQ0FBQSxNQUFLLHFCQUFxQixBQUFDLENBQUMsT0FBTSxFQUFJLGFBQVcsQ0FBQSxDQUFJLDRDQUEwQyxDQUFDLENBQUM7RUFDL0c7QUFBQSxBQUNKLENBQUE7QUFFQSxrQkFBa0IsVUFBVSxRQUFRLEVBQUksVUFBVSxBQUFELENBQUc7QUFDaEQsQUFBSSxJQUFBLENBQUEsSUFBRyxFQUFJLEtBQUcsQ0FBQztBQUNmLE1BQVMsR0FBQSxDQUFBLENBQUEsRUFBSSxFQUFBLENBQUcsQ0FBQSxDQUFBLEVBQUksQ0FBQSxJQUFHLFVBQVUsT0FBTyxDQUFHLENBQUEsQ0FBQSxFQUFFLENBQUc7QUFDNUMsQUFBSSxNQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsSUFBRyxVQUFVLENBQUUsQ0FBQSxDQUFDLENBQUM7QUFDL0IsT0FBRyxVQUFVLE9BQU8sQUFBQyxDQUFDLENBQUEsQ0FBRyxFQUFBLENBQUMsQ0FBQztBQUMzQixPQUFHLE9BQU8sT0FBTyxBQUFDLENBQUMsT0FBTSxLQUFLLENBQUMsQ0FBQztBQUNoQyxTQUFPLFFBQU0sQ0FBQztFQUNsQjtBQUFBLEFBQ0EsT0FBTyxLQUFHLENBQUM7QUFDZixDQUFBO0FBRUEsa0JBQWtCLFVBQVUsT0FBTyxFQUFJLFVBQVUsWUFBVyxDQUFHO0FBQzNELEtBQUksSUFBRyxPQUFPLE9BQU8sQUFBQyxDQUFDLFlBQVcsQ0FBQyxDQUFHO0FBQ2xDLEFBQUksTUFBQSxDQUFBLEdBQUUsRUFBSSxFQUFDLENBQUEsQ0FBQztBQUNaLFFBQVMsR0FBQSxDQUFBLENBQUEsRUFBSSxFQUFBLENBQUcsQ0FBQSxDQUFBLEVBQUksQ0FBQSxJQUFHLFVBQVUsT0FBTyxDQUFHLENBQUEsQ0FBQSxFQUFFLENBQUc7QUFDNUMsQUFBSSxRQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsSUFBRyxVQUFVLENBQUUsQ0FBQSxDQUFDLENBQUM7QUFDL0IsU0FBSSxPQUFNLEtBQUssSUFBTSxhQUFXLENBQUc7QUFDL0IsVUFBRSxFQUFJLEVBQUEsQ0FBQztBQUNQLGFBQUs7TUFDVDtBQUFBLElBQ0o7QUFBQSxBQUNBLE9BQUksR0FBRSxHQUFLLEVBQUMsQ0FBQTtBQUFHLFNBQUcsVUFBVSxPQUFPLEFBQUMsQ0FBQyxHQUFFLENBQUcsRUFBQSxDQUFDLENBQUM7QUFBQSxBQUM1QyxPQUFHLE9BQU8sT0FBTyxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7RUFDcEM7QUFBQSxBQUNKLENBQUE7QUFFQSxLQUFLLFFBQVEsRUFBSSxvQkFBa0IsQ0FBQztBQUNwQyIsImZpbGUiOiJhY3Rpdml0aWVzL3Jlc3VtZUJvb2ttYXJrUXVldWUuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbInZhciBlcnJvcnMgPSByZXF1aXJlKFwiLi4vY29tbW9uL2Vycm9yc1wiKTtcbnZhciBTdHJTZXQgPSByZXF1aXJlKFwiYmFja3BhY2stbm9kZVwiKS5jb2xsZWN0aW9ucy5TdHJTZXQ7XG5cbmZ1bmN0aW9uIFJlc3VtZUJvb2ttYXJrUXVldWUoKSB7XG4gICAgdGhpcy5fbmFtZXMgPSBuZXcgU3RyU2V0KCk7XG4gICAgdGhpcy5fY29tbWFuZHMgPSBbXTtcbn1cblxuUmVzdW1lQm9va21hcmtRdWV1ZS5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29tbWFuZHMubGVuZ3RoID09PSAwO1xufVxuXG5SZXN1bWVCb29rbWFya1F1ZXVlLnByb3RvdHlwZS5lbnF1ZXVlID0gZnVuY3Rpb24gKGJvb2ttYXJrTmFtZSwgcmVhc29uLCByZXN1bHQpIHtcbiAgICBpZiAoIXRoaXMuX25hbWVzLmV4aXN0cyhib29rbWFya05hbWUpKSB7XG4gICAgICAgIHRoaXMuX25hbWVzLmFkZChib29rbWFya05hbWUpO1xuICAgICAgICB0aGlzLl9jb21tYW5kcy5wdXNoKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6IGJvb2ttYXJrTmFtZSxcbiAgICAgICAgICAgICAgICByZWFzb246IHJlYXNvbixcbiAgICAgICAgICAgICAgICByZXN1bHQ6IHJlc3VsdFxuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzLkFjdGl2aXR5UnVudGltZUVycm9yKFwiVGhlICdcIiArIGJvb2ttYXJrTmFtZSArIFwiJyBib29rbWFyayBjb250aW51YXRpb24gYWxyZWFkeSBlbnF1ZXVlZC5cIik7XG4gICAgfVxufVxuXG5SZXN1bWVCb29rbWFya1F1ZXVlLnByb3RvdHlwZS5kZXF1ZXVlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGYuX2NvbW1hbmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjb21tYW5kID0gc2VsZi5fY29tbWFuZHNbaV07XG4gICAgICAgIHNlbGYuX2NvbW1hbmRzLnNwbGljZSgwLCAxKTtcbiAgICAgICAgc2VsZi5fbmFtZXMucmVtb3ZlKGNvbW1hbmQubmFtZSk7XG4gICAgICAgIHJldHVybiBjb21tYW5kO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cblxuUmVzdW1lQm9va21hcmtRdWV1ZS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGJvb2ttYXJrTmFtZSkge1xuICAgIGlmICh0aGlzLl9uYW1lcy5leGlzdHMoYm9va21hcmtOYW1lKSkge1xuICAgICAgICB2YXIgaWR4ID0gLTE7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5fY29tbWFuZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBjb21tYW5kID0gc2VsZi5fY29tbWFuZHNbaV07XG4gICAgICAgICAgICBpZiAoY29tbWFuZC5uYW1lID09PSBib29rbWFya05hbWUpIHtcbiAgICAgICAgICAgICAgICBpZHggPSBpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpZHggIT0gLTEpIHNlbGYuX2NvbW1hbmRzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICB0aGlzLl9uYW1lcy5yZW1vdmUoYm9va21hcmtOYW1lKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVzdW1lQm9va21hcmtRdWV1ZTtcbiJdfQ==
