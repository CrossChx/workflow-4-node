"use strict";
var Activity = require("./activity");
var util = require("util");
function While() {
  Activity.call(this);
  this.condition = null;
  this.body = null;
}
util.inherits(While, Activity);
While.prototype.run = function(callContext, args) {
  var condition = this.get("condition");
  if (condition) {
    callContext.schedule(condition, "_conditionGot");
  } else {
    callContext.complete();
  }
};
While.prototype._conditionGot = function(callContext, reason, result) {
  if (reason === Activity.states.complete) {
    if (!result) {
      callContext.complete(this.get("_lastBodyResult"));
    } else {
      callContext.schedule(this.get("body"), "_bodyFinished");
    }
  } else {
    callContext.end(reason, result);
  }
};
While.prototype._bodyFinished = function(callContext, reason, result) {
  if (reason === Activity.states.complete) {
    this.set("_lastBodyResult", result);
    callContext.schedule(this.get("condition"), "_conditionGot");
  } else {
    callContext.end(reason, result);
  }
};
module.exports = While;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoaWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFFMUIsT0FBUyxNQUFJLENBQUUsQUFBRCxDQUFHO0FBQ2IsU0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUVuQixLQUFHLFVBQVUsRUFBSSxLQUFHLENBQUM7QUFDckIsS0FBRyxLQUFLLEVBQUksS0FBRyxDQUFDO0FBQ3BCO0FBQUEsQUFFQSxHQUFHLFNBQVMsQUFBQyxDQUFDLEtBQUksQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUU5QixJQUFJLFVBQVUsSUFBSSxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsSUFBRyxDQUFHO0FBQy9DLEFBQUksSUFBQSxDQUFBLFNBQVEsRUFBSSxDQUFBLElBQUcsSUFBSSxBQUFDLENBQUMsV0FBVSxDQUFDLENBQUM7QUFDckMsS0FBSSxTQUFRLENBQUc7QUFDWCxjQUFVLFNBQVMsQUFBQyxDQUFDLFNBQVEsQ0FBRyxnQkFBYyxDQUFDLENBQUM7RUFDcEQsS0FDSztBQUNELGNBQVUsU0FBUyxBQUFDLEVBQUMsQ0FBQztFQUMxQjtBQUFBLEFBQ0osQ0FBQztBQUVELElBQUksVUFBVSxjQUFjLEVBQUksVUFBVSxXQUFVLENBQUcsQ0FBQSxNQUFLLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDbkUsS0FBSSxNQUFLLElBQU0sQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFHO0FBQ3JDLE9BQUksQ0FBQyxNQUFLLENBQUc7QUFDVCxnQkFBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLElBQUksQUFBQyxDQUFDLGlCQUFnQixDQUFDLENBQUMsQ0FBQztJQUNyRCxLQUNLO0FBQ0QsZ0JBQVUsU0FBUyxBQUFDLENBQUMsSUFBRyxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBRyxnQkFBYyxDQUFDLENBQUM7SUFDM0Q7QUFBQSxFQUNKLEtBQ0s7QUFDRCxjQUFVLElBQUksQUFBQyxDQUFDLE1BQUssQ0FBRyxPQUFLLENBQUMsQ0FBQztFQUNuQztBQUFBLEFBQ0osQ0FBQztBQUVELElBQUksVUFBVSxjQUFjLEVBQUksVUFBVSxXQUFVLENBQUcsQ0FBQSxNQUFLLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDbkUsS0FBSSxNQUFLLElBQU0sQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFHO0FBQ3JDLE9BQUcsSUFBSSxBQUFDLENBQUMsaUJBQWdCLENBQUcsT0FBSyxDQUFDLENBQUM7QUFDbkMsY0FBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLElBQUksQUFBQyxDQUFDLFdBQVUsQ0FBQyxDQUFHLGdCQUFjLENBQUMsQ0FBQztFQUNoRSxLQUNLO0FBQ0QsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7RUFDbkM7QUFBQSxBQUNKLENBQUM7QUFFRCxLQUFLLFFBQVEsRUFBSSxNQUFJLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL3doaWxlLmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQWN0aXZpdHkgPSByZXF1aXJlKFwiLi9hY3Rpdml0eVwiKTtcbnZhciB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5cbmZ1bmN0aW9uIFdoaWxlKCkge1xuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XG5cbiAgICB0aGlzLmNvbmRpdGlvbiA9IG51bGw7XG4gICAgdGhpcy5ib2R5ID0gbnVsbDtcbn1cblxudXRpbC5pbmhlcml0cyhXaGlsZSwgQWN0aXZpdHkpO1xuXG5XaGlsZS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XG4gICAgdmFyIGNvbmRpdGlvbiA9IHRoaXMuZ2V0KFwiY29uZGl0aW9uXCIpO1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgY2FsbENvbnRleHQuc2NoZWR1bGUoY29uZGl0aW9uLCBcIl9jb25kaXRpb25Hb3RcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSgpO1xuICAgIH1cbn07XG5cbldoaWxlLnByb3RvdHlwZS5fY29uZGl0aW9uR290ID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCByZWFzb24sIHJlc3VsdCkge1xuICAgIGlmIChyZWFzb24gPT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xuICAgICAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUodGhpcy5nZXQoXCJfbGFzdEJvZHlSZXN1bHRcIikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2FsbENvbnRleHQuc2NoZWR1bGUodGhpcy5nZXQoXCJib2R5XCIpLCBcIl9ib2R5RmluaXNoZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxDb250ZXh0LmVuZChyZWFzb24sIHJlc3VsdCk7XG4gICAgfVxufTtcblxuV2hpbGUucHJvdG90eXBlLl9ib2R5RmluaXNoZWQgPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgaWYgKHJlYXNvbiA9PT0gQWN0aXZpdHkuc3RhdGVzLmNvbXBsZXRlKSB7XG4gICAgICAgIHRoaXMuc2V0KFwiX2xhc3RCb2R5UmVzdWx0XCIsIHJlc3VsdCk7XG4gICAgICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKHRoaXMuZ2V0KFwiY29uZGl0aW9uXCIpLCBcIl9jb25kaXRpb25Hb3RcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gV2hpbGU7Il19
