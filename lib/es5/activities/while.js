"use strict";
var Activity = require("./activity");
var util = require("util");
var WithBody = require("./withBody");
function While() {
  WithBody.call(this);
  this.condition = null;
}
util.inherits(While, WithBody);
While.prototype.run = function(callContext, args) {
  var condition = this.condition;
  if (condition) {
    callContext.schedule(condition, "_conditionGot");
  } else {
    callContext.complete();
  }
};
While.prototype._conditionGot = function(callContext, reason, result) {
  if (reason === Activity.states.complete) {
    if (!result) {
      callContext.complete(this._lastBodyResult);
    } else {
      WithBody.prototype.run.call(this, callContext);
    }
  } else {
    callContext.end(reason, result);
  }
};
While.prototype.bodyCompleted = function(callContext, reason, result) {
  if (reason === Activity.states.complete) {
    this._lastBodyResult = result;
    callContext.schedule(this.condition, "_conditionGot");
  } else {
    callContext.end(reason, result);
  }
};
module.exports = While;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoaWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFFcEMsT0FBUyxNQUFJLENBQUUsQUFBRCxDQUFHO0FBQ2IsU0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUVuQixLQUFHLFVBQVUsRUFBSSxLQUFHLENBQUM7QUFDekI7QUFBQSxBQUVBLEdBQUcsU0FBUyxBQUFDLENBQUMsS0FBSSxDQUFHLFNBQU8sQ0FBQyxDQUFDO0FBRTlCLElBQUksVUFBVSxJQUFJLEVBQUksVUFBVSxXQUFVLENBQUcsQ0FBQSxJQUFHLENBQUc7QUFDL0MsQUFBSSxJQUFBLENBQUEsU0FBUSxFQUFJLENBQUEsSUFBRyxVQUFVLENBQUM7QUFDOUIsS0FBSSxTQUFRLENBQUc7QUFDWCxjQUFVLFNBQVMsQUFBQyxDQUFDLFNBQVEsQ0FBRyxnQkFBYyxDQUFDLENBQUM7RUFDcEQsS0FDSztBQUNELGNBQVUsU0FBUyxBQUFDLEVBQUMsQ0FBQztFQUMxQjtBQUFBLEFBQ0osQ0FBQztBQUVELElBQUksVUFBVSxjQUFjLEVBQUksVUFBVSxXQUFVLENBQUcsQ0FBQSxNQUFLLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDbkUsS0FBSSxNQUFLLElBQU0sQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFHO0FBQ3JDLE9BQUksQ0FBQyxNQUFLLENBQUc7QUFDVCxnQkFBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLGdCQUFnQixDQUFDLENBQUM7SUFDOUMsS0FDSztBQUNELGFBQU8sVUFBVSxJQUFJLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBRyxZQUFVLENBQUMsQ0FBQztJQUNsRDtBQUFBLEVBQ0osS0FDSztBQUNELGNBQVUsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFHLE9BQUssQ0FBQyxDQUFDO0VBQ25DO0FBQUEsQUFDSixDQUFDO0FBRUQsSUFBSSxVQUFVLGNBQWMsRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLE1BQUssQ0FBRyxDQUFBLE1BQUssQ0FBRztBQUNuRSxLQUFJLE1BQUssSUFBTSxDQUFBLFFBQU8sT0FBTyxTQUFTLENBQUc7QUFDckMsT0FBRyxnQkFBZ0IsRUFBSSxPQUFLLENBQUM7QUFDN0IsY0FBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLFVBQVUsQ0FBRyxnQkFBYyxDQUFDLENBQUM7RUFDekQsS0FDSztBQUNELGNBQVUsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFHLE9BQUssQ0FBQyxDQUFDO0VBQ25DO0FBQUEsQUFDSixDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksTUFBSSxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy93aGlsZS5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmxldCBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuL2FjdGl2aXR5XCIpO1xubGV0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcbmxldCBXaXRoQm9keSA9IHJlcXVpcmUoXCIuL3dpdGhCb2R5XCIpO1xuXG5mdW5jdGlvbiBXaGlsZSgpIHtcbiAgICBXaXRoQm9keS5jYWxsKHRoaXMpO1xuXG4gICAgdGhpcy5jb25kaXRpb24gPSBudWxsO1xufVxuXG51dGlsLmluaGVyaXRzKFdoaWxlLCBXaXRoQm9keSk7XG5cbldoaWxlLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIGFyZ3MpIHtcbiAgICBsZXQgY29uZGl0aW9uID0gdGhpcy5jb25kaXRpb247XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgICBjYWxsQ29udGV4dC5zY2hlZHVsZShjb25kaXRpb24sIFwiX2NvbmRpdGlvbkdvdFwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxDb250ZXh0LmNvbXBsZXRlKCk7XG4gICAgfVxufTtcblxuV2hpbGUucHJvdG90eXBlLl9jb25kaXRpb25Hb3QgPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgaWYgKHJlYXNvbiA9PT0gQWN0aXZpdHkuc3RhdGVzLmNvbXBsZXRlKSB7XG4gICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZSh0aGlzLl9sYXN0Qm9keVJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBXaXRoQm9keS5wcm90b3R5cGUucnVuLmNhbGwodGhpcywgY2FsbENvbnRleHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgIH1cbn07XG5cbldoaWxlLnByb3RvdHlwZS5ib2R5Q29tcGxldGVkID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCByZWFzb24sIHJlc3VsdCkge1xuICAgIGlmIChyZWFzb24gPT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xuICAgICAgICB0aGlzLl9sYXN0Qm9keVJlc3VsdCA9IHJlc3VsdDtcbiAgICAgICAgY2FsbENvbnRleHQuc2NoZWR1bGUodGhpcy5jb25kaXRpb24sIFwiX2NvbmRpdGlvbkdvdFwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxDb250ZXh0LmVuZChyZWFzb24sIHJlc3VsdCk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBXaGlsZTsiXX0=
