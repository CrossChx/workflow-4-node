{"version":3,"sources":["activities/block.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEzC,SAAS,KAAK,GAAG;AACb,cAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACzB;;AAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;;AAEjC,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AACxD,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,IAAI,CAAC,MAAM,EAAE;AACb,aAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACvC,gBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACtB;AACD,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;KAC5C,MACI;AACD,mBAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACnD;CACJ,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAC7D,QAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AACtB,QAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACrC,YAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACnB,uBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAChC,MACI;AACD,uBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;SAC/C;KACJ,MACI;AACD,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACnC;CACJ,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"activities/block.js","sourcesContent":["var Activity = require(\"./activity\");\nvar util = require(\"util\");\nvar Declarator = require(\"./declarator\");\n\nfunction Block() {\n    Declarator.call(this);\n}\n\nutil.inherits(Block, Declarator);\n\nBlock.prototype.varsDeclared = function (callContext, args) {\n    var todo = [];\n    this._todo = todo;\n    if (args.length) {\n        for (var i = args.length - 1; i >= 1; i--) {\n            todo.push(args[i]);\n        }\n        callContext.schedule(args[0], \"_argGot\");\n    }\n    else {\n        callContext.end(Activity.states.complete, null);\n    }\n}\n\nBlock.prototype._argGot = function (callContext, reason, result) {\n    var todo = this._todo;\n    if (reason === Activity.states.complete) {\n        if (todo.length === 0) {\n            callContext.complete(result);\n        }\n        else {\n            callContext.schedule(todo.pop(), \"_argGot\");\n        }\n    }\n    else {\n        callContext.end(reason, result);\n    }\n}\n\nmodule.exports = Block;"],"sourceRoot":"/source/"}