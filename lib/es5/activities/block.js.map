{"version":3,"names":[],"mappings":"","sources":["activities/block.js"],"sourcesContent":["var Activity = require(\"./activity\");\r\nvar util = require(\"util\");\r\nvar Declarator = require(\"./declarator\");\r\n\r\nfunction Block() {\r\n    Declarator.call(this);\r\n}\r\n\r\nutil.inherits(Block, Declarator);\r\n\r\nBlock.prototype.varsDeclared = function (callContext, args) {\r\n    var todo = [];\r\n    this._todo = todo;\r\n    if (args.length) {\r\n        for (var i = args.length - 1; i >= 1; i--) {\r\n            todo.push(args[i]);\r\n        }\r\n        callContext.schedule(args[0], \"_argGot\");\r\n    }\r\n    else {\r\n        callContext.end(Activity.states.complete, null);\r\n    }\r\n}\r\n\r\nBlock.prototype._argGot = function (callContext, reason, result) {\r\n    var todo = this._todo;\r\n    if (reason === Activity.states.complete) {\r\n        if (todo.length === 0) {\r\n            callContext.complete(result);\r\n        }\r\n        else {\r\n            callContext.schedule(todo.pop(), \"_argGot\");\r\n        }\r\n    }\r\n    else {\r\n        callContext.end(reason, result);\r\n    }\r\n}\r\n\r\nmodule.exports = Block;"],"file":"activities/block.js","sourceRoot":"/source/"}