{"version":3,"sources":["activities/activity.js"],"names":[],"mappings":"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","file":"activities/activity.js","sourcesContent":["/*jshint -W054 */\n\n\"use strict\";\n\nlet constants = require(\"../common/constants\");\nlet errors = require(\"../common/errors\");\nlet enums = require(\"../common/enums\");\nlet _ = require(\"lodash\");\nlet specStrings = require(\"../common/specStrings\");\nlet util = require(\"util\");\nlet is = require(\"../common/is\");\nlet CallContext = require(\"./callContext\");\nlet uuid = require('node-uuid');\nlet async = require(\"../common/asyncHelpers\").async;\nlet assert = require(\"better-assert\");\nlet debug = require(\"debug\")(\"wf4node:Activity\");\nlet common = require(\"../common\");\nlet SimpleProxy = common.SimpleProxy;\n\nfunction Activity() {\n    this.args = null;\n    this.displayName = null;\n    this.id = uuid.v4();\n    this._instanceId = null;\n    this._structureInitialized = false;\n    this._scopeKeys = null;\n    this._createScopePartImpl = null;\n    this[\"@require\"] = null;\n\n    // Properties not serialized:\n    this.nonSerializedProperties = new Set();\n\n    // Properties are not going to copied in the scope:\n    this.nonScopedProperties = new Set();\n    this.nonScopedProperties.add(\"nonScopedProperties\");\n    this.nonScopedProperties.add(\"nonSerializedProperties\");\n    this.nonScopedProperties.add(\"arrayProperties\");\n    this.nonScopedProperties.add(\"activity\");\n    this.nonScopedProperties.add(\"id\");\n    this.nonScopedProperties.add(\"_instanceId\");\n    this.nonScopedProperties.add(\"args\");\n    this.nonScopedProperties.add(\"displayName\");\n    this.nonScopedProperties.add(\"complete\");\n    this.nonScopedProperties.add(\"cancel\");\n    this.nonScopedProperties.add(\"idle\");\n    this.nonScopedProperties.add(\"fail\");\n    this.nonScopedProperties.add(\"end\");\n    this.nonScopedProperties.add(\"schedule\");\n    this.nonScopedProperties.add(\"createBookmark\");\n    this.nonScopedProperties.add(\"resumeBookmark\");\n    this.nonScopedProperties.add(\"resultCollected\");\n    this.nonScopedProperties.add(\"codeProperties\");\n    this.nonScopedProperties.add(\"initializeStructure\");\n    this.nonScopedProperties.add(\"_initializeStructure\");\n    this.nonScopedProperties.add(\"_structureInitialized\");\n    this.nonScopedProperties.add(\"clone\");\n    this.nonScopedProperties.add(\"_scopeKeys\");\n    this.nonScopedProperties.add(\"_createScopePartImpl\");\n    this.nonScopedProperties.add(\"@require\");\n    this.nonScopedProperties.add(\"initializeExec\");\n    this.nonScopedProperties.add(\"unInitializeExec\");\n\n    this.codeProperties = new Set();\n    this.arrayProperties = new Set([\"args\"]);\n}\n\nObject.defineProperties(Activity.prototype, {\n    collectAll: {\n        value: true,\n        writable: false,\n        enumerable: false\n    },\n    instanceId: {\n        enumerable: false,\n        get: function() {\n            if (this._instanceId) {\n                return this._instanceId;\n            }\n            throw new errors.ActivityRuntimeError(\"Activity is not initialized in a context.\");\n        },\n        set: function(value) {\n            this._instanceId = value;\n        }\n    }\n});\n\nActivity.prototype.toString = function () {\n    return (this.displayName ? (this.displayName + \" \") : \"\") + \"(\" + this.constructor.name + \":\" + this.id + \")\";\n};\n\n/* forEach */\nActivity.prototype.all = function* (execContext) {\n    yield * this._children(true, null, execContext, null);\n};\n\nActivity.prototype.children = function* (execContext) {\n    yield * this._children(true, this, execContext, null);\n};\n\nActivity.prototype.immediateChildren = function* (execContext) {\n    yield * this._children(false, this, execContext);\n};\n\nActivity.prototype._children = function* (deep, except, execContext, visited) {\n    assert(execContext instanceof require(\"./activityExecutionContext\"), \"Cannot enumerate activities without an execution context.\");\n    visited = visited || new Set();\n    let self = this;\n    if (!visited.has(self)) {\n        visited.add(self);\n\n        // Ensure it's structure created:\n        this._initializeStructure(execContext);\n\n        if (self !== except) {\n            yield self;\n        }\n\n        for (let fieldName in self) {\n            if (self.hasOwnProperty(fieldName)) {\n                let fieldValue = self[fieldName];\n                if (fieldValue) {\n                    if (_.isArray(fieldValue)) {\n                        for (let obj of fieldValue) {\n                            if (obj instanceof Activity) {\n                                if (deep) {\n                                    yield * obj._children(deep, except, execContext, visited);\n                                }\n                                else {\n                                    yield obj;\n                                }\n                            }\n                        }\n                    }\n                    else if (fieldValue instanceof Activity) {\n                        if (deep) {\n                            yield * fieldValue._children(deep, except, execContext, visited);\n                        }\n                        else {\n                            yield fieldValue;\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n/* forEach */\n\n/* Structure */\nActivity.prototype.isArrayProperty = function (propName) {\n    return this.arrayProperties.has(propName);\n};\n\nActivity.prototype._initializeStructure = function (execContext) {\n    if (!this._structureInitialized) {\n        this.initializeStructure(execContext);\n        this._structureInitialized = true;\n    }\n};\n\nActivity.prototype.initializeStructure = _.noop;\n\nActivity.prototype.clone = function () {\n    function makeClone(value, canCloneArrays) {\n        if (value instanceof Activity) {\n            return value.clone();\n        }\n        else if (value instanceof Set) {\n            let newSet = new Set();\n            for (let item of value.values()) {\n                newSet.add(item);\n            }\n            return newSet;\n        }\n        else if (_.isArray(value)) {\n            if (canCloneArrays) {\n                let newArray = [];\n                for (let item of value) {\n                    newArray.push(makeClone(item, false));\n                }\n                return newArray;\n            }\n            else {\n                return value;\n            }\n        }\n        else {\n            return value;\n        }\n    }\n\n    let Constructor = this.constructor;\n    let newInst = new Constructor();\n    for (let key in this) {\n        if (this.hasOwnProperty(key)) {\n            let value = this[key];\n            if (newInst[key] !== value) {\n                newInst[key] = makeClone(value, true);\n            }\n        }\n    }\n    return newInst;\n};\n\n/* RUN */\nActivity.prototype.start = function (callContext) {\n    if (!(callContext instanceof CallContext)) {\n        throw new Error(\"Argument 'context' is not an instance of ActivityExecutionContext.\");\n    }\n\n    let args;\n    if (arguments.length > 1) {\n        args = [];\n        for (let i = 1; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n    }\n\n    this._start(callContext, null, args);\n};\n\nActivity.prototype._start = function (callContext, variables, args) {\n    let self = this;\n\n    if (_.isUndefined(args)) {\n        args = this.args || [];\n    }\n\n    if (!_.isArray(args)) {\n        args = [args];\n    }\n\n    let myCallContext = callContext.next(self, variables);\n    let state = myCallContext.executionState;\n    if (state.isRunning) {\n        throw new Error(\"Activity is already running.\");\n    }\n\n    // We should allow IO operations to execute:\n    setImmediate(\n        function () {\n            state.reportState(Activity.states.run, null, myCallContext.scope);\n            try {\n                self.initializeExec.call(myCallContext.scope);\n                self.run.call(myCallContext.scope, myCallContext, args);\n            }\n            catch (e) {\n                self.fail(myCallContext, e);\n            }\n        });\n};\n\nActivity.prototype.initializeExec = _.noop;\n\nActivity.prototype.unInitializeExec = _.noop;\n\nActivity.prototype.run = function (callContext, args) {\n    callContext.activity.complete(callContext, args);\n};\n\nActivity.prototype.complete = function (callContext, result) {\n    this.end(callContext, Activity.states.complete, result);\n};\n\nActivity.prototype.cancel = function (callContext) {\n    this.end(callContext, Activity.states.cancel);\n};\n\nActivity.prototype.idle = function (callContext) {\n    this.end(callContext, Activity.states.idle);\n};\n\nActivity.prototype.fail = function (callContext, e) {\n    this.end(callContext, Activity.states.fail, e);\n};\n\nActivity.prototype.end = function (callContext, reason, result) {\n    try {\n        this.unInitializeExec.call(callContext.scope, reason, result);\n    }\n    catch (e) {\n        let message = `unInitializeExec failed. Reason of ending was '${reason}' and the result is '${result}.`;\n        reason = Activity.states.fail;\n        result = e;\n    }\n\n    let state = callContext.executionState;\n\n    if (state.execState === Activity.states.cancel || state.execState === Activity.states.fail) {\n        // It was cancelled or failed:\n        return;\n    }\n\n    state.execState = reason;\n\n    let inIdle = reason === Activity.states.idle;\n    let execContext = callContext.executionContext;\n    let savedScope = callContext.scope;\n    savedScope.update(SimpleProxy.updateMode.oneWay);\n    callContext = callContext.back(inIdle);\n\n    if (callContext) {\n        try {\n            let bmName = specStrings.activities.createValueCollectedBMName(this.instanceId);\n            if (execContext.isBookmarkExists(bmName)) {\n                execContext.resumeBookmarkInScope(callContext, bmName, reason, result)\n                    .then(function() {\n                        state.emitState(result, savedScope);\n                    },\n                    function(e) {\n                        state.emitState(result, savedScope);\n                        callContext.fail(e);\n                    });\n                return;\n            }\n        }\n        catch (e) {\n            callContext.fail(e);\n        }\n    }\n    else {\n        // We're on root, done.\n        // If wf in idle, but there are internal bookmark resume request,\n        // then instead of emitting done, we have to continue them.\n        if (inIdle && execContext.processResumeBookmarkQueue()) {\n            // We should not emmit idle event, because there was internal bookmark continutations, so we're done.\n            return;\n        }\n    }\n    state.emitState(result, savedScope);\n};\n\nActivity.prototype._defaultEndCallback = function (callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nActivity.prototype.schedule = function (callContext, obj, endCallback) {\n    let self = this;\n    let scope = callContext.scope;\n    let execContext = callContext.executionContext;\n    let selfId = callContext.instanceId;\n\n    if (!endCallback) {\n        endCallback = \"_defaultEndCallback\";\n    }\n\n    let invokeEndCallback = function (_reason, _result) {\n        setImmediate(function () {\n            scope[endCallback].call(scope, callContext, _reason, _result);\n        });\n    };\n\n    if (!_.isString(endCallback)) {\n        callContext.fail(new TypeError(\"Provided argument 'endCallback' value is not a string.\"));\n        return;\n    }\n    let cb = scope[endCallback];\n    if (!_.isFunction(cb)) {\n        callContext.fail(new TypeError(`'${endCallback}' is not a function.`));\n        return;\n    }\n\n    if (scope.__schedulingState) {\n        debug(\"%s: Error, already existsing state: %j\", selfId, scope.__schedulingState);\n        callContext.fail(new errors.ActivityStateExceptionError(\"There are already scheduled items exists.\"));\n        return;\n    }\n\n    debug(\"%s: Scheduling object(s) by using end callback '%s': %j\", selfId, endCallback, obj);\n\n    let state =\n    {\n        many: _.isArray(obj),\n        indices: new Map(),\n        results: [],\n        total: 0,\n        idleCount: 0,\n        cancelCount: 0,\n        completedCount: 0,\n        endBookmarkName: null,\n        endCallbackName: endCallback\n    };\n\n    let bookmarkNames = [];\n    try {\n        let startedAny = false;\n        let index = 0;\n        let processValue = function (value) {\n            debug(\"%s: Checking value: %j\", selfId, value);\n            let activity, variables = null;\n            if (value instanceof Activity) {\n                activity = value;\n            }\n            else if (_.isObject(value) && value.activity instanceof Activity) {\n                activity = value.activity;\n                variables = _.isObject(value.variables) ? value.variables : null;\n            }\n            if (activity) {\n                let instanceId = activity.instanceId;\n                debug(\"%s: Value is an activity with instance id: %s\", selfId, instanceId);\n                if (state.indices.has(instanceId)) {\n                    throw new errors.ActivityStateExceptionError(`Activity instance '${instanceId} has been scheduled already.`);\n                }\n                debug(\"%s: Creating end bookmark, and starting it.\", selfId);\n                bookmarkNames.push(execContext.createBookmark(selfId, specStrings.activities.createValueCollectedBMName(instanceId), \"resultCollected\"));\n                activity._start(callContext, variables);\n                startedAny = true;\n                state.indices.set(instanceId, index);\n                state.results.push(null);\n                state.total++;\n            }\n            else {\n                debug(\"%s: Value is not an activity.\", selfId);\n                state.results.push(value);\n            }\n        };\n        if (state.many) {\n            debug(\"%s: There are many values, iterating.\", selfId);\n            for (let value of obj) {\n                processValue(value);\n                index++;\n            }\n        }\n        else {\n            processValue(obj);\n        }\n        if (!startedAny) {\n            debug(\"%s: No activity has been started, calling end callback with original object.\", selfId);\n            let result = state.many ? state.results : state.results[0];\n            invokeEndCallback(Activity.states.complete, result);\n        }\n        else {\n            debug(\"%s: %d activities has been started. Registering end bookmark.\", selfId, state.indices.size);\n            let endBM = specStrings.activities.createCollectingCompletedBMName(selfId);\n            bookmarkNames.push(execContext.createBookmark(selfId, endBM, endCallback));\n            state.endBookmarkName = endBM;\n            scope.__schedulingState = state;\n        }\n        scope.update(SimpleProxy.updateMode.oneWay);\n    }\n    catch (e) {\n        debug(\"%s: Runtime error happened: %s\", selfId, e.stack);\n        if (bookmarkNames.length) {\n            debug(\"%s: Set bookmarks to noop: $j\", selfId, bookmarkNames);\n            execContext.noopCallbacks(bookmarkNames);\n        }\n        scope.delete(\"__schedulingState\");\n        debug(\"%s: Invoking end callback with the error.\", selfId);\n        invokeEndCallback(Activity.states.fail, e);\n    }\n    finally {\n        debug(\"%s: Final state indices count: %d, total: %d\", selfId, state.indices.size, state.total);\n    }\n};\n\nActivity.prototype.resultCollected = function (callContext, reason, result, bookmark) {\n    let selfId = callContext.instanceId;\n    let execContext = callContext.executionContext;\n    let childId = specStrings.getString(bookmark.name);\n    debug(\"%s: Scheduling result item collected, childId: %s, reason: %s, result: %j, bookmark: %j\", selfId, childId, reason, result, bookmark);\n\n    let finished = null;\n    let state = this.__schedulingState;\n    let fail = false;\n    try {\n        if (!_.isObject(state)) {\n            throw new errors.ActivityStateExceptionError(\"Value of __schedulingState is '\" + state + \"'.\");\n        }\n        let index = state.indices.get(childId);\n        if (_.isUndefined(index)) {\n            throw new errors.ActivityStateExceptionError(`Child activity of '${childId}' scheduling state index out of range.`);\n        }\n\n        debug(\"%s: Finished child activity id is: %s\", selfId, childId);\n\n        switch (reason) {\n            case Activity.states.complete:\n                debug(\"%s: Setting %d. value to result: %j\", selfId, index, result);\n                state.results[index] = result;\n                debug(\"%s: Removing id from state.\", selfId);\n                state.indices.delete(childId);\n                state.completedCount++;\n                break;\n            case Activity.states.fail:\n                debug(\"%s: Failed with: %s\", selfId, result.stack);\n                fail = true;\n                state.indices.delete(childId);\n                break;\n            case Activity.states.cancel:\n                debug(\"%s: Incrementing cancel counter.\", selfId);\n                state.cancelCount++;\n                debug(\"%s: Removing id from state.\", selfId);\n                state.indices.delete(childId);\n                break;\n            case Activity.states.idle:\n                debug(\"%s: Incrementing idle counter.\", selfId);\n                state.idleCount++;\n                break;\n            default:\n                throw new errors.ActivityStateExceptionError(`Result collected with unknown reason '${reason}'.`);\n        }\n\n        debug(\"%s: State so far = total: %s, indices count: %d, completed count: %d, cancel count: %d, error count: %d, idle count: %d\",\n            selfId,\n            state.total,\n            state.indices.size,\n            state.completedCount,\n            state.cancelCount,\n            state.idleCount);\n\n        let endWithNoCollectAll = !callContext.activity.collectAll && reason !== Activity.states.idle;\n        if (endWithNoCollectAll || fail) {\n            if (!fail) {\n                debug(\"%s: ---- Collecting of values ended, because we're not collecting all values (eg.: Pick).\", selfId);\n            }\n            else {\n                debug(\"%s: ---- Collecting of values ended, because of an error.\", selfId);\n            }\n            debug(\"%s: Shutting down %d other, running acitvities.\", selfId, state.indices.size);\n            let ids = [];\n            for (let id of state.indices.keys()) {\n                ids.push(id);\n                debug(\"%s: Deleting scope of activity: %s\", selfId, id);\n                execContext.deleteScopeOfActivity(callContext, id);\n                let ibmName = specStrings.activities.createValueCollectedBMName(id);\n                debug(\"%s: Deleting value collected bookmark: %s\", selfId, ibmName);\n                execContext.deleteBookmark(ibmName);\n            }\n            execContext.cancelExecution(this, ids);\n            debug(\"%s: Activities cancelled: %j\", selfId, ids);\n            debug(\"%s: Reporting the actual reason: %s and result: %j\", selfId, reason, result);\n            finished = function () { execContext.resumeBookmarkInScope(callContext, state.endBookmarkName, reason, result); };\n        }\n        else {\n            assert(!fail);\n            let onEnd = (state.indices.size - state.idleCount) === 0;\n            if (onEnd) {\n                debug(\"%s: ---- Collecting of values ended (ended because of collect all is off: %s).\", selfId, endWithNoCollectAll);\n                if (state.cancelCount) {\n                    debug(\"%s: Collecting has been cancelled, resuming end bookmarks.\", selfId);\n                    finished = function () { execContext.resumeBookmarkInScope(callContext, state.endBookmarkName, Activity.states.cancel); };\n                }\n                else if (state.idleCount) {\n                    debug(\"%s: This entry has been gone to idle, propagating counter.\", selfId);\n                    state.idleCount--; // Because the next call will wake up a thread.\n                    execContext.resumeBookmarkInScope(callContext, state.endBookmarkName, Activity.states.idle);\n                }\n                else {\n                    result = state.many ? state.results : state.results[0];\n                    debug(\"%s: This entry has been completed, resuming collect bookmark with the result(s): %j\", selfId, result);\n                    finished = function () { execContext.resumeBookmarkInScope(callContext, state.endBookmarkName, Activity.states.complete, result); };\n                }\n            }\n        }\n    }\n    catch (e) {\n        callContext.fail(e);\n        this.delete(\"__schedulingState\");\n    }\n    finally {\n        if (finished) {\n            debug(\"%s: Schduling finished, removing state.\", selfId);\n            this.delete(\"__schedulingState\");\n\n            finished();\n        }\n    }\n};\n/* RUN */\n\n/* SCOPE */\nActivity.prototype._getScopeKeys = function () {\n    let self = this;\n    if (!self._scopeKeys || !self._structureInitialized) {\n        self._scopeKeys = [];\n        for (let key in self) {\n            if (!self.nonScopedProperties.has(key) &&\n                (_.isUndefined(Activity.prototype[key]) || key === \"_defaultEndCallback\" || key === \"_subActivitiesGot\")) {\n                self._scopeKeys.push(key);\n            }\n        }\n    }\n    return self._scopeKeys;\n};\n\nActivity.prototype.createScopePart = function () {\n    if (!this._structureInitialized) {\n        throw new errors.ActivityRuntimeError(\"Cannot create activity scope for uninitialized activities.\");\n    }\n\n    if (this._createScopePartImpl === null) {\n        let first = true;\n        let src = \"return {\";\n        for (let fieldName of this._getScopeKeys()) {\n            if (first) {\n                first = false;\n            }\n            else {\n                src += \",\\n\";\n            }\n            src += fieldName + \":a.\" + fieldName;\n        }\n        src += \"}\";\n\n        try {\n            this._createScopePartImpl = new Function(\"a,_\", src);\n        }\n        catch (e) {\n            debug(\"Invalid scope part function:%s\", src);\n            throw e;\n        }\n    }\n\n    return this._createScopePartImpl(this, _);\n};\n/* SCOPE */\n\nActivity.states = enums.activityStates;\n\nmodule.exports = Activity;\n"],"sourceRoot":"/source/"}