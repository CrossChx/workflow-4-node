{"version":3,"names":[],"mappings":"","sources":["activities/endMethod.js"],"sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet errors = require(\"../common/errors\");\nlet _ = require(\"lodash\");\n\nfunction EndMethod() {\n    Activity.call(this);\n    this.methodName = null;\n    this.instanceIdPath = null;\n    this.result = null;\n}\n\nutil.inherits(EndMethod, Activity);\n\nEndMethod.prototype.run = function (callContext, args) {\n    let methodName = this.methodName;\n    if (_.isString(methodName)) {\n        let mn = methodName.trim();\n        if (mn) {\n            callContext.schedule(this.result, \"_resultGot\");\n            return;\n        }\n    }\n    callContext.fail(new errors.ValidationError(\"EndMethod activity methodName property's value must be a valid identifier.\"));\n};\n\nEndMethod.prototype._resultGot = function (callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nmodule.exports = EndMethod;\n"],"file":"activities/endMethod.js","sourceRoot":"/source/"}