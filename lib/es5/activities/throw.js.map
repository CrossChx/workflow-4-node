{"version":3,"sources":["activities/throw.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,SAAS,KAAK,GAAG;AACb,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEpB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACrB;;AAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;AAE/B,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AAC/C,QAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACb,YAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;AAClC,gBAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;AACD,mBAAW,CAAC,QAAQ,EAAE,CAAC;KAC1B,MACI;AACD,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;KACjD;CACJ,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9D,QAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACrC,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChC,eAAO;KACV;;AAED,QAAI,CAAC,YAAA,CAAC;AACN,QAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpB,SAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;KACzB,MACI,IAAI,MAAM,YAAY,KAAK,EAAE;AAC9B,SAAC,GAAG,MAAM,CAAC;KACd,MACI;AACD,mBAAW,CAAC,QAAQ,EAAE,CAAC;AACvB,eAAO;KACV;;AAED,QAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;AAClC,YAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACrB,mBAAW,CAAC,QAAQ,EAAE,CAAC;KAC1B,MACI;AACD,mBAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"activities/throw.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet errors = require(\"../common/errors\");\nlet _ = require(\"lodash\");\n\nfunction Throw() {\n    Activity.call(this);\n\n    this.error = null;\n}\n\nutil.inherits(Throw, Activity);\n\nThrow.prototype.run = function (callContext, args) {\n    if (!this.error) {\n        if (!_.isUndefined(this.Try_ReThrow)) {\n            this.Try_ReThrow = true;\n        }\n        callContext.complete();\n    }\n    else {\n        callContext.schedule(this.error, \"_errorGot\");\n    }\n};\n\nThrow.prototype._errorGot = function(callContext, reason, result) {\n    if (reason !== Activity.states.complete) {\n        callContext.end(reason, result);\n        return;\n    }\n\n    let e;\n    if (_.isString(result)) {\n        e = new Error(result);\n    }\n    else if (result instanceof Error) {\n        e = result;\n    }\n    else {\n        callContext.complete();\n        return;\n    }\n\n    if (!_.isUndefined(this.Try_ReThrow)) {\n        this.Try_ReThrow = e;\n        callContext.complete();\n    }\n    else {\n        callContext.fail(e);\n    }\n};\n\nmodule.exports = Throw;"],"sourceRoot":"/source/"}