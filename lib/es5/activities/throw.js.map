{"version":3,"names":[],"mappings":"","sources":["activities/throw.js"],"sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet errors = require(\"../common/errors\");\nlet _ = require(\"lodash\");\n\nfunction Throw() {\n    Activity.call(this);\n\n    this.error = null;\n}\n\nutil.inherits(Throw, Activity);\n\nThrow.prototype.run = function (callContext, args) {\n    if (!this.error) {\n        if (!_.isUndefined(this.Try_ReThrow)) {\n            this.Try_ReThrow = true;\n        }\n        callContext.complete();\n    }\n    else {\n        callContext.schedule(this.error, \"_errorGot\");\n    }\n};\n\nThrow.prototype._errorGot = function(callContext, reason, result) {\n    if (reason !== Activity.states.complete) {\n        callContext.end(reason, result);\n        return;\n    }\n\n    let e;\n    if (_.isString(result)) {\n        e = new Error(result);\n    }\n    else if (result instanceof Error) {\n        e = result;\n    }\n    else {\n        callContext.complete();\n        return;\n    }\n\n    if (!_.isUndefined(this.Try_ReThrow)) {\n        this.Try_ReThrow = e;\n        callContext.complete();\n    }\n    else {\n        callContext.fail(e);\n    }\n};\n\nmodule.exports = Throw;"],"file":"activities/throw.js","sourceRoot":"/source/"}