{"version":3,"names":[],"mappings":"","sources":["activities/throw.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet util = require(\"util\");\r\nlet errors = require(\"../common/errors\");\r\nlet _ = require(\"lodash\");\r\n\r\nfunction Throw() {\r\n    Activity.call(this);\r\n\r\n    this.error = null;\r\n}\r\n\r\nutil.inherits(Throw, Activity);\r\n\r\nThrow.prototype.run = function (callContext, args) {\r\n    if (!this.error) {\r\n        if (!_.isUndefined(this.Try_ReThrow)) {\r\n            this.Try_ReThrow = true;\r\n        }\r\n        callContext.complete();\r\n    }\r\n    else {\r\n        callContext.schedule(this.error, \"_errorGot\");\r\n    }\r\n};\r\n\r\nThrow.prototype._errorGot = function(callContext, reason, result) {\r\n    if (reason !== Activity.states.complete) {\r\n        callContext.end(reason, result);\r\n        return;\r\n    }\r\n\r\n    let e;\r\n    if (_.isString(result)) {\r\n        e = new Error(result);\r\n    }\r\n    else if (result instanceof Error) {\r\n        e = result;\r\n    }\r\n    else {\r\n        callContext.complete();\r\n        return;\r\n    }\r\n\r\n    if (!_.isUndefined(this.Try_ReThrow)) {\r\n        this.Try_ReThrow = e;\r\n        callContext.complete();\r\n    }\r\n    else {\r\n        callContext.fail(e);\r\n    }\r\n};\r\n\r\nmodule.exports = Throw;"],"file":"activities/throw.js","sourceRoot":"/source/"}