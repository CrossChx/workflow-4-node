"use strict";
"use strict";
var Activity = require("./activity");
var util = require("util");
var _ = require("lodash");
function Console() {
  Activity.call(this);
  this.level = "log";
}
util.inherits(Console, Activity);
Console.prototype.run = function(callContext, args) {
  callContext.schedule(args, "_argsGot");
};
Console.prototype._argsGot = function(callContext, reason, result) {
  if (reason !== Activity.states.fail) {
    var f = console.log;
    switch (this.get("level")) {
      case "error":
        f = console.error;
        break;
      case "warn":
        f = console.warn;
        break;
      case "info":
        f = console.info;
        break;
    }
    f.apply(console, result);
    callContext.complete();
  } else {
    callContext.end(reason, result);
  }
};
module.exports = Console;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnNvbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxXQUFXLENBQUM7QUFFWixBQUFJLEVBQUEsQ0FBQSxRQUFPLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxZQUFXLENBQUMsQ0FBQztBQUNwQyxBQUFJLEVBQUEsQ0FBQSxJQUFHLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUMxQixBQUFJLEVBQUEsQ0FBQSxDQUFBLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUV6QixPQUFTLFFBQU0sQ0FBRSxBQUFELENBQUc7QUFDZixTQUFPLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBRW5CLEtBQUcsTUFBTSxFQUFJLE1BQUksQ0FBQztBQUN0QjtBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxPQUFNLENBQUcsU0FBTyxDQUFDLENBQUM7QUFFaEMsTUFBTSxVQUFVLElBQUksRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUNqRCxZQUFVLFNBQVMsQUFBQyxDQUFDLElBQUcsQ0FBRyxXQUFTLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsRUFBSSxVQUFTLFdBQVUsQ0FBRyxDQUFBLE1BQUssQ0FBRyxDQUFBLE1BQUssQ0FBRztBQUMvRCxLQUFJLE1BQUssSUFBTSxDQUFBLFFBQU8sT0FBTyxLQUFLLENBQUc7QUFDakMsQUFBSSxNQUFBLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxJQUFJLENBQUM7QUFDbkIsV0FBUSxJQUFHLElBQUksQUFBQyxDQUFDLE9BQU0sQ0FBQztBQUNwQixTQUFLLFFBQU07QUFDUCxRQUFBLEVBQUksQ0FBQSxPQUFNLE1BQU0sQ0FBQztBQUNqQixhQUFLO0FBQUEsQUFDVCxTQUFLLE9BQUs7QUFDTixRQUFBLEVBQUksQ0FBQSxPQUFNLEtBQUssQ0FBQztBQUNoQixhQUFLO0FBQUEsQUFDVCxTQUFLLE9BQUs7QUFDTixRQUFBLEVBQUksQ0FBQSxPQUFNLEtBQUssQ0FBQztBQUNoQixhQUFLO0FBQUEsSUFDYjtBQUNBLElBQUEsTUFBTSxBQUFDLENBQUMsT0FBTSxDQUFHLE9BQUssQ0FBQyxDQUFDO0FBQ3hCLGNBQVUsU0FBUyxBQUFDLEVBQUMsQ0FBQztFQUMxQixLQUNLO0FBQ0QsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7RUFDbkM7QUFBQSxBQUNKLENBQUM7QUFFRCxLQUFLLFFBQVEsRUFBSSxRQUFNLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL2NvbnNvbGUuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5sZXQgQWN0aXZpdHkgPSByZXF1aXJlKFwiLi9hY3Rpdml0eVwiKTtcbmxldCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5sZXQgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5cbmZ1bmN0aW9uIENvbnNvbGUoKSB7XG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcblxuICAgIHRoaXMubGV2ZWwgPSBcImxvZ1wiO1xufVxuXG51dGlsLmluaGVyaXRzKENvbnNvbGUsIEFjdGl2aXR5KTtcblxuQ29uc29sZS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XG4gICAgY2FsbENvbnRleHQuc2NoZWR1bGUoYXJncywgXCJfYXJnc0dvdFwiKTtcbn07XG5cbkNvbnNvbGUucHJvdG90eXBlLl9hcmdzR290ID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgaWYgKHJlYXNvbiAhPT0gQWN0aXZpdHkuc3RhdGVzLmZhaWwpIHtcbiAgICAgICAgbGV0IGYgPSBjb25zb2xlLmxvZztcbiAgICAgICAgc3dpdGNoICh0aGlzLmdldChcImxldmVsXCIpKSB7XG4gICAgICAgICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgICAgICAgICBmID0gY29uc29sZS5lcnJvcjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJ3YXJuXCI6XG4gICAgICAgICAgICAgICAgZiA9IGNvbnNvbGUud2FybjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJpbmZvXCI6XG4gICAgICAgICAgICAgICAgZiA9IGNvbnNvbGUuaW5mbztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBmLmFwcGx5KGNvbnNvbGUsIHJlc3VsdCk7XG4gICAgICAgIGNhbGxDb250ZXh0LmNvbXBsZXRlKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uc29sZTsiXX0=
