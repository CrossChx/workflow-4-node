{"version":3,"names":[],"mappings":"","sources":["activities/method.js"],"sourcesContent":["\"use strict\";\n\nlet Composite = require(\"./composite\");\nlet util = require(\"util\");\n\nfunction Method() {\n    Composite.call(this);\n\n    this.reserved(\"canCreateInstance\", false);\n    this.reserved(\"methodName\", null);\n    this.reserved(\"instanceIdPath\", \"\");\n    this.result = null;\n}\n\nutil.inherits(Method, Composite);\n\nMethod.prototype.createImplementation = function () {\n    return {\n        \"@block\": {\n            id: \"_methodBlock\",\n            a: null,\n            args: [\n                {\n                    \"@beginMethod\": {\n                        canCreateInstance: this.canCreateInstance,\n                        methodName: this.methodName,\n                        instanceIdPath: this.instanceIdPath,\n                        \"@to\": \"a\"\n                    }\n                },\n                {\n                    \"@endMethod\": {\n                        methodName: this.methodName,\n                        result: \"= this._methodBlock.$parent.result\"\n                    }\n                },\n                \"= this.a\"\n            ]\n        }\n    };\n};\n\nmodule.exports = Method;\n"],"file":"activities/method.js","sourceRoot":"/source/"}