{"version":3,"names":[],"mappings":"","sources":["activities/composite.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet util = require(\"util\");\r\nlet constants = require(\"../common/constants\");\r\nlet Declarator = require(\"./declarator\");\r\nlet is = require(\"../common/is\");\r\nlet _ = require(\"lodash\");\r\nlet activityMarkup = require(\"./activityMarkup\");\r\nlet assert = require(\"assert\");\r\n\r\nfunction Composite() {\r\n    Declarator.call(this);\r\n\r\n    this.reservedProperties.add(\"_implementation\");\r\n    this.nonSerializedProperties.add(\"_implementation\");\r\n    this.nonScopedProperties.add(\"createImplementation\");\r\n    this.nonScopedProperties.add(\"ensureImplementationCreated\");\r\n    this.nonScopedProperties.add(\"implementationCompleted\");\r\n}\r\n\r\nutil.inherits(Composite, Declarator);\r\n\r\nComposite.prototype.createImplementation = function (execContext) {\r\n    throw new Error(\"Method 'createImplementation' not implemented.\");\r\n};\r\n\r\nComposite.prototype.ensureImplementationCreated = function (execContext) {\r\n    assert(!!execContext);\r\n    if (_.isUndefined(this._implementation)) {\r\n        this._implementation = this.createImplementation(execContext);\r\n        if (_.isPlainObject(this._implementation)) {\r\n            this._implementation = activityMarkup.parse(this._implementation);\r\n        }\r\n        if (!(this._implementation instanceof Activity)) {\r\n            throw new Error(\"Method 'createImplementation' must return an activity.\");\r\n        }\r\n    }\r\n};\r\n\r\nComposite.prototype.initializeStructure = function (execContext) {\r\n    assert(!!execContext);\r\n    this.ensureImplementationCreated(execContext);\r\n};\r\n\r\nComposite.prototype.run = function (callContext, args) {\r\n    if (!(this._implementation instanceof Activity)) {\r\n        throw new Error(\"Composite activity's implementation is not available.\");\r\n    }\r\n    Declarator.prototype.run.call(this, callContext, args);\r\n};\r\n\r\nComposite.prototype.varsDeclared = function (callContext, args) {\r\n    callContext.schedule(this._implementation, \"_implInvoked\");\r\n};\r\n\r\nComposite.prototype._implInvoked = function (callContext, reason, result) {\r\n    callContext.activity.implementationCompleted.call(this, callContext, reason, result);\r\n};\r\n\r\nComposite.prototype.implementationCompleted = function (callContext, reason, result) {\r\n    callContext.end(reason, result);\r\n};\r\n\r\nmodule.exports = Composite;"],"file":"activities/composite.js","sourceRoot":"/source/"}