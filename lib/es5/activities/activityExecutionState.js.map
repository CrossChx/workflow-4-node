{"version":3,"sources":["activities/activityExecutionState.js"],"names":[],"mappings":"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","file":"activities/activityExecutionState.js","sourcesContent":["\"use strict\";\n\nlet EventEmitter = require('events').EventEmitter;\nlet util = require(\"util\");\nlet enums = require(\"../common/enums\");\nlet is = require(\"../common/is\");\nlet _ = require(\"lodash\");\n\nfunction ActivityExecutionState(activityInstanceId) {\n    this.instanceId = activityInstanceId;\n    this.execState = null;\n    this.parentInstanceId = null;\n    this.childInstanceIds = new Set();\n}\n\nutil.inherits(ActivityExecutionState, EventEmitter);\n\nObject.defineProperties(ActivityExecutionState.prototype, {\n    isRunning: {\n        get: function () {\n            return this.execState === enums.activityStates.run;\n        }\n    }\n});\n\nActivityExecutionState.prototype.reportState = function (reason, result, scope) {\n    if (this.execState !== reason) {\n        this.execState = reason;\n        this._emitState({\n            reason: reason,\n            result: result,\n            scope: scope\n        });\n    }\n};\n\nActivityExecutionState.prototype.emitState = function (result, scope) {\n    this._emitState({\n        reason: this.execState,\n        result: result,\n        scope: scope\n    });\n};\n\nActivityExecutionState.prototype._emitState = function (args) {\n    this.emit(args.reason, args);\n    if (args.reason !== enums.activityStates.run) {\n        this.emit(enums.activityStates.end, args);\n    }\n};\n\n/* SERIALIZATION */\nActivityExecutionState.prototype.asJSON = function () {\n    return {\n        execState: this.execState\n    };\n};\n\nActivityExecutionState.prototype.fromJSON = function (json) {\n    if (!_.isObject(json)) {\n        throw new TypeError(\"Object argument expected.\");\n    }\n    if (json.execState !== null) {\n        if (!_.isString(json.execState)) {\n            throw new TypeError(\"Argument object's execState property value is not a string.\");\n        }\n        if (_.isUndefined(enums.activityStates[json.execState])) {\n            throw new TypeError(\"Argument object's execState property value is not a valid Activity state value.\");\n        }\n    }\n\n    this.execState = json.execState;\n};\n/* SERIALIZATION */\n\nmodule.exports = ActivityExecutionState;\n"],"sourceRoot":"/source/"}