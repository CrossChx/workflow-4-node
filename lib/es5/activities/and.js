"use strict";
"use strict";
var Activity = require("./activity");
var util = require("util");
var _ = require("lodash");
function And() {
  Activity.call(this);
  this.isTrue = true;
  this.isFalse = false;
}
util.inherits(And, Activity);
And.prototype.run = function(callContext, args) {
  callContext.schedule(args, "_argsGot");
};
And.prototype._argsGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return ;
  }
  var isTrue = false;
  if (result.length) {
    isTrue = true;
    var $__3 = true;
    var $__4 = false;
    var $__5 = undefined;
    try {
      for (var $__1 = void 0,
          $__0 = (result)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__3 = ($__1 = $__0.next()).done); $__3 = true) {
        var v = $__1.value;
        {
          isTrue = (v ? true : false) && isTrue;
        }
      }
    } catch ($__6) {
      $__4 = true;
      $__5 = $__6;
    } finally {
      try {
        if (!$__3 && $__0.return != null) {
          $__0.return();
        }
      } finally {
        if ($__4) {
          throw $__5;
        }
      }
    }
  }
  if (isTrue) {
    callContext.schedule(this.get("isTrue"), "_done");
  } else {
    callContext.schedule(this.get("isFalse"), "_done");
  }
};
And.prototype._done = function(callContext, reason, result) {
  callContext.end(reason, result);
};
module.exports = And;
//# sourceMappingURL=data:application/json;base64,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QSxNQUFLLENBQUc7QUFDeEQsWUFBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUVELEtBQUssUUFBUSxFQUFJLElBQUUsQ0FBQztBQUFBIiwiZmlsZSI6ImFjdGl2aXRpZXMvYW5kLmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubGV0IEFjdGl2aXR5ID0gcmVxdWlyZShcIi4vYWN0aXZpdHlcIik7XG5sZXQgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xubGV0IF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xuXG5mdW5jdGlvbiBBbmQoKSB7XG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcblxuICAgIHRoaXMuaXNUcnVlID0gdHJ1ZTtcbiAgICB0aGlzLmlzRmFsc2UgPSBmYWxzZTtcbn1cblxudXRpbC5pbmhlcml0cyhBbmQsIEFjdGl2aXR5KTtcblxuQW5kLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIGFyZ3MpIHtcbiAgICBjYWxsQ29udGV4dC5zY2hlZHVsZShhcmdzLCBcIl9hcmdzR290XCIpO1xufTtcblxuQW5kLnByb3RvdHlwZS5fYXJnc0dvdCA9IGZ1bmN0aW9uKGNhbGxDb250ZXh0LCByZWFzb24sIHJlc3VsdCkge1xuICAgIGlmIChyZWFzb24gIT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGlzVHJ1ZSA9IGZhbHNlO1xuICAgIGlmIChyZXN1bHQubGVuZ3RoKSB7XG4gICAgICAgIGlzVHJ1ZSA9IHRydWU7XG4gICAgICAgIGZvciAobGV0IHYgb2YgcmVzdWx0KSB7XG4gICAgICAgICAgICBpc1RydWUgPSAodiA/IHRydWUgOiBmYWxzZSkgJiYgaXNUcnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzVHJ1ZSkge1xuICAgICAgICBjYWxsQ29udGV4dC5zY2hlZHVsZSh0aGlzLmdldChcImlzVHJ1ZVwiKSwgXCJfZG9uZVwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKHRoaXMuZ2V0KFwiaXNGYWxzZVwiKSwgXCJfZG9uZVwiKTtcbiAgICB9XG59O1xuXG5BbmQucHJvdG90eXBlLl9kb25lID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgY2FsbENvbnRleHQuZW5kKHJlYXNvbiwgcmVzdWx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQW5kOyJdfQ==
