{"version":3,"names":[],"mappings":"","sources":["activities/while.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet util = require(\"util\");\r\nlet WithBody = require(\"./withBody\");\r\n\r\nfunction While() {\r\n    WithBody.call(this);\r\n\r\n    this.condition = null;\r\n}\r\n\r\nutil.inherits(While, WithBody);\r\n\r\nWhile.prototype.run = function (callContext, args) {\r\n    let condition = this.condition;\r\n    if (condition) {\r\n        callContext.schedule(condition, \"_conditionGot\");\r\n    }\r\n    else {\r\n        callContext.complete();\r\n    }\r\n};\r\n\r\nWhile.prototype._conditionGot = function (callContext, reason, result) {\r\n    if (reason === Activity.states.complete) {\r\n        if (!result) {\r\n            callContext.complete(this._lastBodyResult);\r\n        }\r\n        else {\r\n            WithBody.prototype.run.call(this, callContext);\r\n        }\r\n    }\r\n    else {\r\n        callContext.end(reason, result);\r\n    }\r\n};\r\n\r\nWhile.prototype.bodyCompleted = function (callContext, reason, result) {\r\n    if (reason === Activity.states.complete) {\r\n        this._lastBodyResult = result;\r\n        callContext.schedule(this.condition, \"_conditionGot\");\r\n    }\r\n    else {\r\n        callContext.end(reason, result);\r\n    }\r\n};\r\n\r\nmodule.exports = While;"],"file":"activities/while.js","sourceRoot":"/source/"}