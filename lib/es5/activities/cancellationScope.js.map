{"version":3,"sources":["activities/cancellationScope.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE/B,SAAS,iBAAiB,GAAG;AACzB,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEpB,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CACzC;;AAED,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;;AAE3C,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAY;AAC1D,QAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AACzB,QAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,IAAI,CAAC,SAAS,EAAE;AAChB,YAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1B,YAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,YAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;KAC9B;CACJ,CAAC;;AAEF,iBAAiB,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AAC3D,eAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;CACrD,CAAC;;AAEF,iBAAiB,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAC/E,QAAI,IAAI,CAAC,SAAS,KACb,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,IAChC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,YAAY,MAAM,CAAC,SAAS,CAAC,AAAC,EAAE;AAC3E,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC,MACI;AACD,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACnC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,iBAAiB,CAAC","file":"activities/cancellationScope.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet errors = require(\"../common/errors\");\nlet Block = require(\"./block\");\n\nfunction CancellationScope() {\n    Activity.call(this);\n\n    this.cancelled = null;\n    this.arrayProperties.add(\"cancelled\");\n}\n\nutil.inherits(CancellationScope, Activity);\n\nCancellationScope.prototype.initializeStructure = function () {\n    this._body = new Block();\n    this._body.args = this.args;\n    this.args = null;\n    if (this.cancelled) {\n        let prev = this.cancelled;\n        this.cancelled = new Block();\n        this.cancelled.args = prev;\n    }\n};\n\nCancellationScope.prototype.run = function (callContext, args) {\n    callContext.schedule(this._body, \"_bodyFinished\");\n};\n\nCancellationScope.prototype._bodyFinished = function (callContext, reason, result) {\n    if (this.cancelled &&\n        (reason === Activity.states.cancel ||\n         (reason === Activity.states.fail && result instanceof errors.Cancelled))) {\n        callContext.schedule(this.cancelled);\n    }\n    else {\n        callContext.end(reason, result);\n    }\n};\n\nmodule.exports = CancellationScope;"],"sourceRoot":"/source/"}