{"version":3,"sources":["activities/and.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,SAAS,GAAG,GAAG;AACX,YAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEpB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,QAAI,CAAC,OAAO,GAAG,KAAK,CAAC;CACxB;;AAED,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;AAE7B,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,WAAW,EAAE,IAAI,EAAE;AAC7C,eAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;CAC1C,CAAC;;AAEF,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AAC3D,QAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;AACrC,mBAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChC,eAAO;KACV;;AAED,QAAI,MAAM,GAAG,KAAK,CAAC;AACnB,QAAI,MAAM,CAAC,MAAM,EAAE;AACf,cAAM,GAAG,IAAI,CAAC;;;;;;AACd,iCAAc,MAAM,8HAAE;oBAAb,CAAC;;AACN,sBAAM,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAA,IAAK,MAAM,CAAC;aACzC;;;;;;;;;;;;;;;KACJ;;AAED,QAAI,MAAM,EAAE;AACR,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KAC9C,MACI;AACD,mBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC/C;CACJ,CAAC;;AAEF,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE;AACxD,eAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACnC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"activities/and.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet util = require(\"util\");\nlet _ = require(\"lodash\");\n\nfunction And() {\n    Activity.call(this);\n\n    this.isTrue = true;\n    this.isFalse = false;\n}\n\nutil.inherits(And, Activity);\n\nAnd.prototype.run = function (callContext, args) {\n    callContext.schedule(args, \"_argsGot\");\n};\n\nAnd.prototype._argsGot = function(callContext, reason, result) {\n    if (reason !== Activity.states.complete) {\n        callContext.end(reason, result);\n        return;\n    }\n\n    let isTrue = false;\n    if (result.length) {\n        isTrue = true;\n        for (let v of result) {\n            isTrue = (v ? true : false) && isTrue;\n        }\n    }\n\n    if (isTrue) {\n        callContext.schedule(this.isTrue, \"_done\");\n    }\n    else {\n        callContext.schedule(this.isFalse, \"_done\");\n    }\n};\n\nAnd.prototype._done = function(callContext, reason, result) {\n    callContext.end(reason, result);\n};\n\nmodule.exports = And;"],"sourceRoot":"/source/"}