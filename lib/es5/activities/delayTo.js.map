{"version":3,"sources":["activities/delayTo.js"],"names":[],"mappings":"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","file":"activities/delayTo.js","sourcesContent":["\"use strict\";\n\nlet Activity = require(\"./activity\");\nlet Composite = require(\"./composite\");\nlet util = require(\"util\");\nlet _ = require(\"lodash\");\nlet specStrings = require(\"../common/specStrings\");\nlet errors = require(\"../common/errors\");\nlet assert = require(\"assert\");\nlet Bluebird = require(\"bluebird\");\n\nfunction DelayTo() {\n    Composite.call(this);\n\n    this.to = null;\n    this._inHost = false;\n}\n\nutil.inherits(DelayTo, Composite);\n\nDelayTo.prototype.createImplementation = function (execContext) {\n    assert(!!execContext);\n    let methodName = specStrings.hosting.createDelayToMethodName(this.instanceId);\n    return {\n        \"@block\": {\n            inHost: \"= this.$parent._inHost\",\n            delayTo: \"= this.$parent.to\",\n            args: {\n                \"@if\": {\n                    condition: \"= this.inHost\",\n                    then: {\n                        \"@block\": {\n                            v: null,\n                            done: false,\n                            args: [\n                                {\n                                    \"@if\": {\n                                        condition: \"= _.isDate(this.delayTo)\",\n                                        then: [\n                                            {\n                                                \"@while\": {\n                                                    condition: \"= !this.done\",\n                                                    args: [\n                                                        {\n                                                            \"@beginMethod\": {\n                                                                methodName: methodName,\n                                                                instanceIdPath: \"[0]\",\n                                                                \"@to\": \"v\"\n                                                            }\n                                                        },\n                                                        {\n                                                            \"@if\": {\n                                                                condition: \"= this.v[1].getTime() === this.delayTo.getTime()\",\n                                                                then: {\n                                                                    \"@assign\": {\n                                                                        to: \"done\",\n                                                                        value: true\n                                                                    }\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            \"@endMethod\": {\n                                                                methodName: methodName\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    else: function() {\n                        if (this.delayTo && _.isDate(this.delayTo)) {\n                            let ms = this.delayTo - new Date();\n                            if (ms < 0) {\n                                ms = 0;\n                            }\n                            if (ms) {\n                                return Bluebird.delay(ms);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n};\n\nDelayTo.prototype.run = function(callContext, args) {\n    this._inHost = !!callContext.executionContext.engine.instance;\n    Composite.prototype.run.call(this, callContext, args);\n};\n\nmodule.exports = DelayTo;"],"sourceRoot":"/source/"}