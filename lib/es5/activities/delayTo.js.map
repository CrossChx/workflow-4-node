{"version":3,"names":[],"mappings":"","sources":["activities/delayTo.js"],"sourcesContent":["\"use strict\";\r\n\r\nlet Activity = require(\"./activity\");\r\nlet Composite = require(\"./composite\");\r\nlet util = require(\"util\");\r\nlet _ = require(\"lodash\");\r\nlet specStrings = require(\"../common/specStrings\");\r\nlet errors = require(\"../common/errors\");\r\nlet assert = require(\"assert\");\r\nlet Bluebird = require(\"bluebird\");\r\n\r\nfunction DelayTo() {\r\n    Composite.call(this);\r\n\r\n    this.to = null;\r\n    this._inHost = false;\r\n}\r\n\r\nutil.inherits(DelayTo, Composite);\r\n\r\nDelayTo.prototype.createImplementation = function (execContext) {\r\n    assert(!!execContext);\r\n    let methodName = specStrings.hosting.createDelayToMethodName(this.instanceId);\r\n    return {\r\n        \"@block\": {\r\n            inHost: \"= this.$parent._inHost\",\r\n            delayTo: \"= this.$parent.to\",\r\n            args: {\r\n                \"@if\": {\r\n                    condition: \"= this.inHost\",\r\n                    then: {\r\n                        \"@block\": {\r\n                            v: null,\r\n                            done: false,\r\n                            args: [\r\n                                {\r\n                                    \"@if\": {\r\n                                        condition: \"= _.isDate(this.delayTo)\",\r\n                                        then: [\r\n                                            {\r\n                                                \"@while\": {\r\n                                                    condition: \"= !this.done\",\r\n                                                    args: [\r\n                                                        {\r\n                                                            \"@beginMethod\": {\r\n                                                                methodName: methodName,\r\n                                                                instanceIdPath: \"[0]\",\r\n                                                                \"@to\": \"v\"\r\n                                                            }\r\n                                                        },\r\n                                                        {\r\n                                                            \"@if\": {\r\n                                                                condition: \"= this.v[1].getTime() === this.delayTo.getTime()\",\r\n                                                                then: {\r\n                                                                    \"@assign\": {\r\n                                                                        to: \"done\",\r\n                                                                        value: true\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        },\r\n                                                        {\r\n                                                            \"@endMethod\": {\r\n                                                                methodName: methodName\r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    else: function() {\r\n                        if (this.delayTo && _.isDate(this.delayTo)) {\r\n                            let ms = this.delayTo - new Date();\r\n                            if (ms < 0) {\r\n                                ms = 0;\r\n                            }\r\n                            if (ms) {\r\n                                return Bluebird.delay(ms);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nDelayTo.prototype.run = function(callContext, args) {\r\n    this._inHost = !!callContext.executionContext.engine.instance;\r\n    Composite.prototype.run.call(this, callContext, args);\r\n};\r\n\r\nmodule.exports = DelayTo;"],"file":"activities/delayTo.js","sourceRoot":"/source/"}