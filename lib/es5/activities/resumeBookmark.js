"use strict";
var Activity = require("./activity");
var util = require("util");
var errors = require("../common/errors");
function ResumeBookmark() {
  Activity.call(this);
  this.bookmarkName = "";
  this.reason = Activity.states.complete;
  this.mustExists = true;
}
ResumeBookmark.validReasons = [Activity.states.complete, Activity.states.fail, Activity.states.cancel];
util.inherits(ResumeBookmark, Activity);
ResumeBookmark.prototype.run = function(callContext, args) {
  var bookmarkName = this.get("bookmarkName");
  var reason = this.get("reason");
  if (!bookmarkName)
    callContext.fail(new errors.ValidationError("Bookmark name expected."));
  if (ResumeBookmark.validReasons.indexOf(reason) === -1)
    callContext.fail(new errors.ValidationError("Reason value '" + reason + "' is not valid."));
  var result = false;
  if (this.get("mustExists")) {
    callContext.resumeBookmark(bookmarkName, reason, args);
    result = true;
  } else {
    if (callContext.executionContext.isBookmarkExists(bookmarkName)) {
      callContext.resumeBookmark(bookmarkName, reason, args);
      result = true;
    }
  }
  callContext.complete(result);
};
module.exports = ResumeBookmark;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3VtZUJvb2ttYXJrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsa0JBQWlCLENBQUMsQ0FBQztBQUV4QyxPQUFTLGVBQWEsQ0FBRSxBQUFELENBQUc7QUFDdEIsU0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUNuQixLQUFHLGFBQWEsRUFBSSxHQUFDLENBQUM7QUFDdEIsS0FBRyxPQUFPLEVBQUksQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFDO0FBQ3RDLEtBQUcsV0FBVyxFQUFJLEtBQUcsQ0FBQztBQUMxQjtBQUFBLEFBRUEsYUFBYSxhQUFhLEVBQUksRUFBQyxRQUFPLE9BQU8sU0FBUyxDQUFHLENBQUEsUUFBTyxPQUFPLEtBQUssQ0FBRyxDQUFBLFFBQU8sT0FBTyxPQUFPLENBQUMsQ0FBQztBQUV0RyxHQUFHLFNBQVMsQUFBQyxDQUFDLGNBQWEsQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUV2QyxhQUFhLFVBQVUsSUFBSSxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsSUFBRyxDQUFHO0FBQ3hELEFBQUksSUFBQSxDQUFBLFlBQVcsRUFBSSxDQUFBLElBQUcsSUFBSSxBQUFDLENBQUMsY0FBYSxDQUFDLENBQUM7QUFDM0MsQUFBSSxJQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsSUFBRyxJQUFJLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUUvQixLQUFJLENBQUMsWUFBVztBQUFHLGNBQVUsS0FBSyxBQUFDLENBQUMsR0FBSSxDQUFBLE1BQUssZ0JBQWdCLEFBQUMsQ0FBQyx5QkFBd0IsQ0FBQyxDQUFDLENBQUM7QUFBQSxBQUMxRixLQUFJLGNBQWEsYUFBYSxRQUFRLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQSxHQUFNLEVBQUMsQ0FBQTtBQUFHLGNBQVUsS0FBSyxBQUFDLENBQUMsR0FBSSxDQUFBLE1BQUssZ0JBQWdCLEFBQUMsQ0FBQyxnQkFBZSxFQUFJLE9BQUssQ0FBQSxDQUFJLGtCQUFnQixDQUFDLENBQUMsQ0FBQztBQUFBLEFBRS9JLElBQUEsQ0FBQSxNQUFLLEVBQUksTUFBSSxDQUFDO0FBQ2xCLEtBQUksSUFBRyxJQUFJLEFBQUMsQ0FBQyxZQUFXLENBQUMsQ0FBRztBQUN4QixjQUFVLGVBQWUsQUFBQyxDQUFDLFlBQVcsQ0FBRyxPQUFLLENBQUcsS0FBRyxDQUFDLENBQUM7QUFDdEQsU0FBSyxFQUFJLEtBQUcsQ0FBQztFQUNqQixLQUNLO0FBQ0QsT0FBSSxXQUFVLGlCQUFpQixpQkFBaUIsQUFBQyxDQUFDLFlBQVcsQ0FBQyxDQUFHO0FBQzdELGdCQUFVLGVBQWUsQUFBQyxDQUFDLFlBQVcsQ0FBRyxPQUFLLENBQUcsS0FBRyxDQUFDLENBQUM7QUFDdEQsV0FBSyxFQUFJLEtBQUcsQ0FBQztJQUNqQjtBQUFBLEVBQ0o7QUFBQSxBQUVBLFlBQVUsU0FBUyxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDaEMsQ0FBQTtBQUVBLEtBQUssUUFBUSxFQUFJLGVBQWEsQ0FBQztBQUMvQiIsImZpbGUiOiJhY3Rpdml0aWVzL3Jlc3VtZUJvb2ttYXJrLmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQWN0aXZpdHkgPSByZXF1aXJlKFwiLi9hY3Rpdml0eVwiKTtcbnZhciB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG52YXIgZXJyb3JzID0gcmVxdWlyZShcIi4uL2NvbW1vbi9lcnJvcnNcIik7XG5cbmZ1bmN0aW9uIFJlc3VtZUJvb2ttYXJrKCkge1xuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XG4gICAgdGhpcy5ib29rbWFya05hbWUgPSBcIlwiO1xuICAgIHRoaXMucmVhc29uID0gQWN0aXZpdHkuc3RhdGVzLmNvbXBsZXRlO1xuICAgIHRoaXMubXVzdEV4aXN0cyA9IHRydWU7XG59XG5cblJlc3VtZUJvb2ttYXJrLnZhbGlkUmVhc29ucyA9IFtBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUsIEFjdGl2aXR5LnN0YXRlcy5mYWlsLCBBY3Rpdml0eS5zdGF0ZXMuY2FuY2VsXTtcblxudXRpbC5pbmhlcml0cyhSZXN1bWVCb29rbWFyaywgQWN0aXZpdHkpO1xuXG5SZXN1bWVCb29rbWFyay5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XG4gICAgdmFyIGJvb2ttYXJrTmFtZSA9IHRoaXMuZ2V0KFwiYm9va21hcmtOYW1lXCIpO1xuICAgIHZhciByZWFzb24gPSB0aGlzLmdldChcInJlYXNvblwiKTtcblxuICAgIGlmICghYm9va21hcmtOYW1lKSBjYWxsQ29udGV4dC5mYWlsKG5ldyBlcnJvcnMuVmFsaWRhdGlvbkVycm9yKFwiQm9va21hcmsgbmFtZSBleHBlY3RlZC5cIikpO1xuICAgIGlmIChSZXN1bWVCb29rbWFyay52YWxpZFJlYXNvbnMuaW5kZXhPZihyZWFzb24pID09PSAtMSkgY2FsbENvbnRleHQuZmFpbChuZXcgZXJyb3JzLlZhbGlkYXRpb25FcnJvcihcIlJlYXNvbiB2YWx1ZSAnXCIgKyByZWFzb24gKyBcIicgaXMgbm90IHZhbGlkLlwiKSk7XG5cbiAgICB2YXIgcmVzdWx0ID0gZmFsc2U7XG4gICAgaWYgKHRoaXMuZ2V0KFwibXVzdEV4aXN0c1wiKSkge1xuICAgICAgICBjYWxsQ29udGV4dC5yZXN1bWVCb29rbWFyayhib29rbWFya05hbWUsIHJlYXNvbiwgYXJncyk7XG4gICAgICAgIHJlc3VsdCA9IHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoY2FsbENvbnRleHQuZXhlY3V0aW9uQ29udGV4dC5pc0Jvb2ttYXJrRXhpc3RzKGJvb2ttYXJrTmFtZSkpIHtcbiAgICAgICAgICAgIGNhbGxDb250ZXh0LnJlc3VtZUJvb2ttYXJrKGJvb2ttYXJrTmFtZSwgcmVhc29uLCBhcmdzKTtcbiAgICAgICAgICAgIHJlc3VsdCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjYWxsQ29udGV4dC5jb21wbGV0ZShyZXN1bHQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc3VtZUJvb2ttYXJrO1xuIl19
