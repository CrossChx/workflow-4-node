"use strict";
var Activity = require("./activity");
var util = require("util");
var errors = require("../common/errors");
var Block = require("./block");
function CancellationScope() {
  Activity.call(this);
  this.cancelled = null;
  this.arrayProperties.add("cancelled");
}
util.inherits(CancellationScope, Activity);
CancellationScope.prototype.initializeStructure = function() {
  this._body = new Block();
  this._body.args = this.args;
  this.args = null;
  if (this.cancelled) {
    var prev = this.cancelled;
    this.cancelled = new Block();
    this.cancelled.args = prev;
  }
};
CancellationScope.prototype.run = function(callContext, args) {
  callContext.schedule(this._body, "_bodyFinished");
};
CancellationScope.prototype._bodyFinished = function(callContext, reason, result) {
  if (this.cancelled && (reason === Activity.states.cancel || (reason === Activity.states.fail && result instanceof errors.Cancelled))) {
    callContext.schedule(this.cancelled);
  } else {
    callContext.end(reason, result);
  }
};
module.exports = CancellationScope;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbmNlbGxhdGlvblNjb3BlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsa0JBQWlCLENBQUMsQ0FBQztBQUN4QyxBQUFJLEVBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQztBQUU5QixPQUFTLGtCQUFnQixDQUFFLEFBQUQsQ0FBRztBQUN6QixTQUFPLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBRW5CLEtBQUcsVUFBVSxFQUFJLEtBQUcsQ0FBQztBQUNyQixLQUFHLGdCQUFnQixJQUFJLEFBQUMsQ0FBQyxXQUFVLENBQUMsQ0FBQztBQUN6QztBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxpQkFBZ0IsQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUUxQyxnQkFBZ0IsVUFBVSxvQkFBb0IsRUFBSSxVQUFVLEFBQUQsQ0FBRztBQUMxRCxLQUFHLE1BQU0sRUFBSSxJQUFJLE1BQUksQUFBQyxFQUFDLENBQUM7QUFDeEIsS0FBRyxNQUFNLEtBQUssRUFBSSxDQUFBLElBQUcsS0FBSyxDQUFDO0FBQzNCLEtBQUcsS0FBSyxFQUFJLEtBQUcsQ0FBQztBQUNoQixLQUFJLElBQUcsVUFBVSxDQUFHO0FBQ2hCLEFBQUksTUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLElBQUcsVUFBVSxDQUFDO0FBQ3pCLE9BQUcsVUFBVSxFQUFJLElBQUksTUFBSSxBQUFDLEVBQUMsQ0FBQztBQUM1QixPQUFHLFVBQVUsS0FBSyxFQUFJLEtBQUcsQ0FBQztFQUM5QjtBQUFBLEFBQ0osQ0FBQztBQUVELGdCQUFnQixVQUFVLElBQUksRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUMzRCxZQUFVLFNBQVMsQUFBQyxDQUFDLElBQUcsTUFBTSxDQUFHLGdCQUFjLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRUQsZ0JBQWdCLFVBQVUsY0FBYyxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsTUFBSyxDQUFHLENBQUEsTUFBSyxDQUFHO0FBQy9FLEtBQUksSUFBRyxVQUFVLEdBQ2IsRUFBQyxNQUFLLElBQU0sQ0FBQSxRQUFPLE9BQU8sT0FBTyxDQUFBLEVBQ2hDLEVBQUMsTUFBSyxJQUFNLENBQUEsUUFBTyxPQUFPLEtBQUssQ0FBQSxFQUFLLENBQUEsTUFBSyxXQUFhLENBQUEsTUFBSyxVQUFVLENBQUMsQ0FBQyxDQUFHO0FBQzNFLGNBQVUsU0FBUyxBQUFDLENBQUMsSUFBRyxVQUFVLENBQUMsQ0FBQztFQUN4QyxLQUNLO0FBQ0QsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7RUFDbkM7QUFBQSxBQUNKLENBQUM7QUFFRCxLQUFLLFFBQVEsRUFBSSxrQkFBZ0IsQ0FBQztBQUFBIiwiZmlsZSI6ImFjdGl2aXRpZXMvY2FuY2VsbGF0aW9uU2NvcGUuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5sZXQgQWN0aXZpdHkgPSByZXF1aXJlKFwiLi9hY3Rpdml0eVwiKTtcbmxldCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5sZXQgZXJyb3JzID0gcmVxdWlyZShcIi4uL2NvbW1vbi9lcnJvcnNcIik7XG5sZXQgQmxvY2sgPSByZXF1aXJlKFwiLi9ibG9ja1wiKTtcblxuZnVuY3Rpb24gQ2FuY2VsbGF0aW9uU2NvcGUoKSB7XG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcblxuICAgIHRoaXMuY2FuY2VsbGVkID0gbnVsbDtcbiAgICB0aGlzLmFycmF5UHJvcGVydGllcy5hZGQoXCJjYW5jZWxsZWRcIik7XG59XG5cbnV0aWwuaW5oZXJpdHMoQ2FuY2VsbGF0aW9uU2NvcGUsIEFjdGl2aXR5KTtcblxuQ2FuY2VsbGF0aW9uU2NvcGUucHJvdG90eXBlLmluaXRpYWxpemVTdHJ1Y3R1cmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5fYm9keSA9IG5ldyBCbG9jaygpO1xuICAgIHRoaXMuX2JvZHkuYXJncyA9IHRoaXMuYXJncztcbiAgICB0aGlzLmFyZ3MgPSBudWxsO1xuICAgIGlmICh0aGlzLmNhbmNlbGxlZCkge1xuICAgICAgICBsZXQgcHJldiA9IHRoaXMuY2FuY2VsbGVkO1xuICAgICAgICB0aGlzLmNhbmNlbGxlZCA9IG5ldyBCbG9jaygpO1xuICAgICAgICB0aGlzLmNhbmNlbGxlZC5hcmdzID0gcHJldjtcbiAgICB9XG59O1xuXG5DYW5jZWxsYXRpb25TY29wZS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XG4gICAgY2FsbENvbnRleHQuc2NoZWR1bGUodGhpcy5fYm9keSwgXCJfYm9keUZpbmlzaGVkXCIpO1xufTtcblxuQ2FuY2VsbGF0aW9uU2NvcGUucHJvdG90eXBlLl9ib2R5RmluaXNoZWQgPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XG4gICAgaWYgKHRoaXMuY2FuY2VsbGVkICYmXG4gICAgICAgIChyZWFzb24gPT09IEFjdGl2aXR5LnN0YXRlcy5jYW5jZWwgfHxcbiAgICAgICAgIChyZWFzb24gPT09IEFjdGl2aXR5LnN0YXRlcy5mYWlsICYmIHJlc3VsdCBpbnN0YW5jZW9mIGVycm9ycy5DYW5jZWxsZWQpKSkge1xuICAgICAgICBjYWxsQ29udGV4dC5zY2hlZHVsZSh0aGlzLmNhbmNlbGxlZCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsbGF0aW9uU2NvcGU7Il19
