{"version":3,"sources":["hosting/workflowInstance.js"],"names":[],"mappings":"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","file":"hosting/workflowInstance.js","sourcesContent":["\"use strict\";\n\nlet Workflow = require(\"../activities/workflow\");\nlet ActivityExecutionContext = require(\"../activities/activityExecutionContext\");\nlet ActivityExecutionEngine = require(\"../activities/activityExecutionEngine\");\nlet BeginMethod = require(\"../activities/beginMethod\");\nlet EndMethod = require(\"../activities/endMethod\");\nlet errors = require(\"../common/errors\");\nlet enums = require(\"../common/enums\");\nlet specStrings = require(\"../common/specStrings\");\nlet _ = require(\"lodash\");\nlet constants = require(\"../common/constants\");\nlet Bluebird = require(\"bluebird\");\nlet is = require(\"../common/is\");\nlet asyncHelpers = require(\"../common/asyncHelpers\");\nlet async = asyncHelpers.async;\nlet EventEmitter = require('events').EventEmitter;\nlet util = require(\"util\");\nlet debug = require(\"debug\")(\"wf4node:WorkflowInstance\");\n\nfunction WorkflowInstance(host) {\n    EventEmitter.call(this);\n\n    this._host = host;\n    this.id = null;\n    this._engine = null;\n    this.createdOn = null;\n    this._beginMethodWithCreateInstCallback = null;\n    this._endMethodCallback = null;\n    this._idleInstanceIdPathCallback = null;\n    this.activeDelays = [];\n    this.workflowVersion = null;\n}\n\nutil.inherits(WorkflowInstance, EventEmitter);\n\nObject.defineProperties(\n    WorkflowInstance.prototype, {\n        execState: {\n            get: function () {\n                return this._engine ? this._engine.execState : null;\n            }\n        },\n        workflowName: {\n            get: function () {\n                return this._engine ? this._engine.rootActivity.name.trim() : null;\n            }\n        },\n        updatedOn: {\n            get: function () {\n                return this._engine ? this._engine.updatedOn : null;\n            }\n        },\n        persistence: {\n            get: function() {\n                return this._host._persistence;\n            }\n        }\n    });\n\nWorkflowInstance.prototype.create = async(function* (execContext, workflowVersion, methodName, args, lockInfo) {\n    let self = this;\n\n    self.setWorkflow(execContext, workflowVersion);\n    self._resetCallbacksAndState();\n\n    let createMethodReached = false;\n    let instanceIdPath = null;\n    self._beginMethodWithCreateInstCallback = function (mn, ip) {\n        if (mn === methodName) {\n            createMethodReached = true;\n            instanceIdPath = ip;\n        }\n    };\n\n    self.createdOn = new Date();\n\n    try {\n        if (self._engine.isIdle(yield self._engine.invoke())) {\n            if (createMethodReached) {\n                self._resetCallbacksAndState();\n\n                if (instanceIdPath) {\n                    if (_.isUndefined(self.id = self._host._instanceIdParser.parse(instanceIdPath, args))) {\n                        throw new errors.WorkflowError(\"Cannot parse BeginMethod's instanceIdPath '\" + instanceIdPath + \"' on arguments of method '\" + methodName + \"'.\");\n                    }\n                    yield (self._enterLockForCreatedInstance(lockInfo));\n                }\n\n                let createEndMethodReached = false;\n                let result;\n                let endInstanceIdPath = null;\n                self._endMethodCallback =\n                    function (mn, ip, r) {\n                        if (mn === methodName) {\n                            createEndMethodReached = true;\n                            endInstanceIdPath = ip;\n                            result = r;\n                        }\n                    };\n\n                let idleMethods = [];\n                self._idleInstanceIdPathCallback =\n                    function (mn, ip) {\n                        idleMethods.push(\n                            {\n                                methodName: mn,\n                                instanceIdPath: ip\n                            });\n                    };\n\n                yield (self._engine.resumeBookmark(specStrings.hosting.createBeginMethodBMName(methodName), enums.activityStates.complete, args));\n\n                if (createEndMethodReached) {\n                    if (_.isUndefined(self.id)) {\n                        if (endInstanceIdPath) {\n                            if (_.isUndefined(self.id = self._host._instanceIdParser.parse(endInstanceIdPath, result))) {\n                                throw new errors.WorkflowError(\"Cannot parse EndMethods's instanceIdPath '\" + instanceIdPath + \"' on arguments of method '\" + methodName + \"'.\");\n                            }\n                            yield self._enterLockForCreatedInstance(lockInfo);\n                        }\n                        else {\n                            throw new errors.WorkflowError(\"BeginMethod or EndMethod of method '\" + methodName + \"' doesn't specify an instanceIdPath property value.\");\n                        }\n                    }\n                }\n                else {\n                    throw new errors.WorkflowError(\"Workflow has been completed or gone to idle without reaching an EndMethod activity of method '\" + methodName + \"'.\");\n                }\n\n                if (self.execState === enums.activityStates.idle) {\n                    if (idleMethods.length === 0) {\n                        throw new errors.WorkflowError(\"Workflow has gone to idle, but there is no active BeginMethod activities to wait for.\");\n                    }\n                }\n                else {\n                    if (idleMethods.length !== 0) {\n                        throw new errors.WorkflowError(\"Workflow has completed, but there is active BeginMethod activities to wait for.\");\n                    }\n                }\n\n                return result;\n            }\n            else {\n                throw new errors.WorkflowError(\"Workflow has gone to idle without reaching an instance creator BeginMethod activity of method '\" + methodName + \"'.\");\n            }\n        }\n        else {\n            throw new errors.WorkflowError(\"Workflow has been completed without reaching an instance creator BeginMethod activity.\");\n        }\n    }\n    catch (e) {\n        debug(\"Create error: %s\", e.stack);\n        if (e instanceof errors.TimeoutError) {\n            throw new errors.MethodIsNotAccessibleError(\"Cannot create instanceof workflow '\" + self.workflowName + \"', because '\" + methodName + \"' is locked.\");\n        }\n        if (e instanceof errors.BookmarkNotFoundError) {\n            throw new errors.MethodIsNotAccessibleError(\"Cannot create instanceof workflow '\" + self.workflowName + \"', because bookmark of '\" + methodName + \"' doesn't exist.\");\n        }\n        throw e;\n    }\n    finally {\n        self._resetCallbacks();\n    }\n});\n\nWorkflowInstance.prototype._enterLockForCreatedInstance = async(\n    function* (lockInfo) {\n        if (lockInfo) {\n            yield this._host._enterLockForCreatedInstance(this, lockInfo);\n        }\n    });\n\nWorkflowInstance.prototype.setWorkflow = function (execContext, workflowVersion, instanceId) {\n    let self = this;\n    if (!(execContext instanceof ActivityExecutionContext)) {\n        throw new TypeError(\"Workflow argument expected.\");\n    }\n    if (!(_.isString(workflowVersion)) || !workflowVersion) {\n        throw new TypeError(\"Workflow version expected.\");\n    }\n    this.workflowVersion = workflowVersion;\n    this._engine = new ActivityExecutionEngine(execContext, this);\n    this._engine.on(\n        enums.events.workflowEvent,\n        function (args) {\n            let arr = _.toArray(args);\n            arr.splice(0, 0, self.instanceId);\n            self.emit(enums.events.workflowEvent, args);\n        });\n    this._addMyTrackers();\n    if (!_.isUndefined(instanceId)) {\n        this.id = instanceId;\n    }\n    this._copyParsFromHost();\n};\n\nWorkflowInstance.prototype.callMethod = async(function* (methodName, args) {\n    let self = this;\n\n    self._resetCallbacksAndState();\n\n    let endMethodReached = false;\n    let result = null;\n    self._endMethodCallback =\n        function (mn, ip, r) {\n            if (mn === methodName) {\n                endMethodReached = true;\n                result = r;\n            }\n        };\n\n    let idleMethods = [];\n    self._idleInstanceIdPathCallback =\n        function (mn, ip) {\n            idleMethods.push(\n                {\n                    methodName: mn,\n                    instanceIdPath: ip\n                });\n        };\n\n    try {\n        yield self._engine.resumeBookmark(specStrings.hosting.createBeginMethodBMName(methodName), enums.activityStates.complete, args);\n\n        if (!endMethodReached) {\n            throw new errors.WorkflowError(\"Workflow has been completed or gone to idle without reaching an EndMethod activity of method name '\" + methodName + \"'.\");\n        }\n\n        if (self.execState === enums.activityStates.idle) {\n            if (idleMethods.length === 0) {\n                throw new errors.WorkflowError(\"Workflow has gone to idle, but there is no active BeginMethod activities to wait for.\");\n            }\n        }\n        else {\n            if (idleMethods.length !== 0) {\n                throw new errors.WorkflowError(\"Workflow has completed, but there is active BeginMethod activities to wait for.\");\n            }\n        }\n\n        return result;\n    }\n    catch (e) {\n        debug(\"Call method error: %s\", e.stack);\n        if (e instanceof errors.BookmarkNotFoundError) {\n            throw new errors.MethodIsNotAccessibleError(\"Cannot call method '\" + methodName + \"' of workflow '\" + self.workflowName + \"', because its bookmark doesn't exist.\");\n        }\n        throw e;\n    }\n    finally {\n        self._resetCallbacks();\n    }\n});\n\nWorkflowInstance.prototype._copyParsFromHost = function () {\n    for (let t of this._host._trackers) {\n        this._engine.addTracker(t);\n    }\n};\n\nWorkflowInstance.prototype._addMyTrackers = function () {\n    this._addBeginMethodWithCreateInstHelperTracker();\n    this._addEndMethodHelperTracker();\n    this._addIdleInstanceIdPathTracker();\n};\n\nWorkflowInstance.prototype._resetCallbacks = function () {\n    this._beginMethodWithCreateInstCallback = null;\n    this._endMethodCallback = null;\n    this._idleInstanceIdPathCallback = null;\n};\n\nWorkflowInstance.prototype._resetCallbacksAndState = function () {\n    this._resetCallbacks();\n    this.activeDelays = [];\n};\n\nWorkflowInstance.prototype._addBeginMethodWithCreateInstHelperTracker = function () {\n    let self = this;\n    let tracker = {\n        activityStateFilter: function (args) {\n            return self._beginMethodWithCreateInstCallback &&\n                args.scope.$activity instanceof BeginMethod &&\n                args.scope.canCreateInstance &&\n                _.isString(args.scope.methodName) &&\n                (!args.scope.instanceIdPath || _.isString(args.scope.instanceIdPath)) &&\n                args.reason === enums.activityStates.idle;\n        },\n        activityStateChanged: function (args) {\n            let methodName = args.scope.methodName.trim();\n            let instanceIdPath = args.scope.instanceIdPath ? args.scope.instanceIdPath.trim() : null;\n            self._beginMethodWithCreateInstCallback(methodName, instanceIdPath);\n        }\n    };\n    self._engine.addTracker(tracker);\n};\n\nWorkflowInstance.prototype._addEndMethodHelperTracker = function () {\n    let self = this;\n    let tracker = {\n        activityStateFilter: function (args) {\n            return self._endMethodCallback &&\n                args.scope.$activity instanceof EndMethod &&\n                _.isString(args.scope.methodName) &&\n                (!args.scope.instanceIdPath || _.isString(args.scope.instanceIdPath)) &&\n                args.reason === enums.activityStates.complete;\n        },\n        activityStateChanged: function (args) {\n            let methodName = args.scope.methodName.trim();\n            let instanceIdPath = args.scope.instanceIdPath ? args.scope.instanceIdPath.trim() : null;\n            self._endMethodCallback(methodName, instanceIdPath, args.result);\n        }\n    };\n    self._engine.addTracker(tracker);\n};\n\nWorkflowInstance.prototype._addIdleInstanceIdPathTracker = function () {\n    let self = this;\n    let tracker = {\n        activityStateFilter: function (args) {\n            return self._idleInstanceIdPathCallback &&\n                args.scope.$activity instanceof BeginMethod &&\n                _.isString(args.scope.methodName) &&\n                _.isString(args.scope.instanceIdPath) &&\n                args.reason === enums.activityStates.idle;\n        },\n        activityStateChanged: function (args) {\n            let methodName = args.scope.methodName.trim();\n            let instanceIdPath = args.scope.instanceIdPath.trim();\n            self._idleInstanceIdPathCallback(methodName, instanceIdPath);\n\n            // This is where a method goes idle.\n            // So if it a DelayTo method, we should remember that.\n            if (specStrings.hosting.isDelayToMethodName(methodName)) {\n                self.activeDelays.push({\n                    methodName: methodName,\n                    delayTo: args.scope.delayTo\n                });\n            }\n        }\n    };\n    self._engine.addTracker(tracker);\n};\n\nWorkflowInstance.prototype.getStateToPersist = function () {\n    let sp = this._engine.getStateAndPromotions(this._host.options.serializer, this._host.options.enablePromotions);\n    return {\n        instanceId: this.id,\n        createdOn: this.createdOn,\n        workflowName: this.workflowName,\n        workflowVersion: this.workflowVersion,\n        updatedOn: this._engine.updatedOn,\n        state: sp.state,\n        promotedProperties: sp.promotedProperties,\n        activeDelays: this.activeDelays\n    };\n};\n\nWorkflowInstance.prototype.restoreState = function (json) {\n    if (!_.isObject(json)) {\n        throw new TypeError(\"Argument 'json' is not an object.\");\n    }\n    if (json.instanceId !== this.id) {\n        throw new Error(\"State instanceId property value of '\" + json.instanceId + \"' is different than the current instance id '\" + this.id + \"'.\");\n    }\n    if (json.workflowName !== this.workflowName) {\n        throw new Error(\"State workflowName property value of '\" + json.workflowName + \"' is different than the current Workflow name '\" + this.workflowName + \"'.\");\n    }\n    if (json.workflowVersion !== this.workflowVersion) {\n        throw new Error(\"State workflowVersion property value of '\" + json.workflowVersion + \"' is different than the current Workflow version '\" + this.workflowVersion + \"'.\");\n    }\n    if (!_.isDate(json.createdOn)) {\n        throw new Error(\"State createdOn property value of '\" + json.createdOn + \"' is not a Date.\");\n    }\n\n    this.createdOn = json.createdOn;\n    this._engine.setState(this._host.options.serializer, json.state);\n};\n\nWorkflowInstance.prototype.addTracker = function(tracker) {\n    this._engine.addTracker(tracker);\n};\n\nmodule.exports = WorkflowInstance;\n"],"sourceRoot":"/source/"}