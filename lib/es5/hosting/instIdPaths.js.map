{"version":3,"sources":["hosting/instIdPaths.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,WAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACnD,IAAI,EAAE,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEjC,SAAS,WAAW,GAAG;AACnB,QAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;CACzB;;AAED,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE;AAC5E,QAAI,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACnE,QAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAI,CAAC,KAAK,EAAE;AACR,aAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAClB,YAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KAC7B;AACD,QAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC3C,SAAK,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;CACxC,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE;AAC/E,QAAI,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACnE,QAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAI,KAAK,EAAE;AACP,YAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACtC,YAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AACvB,gBAAI,KAAK,KAAK,CAAC,EAAE;AACb,oBAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACzB,MACI;AACD,qBAAK,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;aACxC;SACJ;KACJ;AACD,WAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,KAAK,2BAAG,iBAAW,YAAY,EAAE,UAAU;QACzD,GAAG,EACH,KAAK,kFAEI,EAAE;;;;;;AAHX,uBAAG,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC;AAC9D,yBAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;;yBAC1B,KAAK;;;;;;;;;gCACU,KAAK,CAAC,IAAI,EAAE;;;;;;;;AAAlB,sBAAE;;2BACD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAGnB,CAAA,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"hosting/instIdPaths.js","sourcesContent":["\"use strict\";\n\nlet specStrings = require(\"../common/specStrings\");\nlet is = require(\"../common/is\");\n\nfunction InstIdPaths() {\n    this._map = new Map();\n}\n\nInstIdPaths.prototype.add = function (workflowName, methodName, instanceIdPath) {\n    let key = specStrings.hosting.doubleKeys(workflowName, methodName);\n    let inner = this._map.get(key);\n    if (!inner) {\n        inner = new Map();\n        this._map.set(key, inner);\n    }\n    let count = inner.get(instanceIdPath) || 0;\n    inner.set(instanceIdPath, count + 1);\n};\n\nInstIdPaths.prototype.remove = function (workflowName, methodName, instanceIdPath) {\n    let key = specStrings.hosting.doubleKeys(workflowName, methodName);\n    let inner = this._map.get(key);\n    if (inner) {\n        let count = inner.get(instanceIdPath);\n        if (!_.isUndefined(count)) {\n            if (count === 1) {\n                this._map.delete(key);\n            }\n            else {\n                inner.set(instanceIdPath, count - 1);\n            }\n        }\n    }\n    return false;\n};\n\nInstIdPaths.prototype.items = function* (workflowName, methodName) {\n    let key = specStrings.hosting.doubleKeys(workflowName, methodName);\n    let inner = this._map.get(key);\n    if (inner) {\n        for (let ik of inner.keys()) {\n            yield ik;\n        }\n    }\n};\n\nmodule.exports = InstIdPaths;\n"],"sourceRoot":"/source/"}