{"version":3,"names":[],"mappings":"","sources":["hosting/keepAlive.js"],"sourcesContent":["var _ = require(\"lodash\");\nvar Bluebird = require(\"bluebird\");\n\nfunction KeepAlive(repeatFunc, repeatPeriod) {\n    if (!_.isFunction(repeatFunc)) throw new TypeError(\"Function argument expected.\");\n    this._repeatFunc = repeatFunc;\n    this._repeatPeriod = repeatPeriod;\n    this._isRunning = true;\n    this._toId = null;\n    var self = this;\n    process.nextTick(function () {\n        self._start.call(self);\n    });\n}\n\nKeepAlive.prototype._start = function () {\n    var self = this;\n    self._toId = setTimeout(\n        function () {\n            if (self._isRunning) {\n                Bluebird.resolve(self._repeatFunc())\n                    .catch(function (e) {\n                        console.error(\"Keep alive failed:\\n\" + e.stack);\n                    })\n                    .finally(function () {\n                        if (self._isRunning) self._start();\n                    });\n            }\n        },\n        self._repeatPeriod);\n}\n\nKeepAlive.prototype.end = function () {\n    if (!this._isRunning) throw new Error(\"Keep alive has already ended.\");\n\n    this._isRunning = false;\n    if (this._toId) clearTimeout(this._toId);\n}\n\nmodule.exports = KeepAlive;"],"file":"hosting/keepAlive.js","sourceRoot":"/source/"}