{"version":3,"names":[],"mappings":"","sources":["hosting/keepAlive.js"],"sourcesContent":["var _ = require(\"lodash\");\r\nvar Bluebird = require(\"bluebird\");\r\n\r\nfunction KeepAlive(repeatFunc, repeatPeriod) {\r\n    if (!_.isFunction(repeatFunc)) throw new TypeError(\"Function argument expected.\");\r\n    this._repeatFunc = repeatFunc;\r\n    this._repeatPeriod = repeatPeriod;\r\n    this._isRunning = true;\r\n    this._toId = null;\r\n    var self = this;\r\n    process.nextTick(function () {\r\n        self._start.call(self);\r\n    });\r\n}\r\n\r\nKeepAlive.prototype._start = function () {\r\n    var self = this;\r\n    self._toId = setTimeout(\r\n        function () {\r\n            if (self._isRunning) {\r\n                Bluebird.resolve(self._repeatFunc())\r\n                    .catch(function (e) {\r\n                        console.error(\"Keep alive failed:\\n\" + e.stack);\r\n                    })\r\n                    .finally(function () {\r\n                        if (self._isRunning) self._start();\r\n                    });\r\n            }\r\n        },\r\n        self._repeatPeriod);\r\n}\r\n\r\nKeepAlive.prototype.end = function () {\r\n    if (!this._isRunning) throw new Error(\"Keep alive has already ended.\");\r\n\r\n    this._isRunning = false;\r\n    if (this._toId) clearTimeout(this._toId);\r\n}\r\n\r\nmodule.exports = KeepAlive;"],"file":"hosting/keepAlive.js","sourceRoot":"/source/"}