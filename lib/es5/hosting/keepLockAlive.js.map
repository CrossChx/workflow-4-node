{"version":3,"sources":["hosting/keepLockAlive.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEnC,SAAS,aAAa,CAAC,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE;AACtE,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,aAAS,CAAC,IAAI,CACV,IAAI,EACJ,YAAY;AACR,YAAI,QAAQ,IAAI,QAAQ,CAAC,EAAE,EAAE,OAAO,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,KAAM,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC1H,EACD,WAAW,CAAC,CAAC;CACpB;;AAED,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;;AAExC,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC","file":"hosting/keepLockAlive.js","sourcesContent":["var KeepAlive = require(\"./keepAlive\");\nvar util = require(\"util\");\nvar Bluebird = require(\"bluebird\");\n\nfunction KeepLockAlive(persistence, lockInfo, inLockTimeout, renewPeriod) {\n    var self = this;\n    KeepAlive.call(\n        self,\n        function () {\n            if (lockInfo && lockInfo.id) return persistence.renewLock(lockInfo.id, inLockTimeout); else return Bluebird.resolve(0);\n        },\n        renewPeriod);\n}\n\nutil.inherits(KeepLockAlive, KeepAlive);\n\nmodule.exports = KeepLockAlive;\n"],"sourceRoot":"/source/"}