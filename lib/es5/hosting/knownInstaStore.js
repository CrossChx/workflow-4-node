"use strict";
var specStrings = require("../common/specStrings");
var InstIdPaths = require("./instIdPaths");
var _ = require("lodash");
var debug = require("debug")("wf4node:KnownInstaStore");
function KnownInstaStore() {
  this._instances = new Map();
}
KnownInstaStore.prototype.add = function(workflowName, insta) {
  this._instances.set(specStrings.hosting.doubleKeys(workflowName, insta.id), insta);
};
KnownInstaStore.prototype.get = function(workflowName, instanceId) {
  return this._instances.get(specStrings.hosting.doubleKeys(workflowName, instanceId));
};
KnownInstaStore.prototype.exists = function(workflowName, instanceId) {
  return this._instances.has(specStrings.hosting.doubleKeys(workflowName, instanceId));
};
KnownInstaStore.prototype.remove = function(workflowName, instanceId) {
  this._instances.delete(specStrings.hosting.doubleKeys(workflowName, instanceId));
};
KnownInstaStore.prototype.getNextWakeupables = function(count) {
  var now = new Date();
  var result = [];
  var $__12 = true;
  var $__13 = false;
  var $__14 = undefined;
  try {
    for (var $__10 = void 0,
        $__9 = (this._instances.values())[$traceurRuntime.toProperty(Symbol.iterator)](); !($__12 = ($__10 = $__9.next()).done); $__12 = true) {
      var insta = $__10.value;
      {
        if (insta.activeDelays) {
          var $__5 = true;
          var $__6 = false;
          var $__7 = undefined;
          try {
            for (var $__3 = void 0,
                $__2 = (insta.activeDelays)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
              var ad = $__3.value;
              {
                if (ad.delayTo <= now) {
                  result.push({
                    instanceId: insta.id,
                    workflowName: insta.workflowName,
                    activeDelay: {
                      methodName: ad.methodName,
                      delayTo: ad.delayTo
                    }
                  });
                }
              }
            }
          } catch ($__8) {
            $__6 = true;
            $__7 = $__8;
          } finally {
            try {
              if (!$__5 && $__2.return != null) {
                $__2.return();
              }
            } finally {
              if ($__6) {
                throw $__7;
              }
            }
          }
        }
      }
    }
  } catch ($__15) {
    $__13 = true;
    $__14 = $__15;
  } finally {
    try {
      if (!$__12 && $__9.return != null) {
        $__9.return();
      }
    } finally {
      if ($__13) {
        throw $__14;
      }
    }
  }
  result.sort(function(i1, i2) {
    if (i1.updatedOn < i2.updatedOn) {
      return -1;
    } else if (i1.updatedOn > i2.updatedOn) {
      return 1;
    } else if (i1.activeDelay.delayTo < i2.activeDelay.delayTo) {
      return -1;
    } else if (i1.activeDelay.delayTo > i2.activeDelay.delayTo) {
      return 1;
    }
    return 0;
  });
  return _.take(result, count);
};
module.exports = KnownInstaStore;
//# sourceMappingURL=data:application/json;base64,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O0FBQ1IsZUFBd0I7QUFDdEIsbUJBQXdCO01BQzFCO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxBQTJCSixPQUFLLEtBQUssQUFBQyxDQUFDLFNBQVUsRUFBQyxDQUFHLENBQUEsRUFBQyxDQUFHO0FBQzFCLE9BQUksRUFBQyxVQUFVLEVBQUksQ0FBQSxFQUFDLFVBQVUsQ0FBRztBQUM3QixXQUFPLEVBQUMsQ0FBQSxDQUFDO0lBQ2IsS0FDSyxLQUFJLEVBQUMsVUFBVSxFQUFJLENBQUEsRUFBQyxVQUFVLENBQUc7QUFDbEMsV0FBTyxFQUFBLENBQUM7SUFDWixLQUNLLEtBQUksRUFBQyxZQUFZLFFBQVEsRUFBSSxDQUFBLEVBQUMsWUFBWSxRQUFRLENBQUc7QUFDdEQsV0FBTyxFQUFDLENBQUEsQ0FBQztJQUNiLEtBQ0ssS0FBSSxFQUFDLFlBQVksUUFBUSxFQUFJLENBQUEsRUFBQyxZQUFZLFFBQVEsQ0FBRztBQUN0RCxXQUFPLEVBQUEsQ0FBQztJQUNaO0FBQUEsQUFDQSxTQUFPLEVBQUEsQ0FBQztFQUNaLENBQUMsQ0FBQztBQUNGLE9BQU8sQ0FBQSxDQUFBLEtBQUssQUFBQyxDQUFDLE1BQUssQ0FBRyxNQUFJLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksZ0JBQWMsQ0FBQztBQUNoQyIsImZpbGUiOiJob3N0aW5nL2tub3duSW5zdGFTdG9yZS5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmxldCBzcGVjU3RyaW5ncyA9IHJlcXVpcmUoXCIuLi9jb21tb24vc3BlY1N0cmluZ3NcIik7XG5sZXQgSW5zdElkUGF0aHMgPSByZXF1aXJlKFwiLi9pbnN0SWRQYXRoc1wiKTtcbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmxldCBkZWJ1ZyA9IHJlcXVpcmUoXCJkZWJ1Z1wiKShcIndmNG5vZGU6S25vd25JbnN0YVN0b3JlXCIpO1xuXG5mdW5jdGlvbiBLbm93bkluc3RhU3RvcmUoKSB7XG4gICAgdGhpcy5faW5zdGFuY2VzID0gbmV3IE1hcCgpO1xufVxuXG5Lbm93bkluc3RhU3RvcmUucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uICh3b3JrZmxvd05hbWUsIGluc3RhKSB7XG4gICAgdGhpcy5faW5zdGFuY2VzLnNldChzcGVjU3RyaW5ncy5ob3N0aW5nLmRvdWJsZUtleXMod29ya2Zsb3dOYW1lLCBpbnN0YS5pZCksIGluc3RhKTtcbn07XG5cbktub3duSW5zdGFTdG9yZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKHdvcmtmbG93TmFtZSwgaW5zdGFuY2VJZCkge1xuICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZXMuZ2V0KHNwZWNTdHJpbmdzLmhvc3RpbmcuZG91YmxlS2V5cyh3b3JrZmxvd05hbWUsIGluc3RhbmNlSWQpKTtcbn07XG5cbktub3duSW5zdGFTdG9yZS5wcm90b3R5cGUuZXhpc3RzID0gZnVuY3Rpb24gKHdvcmtmbG93TmFtZSwgaW5zdGFuY2VJZCkge1xuICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZXMuaGFzKHNwZWNTdHJpbmdzLmhvc3RpbmcuZG91YmxlS2V5cyh3b3JrZmxvd05hbWUsIGluc3RhbmNlSWQpKTtcbn07XG5cbktub3duSW5zdGFTdG9yZS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKHdvcmtmbG93TmFtZSwgaW5zdGFuY2VJZCkge1xuICAgIHRoaXMuX2luc3RhbmNlcy5kZWxldGUoc3BlY1N0cmluZ3MuaG9zdGluZy5kb3VibGVLZXlzKHdvcmtmbG93TmFtZSwgaW5zdGFuY2VJZCkpO1xufTtcblxuS25vd25JbnN0YVN0b3JlLnByb3RvdHlwZS5nZXROZXh0V2FrZXVwYWJsZXMgPSBmdW5jdGlvbiAoY291bnQpIHtcbiAgICBsZXQgbm93ID0gbmV3IERhdGUoKTtcbiAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgZm9yIChsZXQgaW5zdGEgb2YgdGhpcy5faW5zdGFuY2VzLnZhbHVlcygpKSB7XG4gICAgICAgIGlmIChpbnN0YS5hY3RpdmVEZWxheXMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGFkIG9mIGluc3RhLmFjdGl2ZURlbGF5cykge1xuICAgICAgICAgICAgICAgIGlmIChhZC5kZWxheVRvIDw9IG5vdykge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZUlkOiBpbnN0YS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdvcmtmbG93TmFtZTogaW5zdGEud29ya2Zsb3dOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlRGVsYXk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2ROYW1lOiBhZC5tZXRob2ROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5VG86IGFkLmRlbGF5VG9cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5zb3J0KGZ1bmN0aW9uIChpMSwgaTIpIHtcbiAgICAgICAgaWYgKGkxLnVwZGF0ZWRPbiA8IGkyLnVwZGF0ZWRPbikge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGkxLnVwZGF0ZWRPbiA+IGkyLnVwZGF0ZWRPbikge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaTEuYWN0aXZlRGVsYXkuZGVsYXlUbyA8IGkyLmFjdGl2ZURlbGF5LmRlbGF5VG8pIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpMS5hY3RpdmVEZWxheS5kZWxheVRvID4gaTIuYWN0aXZlRGVsYXkuZGVsYXlUbykge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG4gICAgcmV0dXJuIF8udGFrZShyZXN1bHQsIGNvdW50KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gS25vd25JbnN0YVN0b3JlO1xuIl19
