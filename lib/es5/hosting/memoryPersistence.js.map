{"version":3,"sources":["hosting/memoryPersistence.js"],"names":[],"mappings":"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","file":"hosting/memoryPersistence.js","sourcesContent":["\"use strict\";\n\nlet uuid = require('node-uuid');\nrequire('date-utils');\nlet specStrings = require(\"../common/specStrings\");\nlet InstIdPaths = require(\"./instIdPaths\");\nlet is = require(\"../common/is\");\nlet _ = require(\"lodash\");\nlet debug = require(\"debug\")(\"wf4node:MemoryPersistence\");\nlet errors = require(\"../common/errors\");\n\nfunction MemoryPersistence() {\n    this._instanceData = new Map();\n    this._locksById = new Map();\n    this._locksByName = new Map();\n}\n\nMemoryPersistence.prototype.clear = function () {\n    this._instanceData.clear();\n    this._locksById.clear();\n    this._locksByName.clear();\n};\n\nMemoryPersistence.prototype.enterLock = function (lockName, inLockTimeoutMs) {\n    debug(\"enterLock(%s, %d)\", lockName, inLockTimeoutMs);\n\n    let now = new Date();\n    debug(\"Searching for lock by name %s\", lockName);\n    let cLock = this._locksByName.get(lockName);\n    debug(\"Lock info: %j\", cLock);\n    if (!cLock || cLock.heldTo.getTime() < now.getTime()) {\n        let lockInfo = {\n            id: uuid.v4(),\n            name: lockName,\n            heldTo: now.addMilliseconds(inLockTimeoutMs)\n        };\n\n        this._locksById.set(lockInfo.id, lockInfo);\n        this._locksByName.set(lockInfo.name, lockInfo);\n\n        debug(\"LOCKED: %s\", lockInfo.name);\n\n        return lockInfo;\n    }\n    debug(\"It is already held.\");\n    return null;\n};\n\nMemoryPersistence.prototype.renewLock = function (lockId, inLockTimeoutMs) {\n    debug(\"renewLock(%s, %d)\", lockId, inLockTimeoutMs);\n\n    let cLock = this._getLockById(lockId);\n    cLock.heldTo = new Date().addMilliseconds(inLockTimeoutMs);\n    debug(\"Lock %s extended to %s\", lockId, cLock.heldTo);\n};\n\nMemoryPersistence.prototype.exitLock = function (lockId) {\n    debug(\"exitLock(%s)\", lockId);\n\n    let cLock = this._getLockById(lockId);\n    this._locksById.delete(cLock.id);\n    this._locksByName.delete(cLock.name);\n\n    debug(\"UNLOCKED: %s\", cLock.name);\n};\n\nMemoryPersistence.prototype._getLockById = function (lockId) {\n    let cLock = this._locksById.get(lockId);\n    let now = new Date();\n    if (!cLock || now.compareTo(cLock.heldTo) > 0) {\n        throw new Error(\"Lock by id '\" + lockId + \"' doesn't exists.\");\n    }\n    return cLock;\n};\n\nMemoryPersistence.prototype.isRunning = function (workflowName, instanceId) {\n    debug(\"isRunning(%s, %s)\", workflowName, instanceId);\n\n    return this._instanceData.has(specStrings.hosting.doubleKeys(workflowName, instanceId));\n};\n\nMemoryPersistence.prototype.persistState = function (state) {\n    debug(\"persistState(%j)\", state);\n\n    state = _.clone(state);\n    state.state = JSON.stringify(state.state);\n\n    this._instanceData.set(specStrings.hosting.doubleKeys(state.workflowName, state.instanceId), state);\n};\n\nMemoryPersistence.prototype.getRunningInstanceIdHeader = function (workflowName, instanceId) {\n    debug(\"getRunningInstanceIdHeader(%s, %s)\", workflowName, instanceId);\n\n    let state = this._instanceData.get(specStrings.hosting.doubleKeys(workflowName, instanceId));\n    if (!state) {\n        return null;\n    }\n    return {\n        updatedOn: state.updatedOn,\n        workflowName: state.workflowName,\n        workflowVersion: state.workflowVersion,\n        instanceId: state.instanceId\n    };\n};\n\nMemoryPersistence.prototype.loadState = function (workflowName, instanceId) {\n    debug(\"loadState(%s, %s)\", workflowName, instanceId);\n\n    let state = this._loadState(workflowName, instanceId);\n    state = _.clone(state);\n    state.state = JSON.parse(state.state);\n    return state;\n};\n\nMemoryPersistence.prototype.removeState = function (workflowName, instanceId) {\n    debug(\"removeState(%s, %s)\", workflowName, instanceId);\n\n    this._instanceData.delete(specStrings.hosting.doubleKeys(workflowName, instanceId));\n};\n\nMemoryPersistence.prototype._loadState = function (workflowName, instanceId) {\n    let state = this._instanceData.get(specStrings.hosting.doubleKeys(workflowName, instanceId));\n    if (!state) {\n        throw new errors.WorkflowNotFoundError(\"Instance data of workflow '\" + workflowName + \"' by id '\" + instanceId + \"' is not found.\");\n    }\n    return state;\n};\n\nMemoryPersistence.prototype.loadPromotedProperties = function (workflowName, instanceId) {\n    debug(\"loadPromotedProperties(%s, %s)\", workflowName, instanceId);\n\n    let state = this._instanceData.get(specStrings.hosting.doubleKeys(workflowName, instanceId));\n    return state ? state.promotedProperties : null;\n};\n\nMemoryPersistence.prototype.getNextWakeupables = function (count) {\n    debug(\"getNextWakeupables(%d)\", count);\n\n    let now = new Date();\n    let result = [];\n    for (let data of this._instanceData.values()) {\n        if (data.activeDelays) {\n            for (let ad of data.activeDelays) {\n                if (ad.delayTo <= now) {\n                    result.push({\n                        instanceId: data.instanceId,\n                        workflowName: data.workflowName,\n                        updatedOn: data.updatedOn,\n                        activeDelay: {\n                            methodName: ad.methodName,\n                            delayTo: ad.delayTo\n                        }\n                    });\n                }\n            }\n        }\n    }\n    result.sort(function (i1, i2) {\n        if (i1.updatedOn < i2.updatedOn) {\n            return -1;\n        }\n        else if (i1.updatedOn > i2.updatedOn) {\n            return 1;\n        }\n        else if (i1.activeDelay.delayTo < i2.activeDelay.delayTo) {\n            return -1;\n        }\n        else if (i1.activeDelay.delayTo > i2.activeDelay.delayTo) {\n            return 1;\n        }\n        return 0;\n    });\n    return _.take(result, count);\n};\n\nMemoryPersistence.prototype.getRunningInstanceHeadersForOtherVersion = function (workflowName, version) {\n    let result = [];\n    for (let data of this._instanceData.values()) {\n        if (data.workflowName === workflowName && data.version !== version) {\n            result.push({\n                workflowName: data.workflowName,\n                workflowVersion: data.workflowVersion,\n                instanceId: data.instanceId\n            });\n        }\n    }\n    return result;\n};\n\nmodule.exports = MemoryPersistence;"],"sourceRoot":"/source/"}