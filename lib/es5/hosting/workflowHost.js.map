{"version":3,"sources":["hosting/workflowHost.js"],"names":[],"mappings":"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","file":"hosting/workflowHost.js","sourcesContent":["\"use strict\";\n\nlet WorkflowRegistry = require(\"./workflowRegistry\");\nlet _ = require(\"lodash\");\nlet Activity = require(\"../activities/activity\");\nlet Workflow = require(\"../activities/workflow\");\nlet WorkflowPersistence = require(\"./workflowPersistence\");\nlet WorkflowInstance = require(\"./workflowInstance\");\nlet InstanceIdParser = require(\"./instanceIdParser\");\nlet enums = require(\"../common/enums\");\nlet Bluebird = require(\"bluebird\");\nlet KnownInstaStore = require(\"./knownInstaStore\");\nlet specStrings = require(\"../common/specStrings\");\nlet errors = require(\"../common/errors\");\nlet Serializer = require(\"backpack-node\").system.Serializer;\nlet is = require(\"../common/is\");\nlet KeepLockAlive = require(\"./keepLockAlive\");\nlet asyncHelpers = require(\"../common/asyncHelpers\");\nlet async = asyncHelpers.async;\nlet WakeUp = require(\"./wakeUp\");\nlet assert = require(\"assert\");\nlet debug = require(\"debug\")(\"wf4node:WorkflowHost\");\nlet EventEmitter = require(\"events\").EventEmitter;\nlet util = require(\"util\");\n\nfunction WorkflowHost(options) {\n    EventEmitter.call(this);\n\n    this._options = _.extend(\n        {\n            enterLockTimeout: 10000,\n            lockRenewalTimeout: 5000,\n            alwaysLoadState: false,\n            lazyPersistence: true,\n            persistence: null,\n            serializer: null,\n            enablePromotions: false,\n            wakeUpOptions: {\n                interval: 5000,\n                batchSize: 10\n            }\n        },\n        options);\n\n    this._registry = new WorkflowRegistry(this._options.serializer);\n    this._trackers = [];\n    this._isInitialized = false;\n    this._instanceIdParser = new InstanceIdParser();\n    this._persistence = null;\n\n    if (this._options.persistence !== null) {\n        this._persistence = new WorkflowPersistence(this._options.persistence);\n    }\n    this._knownRunningInstances = new KnownInstaStore();\n    this._wakeUp = null;\n    this._shutdown = false;\n}\n\nutil.inherits(WorkflowHost, EventEmitter);\n\nWorkflowHost.events = enums.workflowEvents;\n\nWorkflowHost.prototype.onWorkflowEvent = function (args) {\n    this.emit(WorkflowHost.events.workflowEvent, args);\n};\n\nWorkflowHost.prototype.onWarn = function (error) {\n    this.emit(WorkflowHost.events.warn, error);\n};\n\nWorkflowHost.prototype.onStart = function (instance, methodName, args) {\n    this.emit(WorkflowHost.events.start, {\n        instance: instance,\n        methodName: methodName,\n        args: args\n    });\n};\n\nWorkflowHost.prototype.onInvoke = function (instance, methodName, args, result, idle, error) {\n    this.emit(WorkflowHost.events.invoke, {\n        instance: instance,\n        methodName: methodName,\n        args: args,\n        idle: idle,\n        error: error\n    });\n};\n\nWorkflowHost.prototype.onEnd = function (instance, result, cancelled, error) {\n    this.emit(WorkflowHost.events.end, {\n        instance: instance,\n        result: result,\n        cancelled: cancelled,\n        error: error\n    });\n};\n\nObject.defineProperties(\n    WorkflowHost.prototype, {\n        options: {\n            get: function () {\n                return this._options;\n            }\n        },\n        isInitialized: {\n            get: function () {\n                return this._isInitialized;\n            }\n        },\n        instanceIdParser: {\n            get: function () {\n                return this._instanceIdParser;\n            }\n        },\n        persistence: {\n            get: function () {\n                return this._persistence;\n            }\n        },\n        _inLockTimeout: {\n            get: function () {\n                return this.options.lockRenewalTimeout + Math.max(this.options.lockRenewalTimeout * 0.4, 3000);\n            }\n        }\n    });\n\nWorkflowHost.prototype.registerDeprecatedWorkflow = function (workflow) {\n    return this.registerWorkflow(workflow, true);\n};\n\nWorkflowHost.prototype.registerWorkflow = function (workflow, deprecated) {\n    this._verify();\n    let desc = this._registry.register(workflow, deprecated);\n    debug(\"Workflow registered. name: %s, version: %s\", desc.name, desc.version);\n    return desc.version;\n};\n\nWorkflowHost.prototype._initialize = function () {\n    let self = this;\n    if (!this._isInitialized) {\n        if (this._options.wakeUpOptions && this._options.wakeUpOptions.interval > 0) {\n            this._wakeUp = new WakeUp(this._knownRunningInstances, this._persistence, this._options.wakeUpOptions);\n            this._wakeUp.on(\"continue\", function (i) { self._continueWokeUpInstance(i); });\n            this._wakeUp.on(\"error\", function (e) { self.onWarn(e); });\n            this._wakeUp.start();\n        }\n\n        this._isInitialized = true;\n    }\n};\n\nWorkflowHost.prototype.stop = async(function*(workflowName, instanceId) {\n    let self = this;\n    let remove = function (instanceId) {\n        let knownInsta = self._knownRunningInstances.get(workflowName, instanceId);\n        if (knownInsta) {\n            debug(\"Removing instance: %s\", instanceId);\n            self._deleteWFInstance(knownInsta);\n            self.onEnd(knownInsta, undefined, true);\n        }\n    };\n\n    debug(\"Stopping workflow '%s' with id: '%s'.\", workflowName, instanceId);\n\n    try {\n        if (this._persistence) {\n            let lockName = specStrings.hosting.doubleKeys(workflowName, instanceId);\n            let lockInfo;\n            debug(\"Locking instance: %s\", instanceId);\n            lockInfo = yield (this._persistence.enterLock(lockName, this.options.enterLockTimeout, this._inLockTimeout));\n            let keepLockAlive = null;\n            try {\n                debug(\"Locked: %j\", lockInfo);\n                keepLockAlive = new KeepLockAlive(this._persistence, lockInfo, this._inLockTimeout, this.options.lockRenewalTimeout);\n\n                // Do stuff:\n                yield this._persistence.removeState(workflowName, instanceId, false, \"STOPPED.\");\n                remove(instanceId);\n\n                debug(\"Removed: %s\", instanceId);\n            }\n            catch (e) {\n                debug(\"Error: %s\", e.stack);\n                throw e;\n            }\n            finally {\n                // Unlock:\n                debug(\"Unlocking.\");\n                if (keepLockAlive) {\n                    keepLockAlive.end();\n                }\n                yield this._persistence.exitLock(lockInfo.id);\n            }\n        }\n        else {\n            remove(instanceId);\n        }\n    }\n    catch (e) {\n        debug(\"Error: %s\", e.stack);\n        throw new errors.WorkflowError(`Cannot stop instance of workflow '${workflowName}' with id: '${instanceId}' because of an internal error:\\n${e.stack}`);\n    }\n});\n\nWorkflowHost.prototype.stopDeprecatedVersions = async(function* (workflowName) {\n    this._verify();\n    debug(\"Stopping outdated versions of workflow '%s'.\", workflowName);\n\n\n\n    let count = 0;\n    let currentVersion = this._registry.getCurrentVersion(workflowName);\n    if (currentVersion) {\n        let oldVersionHeaders = yield this._getRunningInstanceHeadersForOtherVersion(workflowName, currentVersion);\n        if (oldVersionHeaders.length) {\n            debug(\"There is %d old version running. Stopping them.\", oldVersionHeaders.length);\n            for (let header of oldVersionHeaders) {\n                debug(\"Stopping workflow '%s' of version '%s' with id: '%s'.\", header.workflowName, header.workflowVersion, header.instanceId);\n                yield this.stop(workflowName, header.instanceId);\n            }\n        }\n    }\n    else {\n        debug(\"There is no workflow registered by name '%s'.\", workflowName);\n    }\n    return count;\n});\n\nWorkflowHost.prototype.invokeMethod = async(function* (workflowName, methodName, args) {\n    this._verify();\n    debug(\"Invoking method: '%s' of workflow: '%s' by arguments '%j'\", workflowName, methodName, args);\n\n    if (!_(workflowName).isString()) {\n        throw new TypeError(\"Argument 'workflowName' is not a string.\");\n    }\n    workflowName = workflowName.trim();\n    if (!_(methodName).isString()) {\n        throw new TypeError(\"Argument 'methodName' is not a string.\");\n    }\n    methodName = methodName.trim();\n\n    if (!_.isUndefined(args) && !_.isArray(args)) {\n        args = [args];\n    }\n\n    let self = this;\n\n    self._initialize();\n\n    let instanceId = null;\n    let creatable = null;\n\n    let results = [];\n    for (let info of self._registry.methodInfos(workflowName, methodName)) {\n        let tryId = self._instanceIdParser.parse(info.instanceIdPath, args);\n        if (!_.isUndefined(tryId)) {\n            results.push(\n                {\n                    info: info,\n                    id: tryId\n                });\n        }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n        debug(\"Possible methods: %j\",\n            _(results)\n                .map(function (r) {\n                    return {\n                        workflow: {\n                            name: r.info.execContext.rootActivity.name,\n                            version: r.info.version\n                        },\n                        id: r.id\n                    };\n                })\n                .toArray());\n    }\n\n    for (let i = 0; i < results.length; i++) {\n        let result = results[i];\n        // That finds the latest version:\n        if (result.info.canCreateInstance && !result.info.deprecated) {\n            creatable = result.info;\n        }\n        // That finds a running instance with the id:\n        if (_.isNull(instanceId) && (yield self._checkIfInstanceRunning(workflowName, result.id))) {\n            instanceId = result.id;\n            break;\n        }\n    }\n\n    if (instanceId) {\n        debug(\"Found a continuable instance id: %s. Invoking method on that.\", instanceId);\n        try {\n            let ir = yield (self._invokeMethodOnRunningInstance(instanceId, workflowName, methodName, args));\n            debug(\"Invoke completed, result: %j\", ir);\n            return ir;\n        }\n        catch (e) {\n            debug(\"Invoke failed: %s\", e.stack);\n            throw e;\n        }\n    }\n    else if (creatable) {\n        debug(\"Found a creatable workflow (name: '%s', version: '%s'), invoking a create method on that.\", creatable.execContext.rootActivity.name, creatable.version);\n        try {\n            let cr = yield (self._createInstanceAndInvokeMethod(creatable.execContext, creatable.version, methodName, args));\n            debug(\"Create completed, result: %j\", cr);\n            return cr;\n        }\n        catch (e) {\n            debug(\"Create failed: %s\", e.stack);\n            throw e;\n        }\n    }\n    else {\n        debug(\"No continuable workflows have been found.\");\n        throw new errors.MethodNotFoundError(\"Cannot create or continue workflow '\" + workflowName + \"' by calling method '\" + methodName + \"'.\");\n    }\n});\n\nWorkflowHost.prototype._createInstanceAndInvokeMethod = async(function* (execContext, workflowVersion, methodName, args) {\n    let workflowName = execContext.rootActivity.name;\n\n    let lockInfo = null;\n\n    if (!this._persistence) {\n        let insta = this._createWFInstance();\n        let result = yield (insta.create(execContext, workflowVersion, methodName, args, lockInfo));\n        this._knownRunningInstances.add(workflowName, insta);\n        this.onStart(insta, methodName, args);\n        return result;\n    }\n    else {\n        lockInfo = {\n            id: null,\n            name: null,\n            heldTo: null\n        };\n        // When lock will held, then we should keep it alive:\n        let keepLockAlive = new KeepLockAlive(this._persistence, lockInfo, this._inLockTimeout, this.options.lockRenewalTimeout);\n        try {\n            let insta = this._createWFInstance();\n            let result = yield (insta.create(execContext, workflowVersion, methodName, args, lockInfo));\n\n            if (insta.execState === enums.activityStates.idle) {\n                this._knownRunningInstances.add(workflowName, insta);\n\n                // Persist and unlock:\n                let err = null;\n                try {\n                    yield this._persistence.persistState(insta);\n                    this.onStart(insta, methodName, args);\n                }\n                catch (e) {\n                    debug(\"Cannot persist instance of workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + e.stack);\n                    this._knownRunningInstances.remove(workflowName, insta.id);\n                    err = e;\n                }\n                try {\n                    yield this._persistence.exitLock(lockInfo.id);\n                }\n                catch (e) {\n                    debug(\"Cannot exit lock of workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + e.stack);\n                    this.onWarn(e);\n                }\n                if (err) {\n                    throw err;\n                }\n\n                return result;\n            }\n            else {\n                return result;\n            }\n        }\n        finally {\n            keepLockAlive.end();\n        }\n    }\n});\n\nWorkflowHost.prototype._throwIfRecoverable = function (error, workflowName, methodName) {\n    if (error instanceof errors.MethodIsNotAccessibleError) {\n        debug(\"Method '%s' of workflow '%s' is not accessible at the current state, bacause it might be stepped on another instance to another state tha is exists at current in this host. Client should retry.\", methodName, workflowName);\n        throw error;\n    }\n};\n\nWorkflowHost.prototype._invokeMethodOnRunningInstance = async(function* (instanceId, workflowName, methodName, args) {\n    let self = this;\n\n    if (!self._persistence) {\n        let insta = yield (self._verifyAndRestoreInstanceState(instanceId, workflowName, methodName, args));\n        try {\n            let result = yield (insta.callMethod(methodName, args));\n            if (insta.execState === enums.activityStates.idle) {\n                this.onInvoke(insta, methodName, args, result, true, null);\n                return result;\n            }\n            else if (insta.execState === enums.activityStates.complete) {\n                self._deleteWFInstance(insta);\n                this.onInvoke(insta, methodName, args, result, false, null);\n                this.onEnd(insta, result, false, null);\n                return result;\n            }\n            else {\n                throw new errors.WorkflowError(\"Instance '\" + insta.id + \"' is in an invalid state '\" + insta.execState + \"' after invocation of the method '\" + methodName + \"'.\");\n            }\n        }\n        catch (e) {\n            this._throwIfRecoverable(e, workflowName, methodName);\n            self._deleteWFInstance(insta);\n            this.onInvoke(insta, methodName, args, undefined, false, e);\n            this.onEnd(insta, undefined, false, e);\n            throw e;\n        }\n    }\n    else {\n        // Lock it:\n        let lockName = specStrings.hosting.doubleKeys(workflowName, instanceId);\n        let lockInfo;\n        let keepLockAlive = null;\n        try {\n            debug(\"Locking instance.\");\n            lockInfo = yield (self._persistence.enterLock(lockName, self.options.enterLockTimeout, self._inLockTimeout));\n            debug(\"Locked: %j\", lockInfo);\n\n            // When lock will held, then we should keep it alive:\n            keepLockAlive = new KeepLockAlive(self._persistence, lockInfo, self._inLockTimeout, self.options.lockRenewalTimeout);\n\n            // LOCKED\n            let insta = yield (self._verifyAndRestoreInstanceState(instanceId, workflowName, methodName, args));\n            let endWithError = async(function*(e) {\n                self._deleteWFInstance(insta);\n                try {\n                    yield (self._persistence.removeState(workflowName, insta.id, false, e));\n                }\n                catch (removeE) {\n                    debug(\"Cannot remove state of workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + removeE.stack);\n                    self.onWarn(removeE);\n                }\n                self.onInvoke(insta, methodName, args, undefined, false, e);\n                self.onEnd(insta, undefined, false, e);\n            });\n            try {\n                let persistAndUnlock = function () {\n                    return self._persistence.persistState(insta)\n                        .finally(function () {\n                            debug(\"Unlocking: %j\", lockInfo);\n                            return self._persistence.exitLock(lockInfo.id)\n                                .then(function () {\n                                    debug(\"Unlocked.\");\n                                },\n                                function (e) {\n                                    debug(\"Cannot exit lock for workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + e.stack);\n                                    self.onWarn(e);\n                                })\n                                .finally(function () {\n                                    keepLockAlive.end();\n                                });\n                        });\n                };\n                let result = yield (insta.callMethod(methodName, args));\n                if (insta.execState === enums.activityStates.idle) {\n                    // Persist and unlock:\n                    if (self.options.lazyPersistence) {\n                        setImmediate(function () {\n                            persistAndUnlock()\n                                .then(function () {\n                                    self.onInvoke(insta, methodName, args, result, true, null);\n                                },\n                                function(e) {\n                                    endWithError(e);\n                                });\n                        });\n                    }\n                    else {\n                        yield persistAndUnlock();\n                        this.onInvoke(insta, methodName, args, result, true, null);\n                    }\n\n                    return result;\n                }\n                else if (insta.execState === enums.activityStates.complete) {\n                    self._deleteWFInstance(insta);\n                    this.onInvoke(insta, methodName, args, result, false, null);\n                    this.onEnd(insta, result, false, null);\n                    try {\n                        try {\n                            yield self._persistence.removeState(workflowName, insta.id, true);\n                        }\n                        catch (e) {\n                            debug(\"Cannot remove state of workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + e.stack);\n                            this.onWarn(e);\n                        }\n\n                        try {\n                            yield self._persistence.exitLock(lockInfo.id);\n                        }\n                        catch (e) {\n                            debug(\"Cannot exit lock of workflow name: '\" + workflowName + \"' instance id '\" + insta.id + \"':\\n\" + e.stack);\n                            this.onWarn(e);\n                        }\n                    }\n                    finally {\n                        keepLockAlive.end();\n                    }\n                    return result;\n                }\n                else {\n                    throw new errors.WorkflowError(\"Instance '\" + insta.id + \"' is in an invalid state '\" + insta.execState + \"' after invocation of the method '\" + methodName + \"'.\");\n                }\n            }\n            catch (e) {\n                this._throwIfRecoverable(e, workflowName, methodName);\n                yield endWithError(e);\n                throw e;\n            }\n        }\n        catch (e) {\n            if (keepLockAlive) {\n                keepLockAlive.end();\n            }\n            if (lockInfo) {\n                try {\n                    yield self._persistence.exitLock(lockInfo.id);\n                }\n                catch (exitE) {\n                    debug(\"Cannot exit lock '\" + lockInfo.id + \"':\\n\" + exitE.stack);\n                    this.onWarn(exitE);\n                }\n            }\n            if (e instanceof errors.TimeoutError) {\n                let msg = \"Cannot call method of workflow '\" + workflowName + \"', because '\" + methodName + \"' is locked.\";\n                debug(msg);\n                throw new errors.MethodIsNotAccessibleError(msg);\n            }\n            throw e;\n        }\n    }\n});\n\nWorkflowHost.prototype._enterLockForCreatedInstance = async(function* (insta, lockInfo) {\n    let li = yield (this._persistence.enterLock(specStrings.hosting.doubleKeys(insta.workflowName, insta.id), this.options.enterLockTimeout, this._getInLockTimeout()));\n    if (yield (this._persistence.isRunning(insta.workflowName, insta.id))) {\n        throw new errors.WorkflowError(\"Cannot create instance of workflow '\" + insta.workflowName + \"' by id '\" + insta.id + \"' because it's already exists.\");\n    }\n    lockInfo.id = li.id;\n    lockInfo.name = li.name;\n    lockInfo.heldTo = li.heldTo;\n});\n\nWorkflowHost.prototype._getInLockTimeout = function () {\n    return this.options.lockRenewalTimeout + Math.max(this.options.lockRenewalTimeout * 0.4, 3000);\n};\n\nWorkflowHost.prototype._verifyAndRestoreInstanceState = async(function* (instanceId, workflowName, methodName, args) {\n    let self = this;\n    let insta = null;\n    if (self._persistence) {\n        let header = yield (self._persistence.getRunningInstanceIdHeader(workflowName, instanceId));\n        if (header) {\n            insta = yield (self._restoreInstanceState(instanceId, workflowName, header.workflowVersion, header.updatedOn));\n        }\n    }\n    else {\n        insta = self._knownRunningInstances.get(workflowName, instanceId);\n    }\n    if (!insta) {\n        throw new errors.WorkflowNotFoundError(`Worflow (name: '${workflowName}', id: '${instanceId}') has been deleted since the lock has been taken.`);\n    }\n\n    return insta;\n});\n\nWorkflowHost.prototype._restoreInstanceState = async(function* (instanceId, workflowName, workflowVersion, actualTimestamp) {\n    let self = this;\n\n    if (!self._persistence) {\n        throw new Error(\"Cannot restore instance from persistence, because host has no persistence registered.\");\n    }\n\n    let insta = self._knownRunningInstances.get(workflowName, instanceId);\n    if (_.isUndefined(insta)) {\n        let wfDesc = self._registry.getDesc(workflowName, workflowVersion);\n        insta = self._createWFInstance();\n        insta.setWorkflow(wfDesc.execContext, workflowVersion, instanceId);\n    }\n\n    if (insta.updatedOn === null || insta.updatedOn.getTime() !== actualTimestamp.getTime() || self.options.alwaysLoadState) {\n        let state = yield (self._persistence.loadState(workflowName, instanceId));\n        insta.restoreState(state);\n        return insta;\n    }\n    else {\n        return insta;\n    }\n});\n\nWorkflowHost.prototype._checkIfInstanceRunning = async(function* (workflowName, instanceId) {\n    if (this._persistence) {\n        return (yield this._persistence.isRunning(workflowName, instanceId));\n    }\n    return this._knownRunningInstances.exists(workflowName, instanceId);\n});\n\nWorkflowHost.prototype._getRunningInstanceHeadersForOtherVersion = async(function* (workflowName, version) {\n    if (this._persistence) {\n        return (yield this._persistence.getRunningInstanceHeadersForOtherVersion(workflowName, version));\n    }\n    return this._knownRunningInstances.getRunningInstanceHeadersForOtherVersion(workflowName, version);\n});\n\nWorkflowHost.prototype.addTracker = function (tracker) {\n    this._verify();\n\n    if (!_.isObject(tracker)) {\n        throw new TypeError(\"Argument is not an object.\");\n    }\n    this._trackers.push(tracker);\n    this._knownRunningInstances.addTracker(tracker);\n};\n\n/* Wake Up*/\n\nWorkflowHost.prototype._continueWokeUpInstance = async(function*(wakeupable) {\n    if (this._shutdown) {\n        wakeupable.result.resolve();\n        return;\n    }\n    if (!this._persistence) {\n        wakeupable.result.reject(new errors.WorkflowError(\"Handling Delays in host is not supported without persistence.\"));\n        return;\n    }\n\n    assert(_.isPlainObject(wakeupable));\n    assert(_.isString(wakeupable.instanceId));\n    assert(_.isString(wakeupable.workflowName));\n    assert(_.isPlainObject(wakeupable.activeDelay));\n    assert(_.isString(wakeupable.activeDelay.methodName));\n    assert(_.isDate(wakeupable.activeDelay.delayTo));\n    assert(_.isFunction(wakeupable.result.resolve));\n    assert(_.isFunction(wakeupable.result.reject));\n\n    try {\n        //instanceId, workflowName, methodName, args\n        debug(\"Invoking DelayTo instanceId: %s, workflowName:%s, methodName: %s\", wakeupable.instanceId, wakeupable.workflowName, wakeupable.activeDelay.methodName);\n        let result = yield this._invokeMethodOnRunningInstance(wakeupable.instanceId, wakeupable.workflowName, wakeupable.activeDelay.methodName, [wakeupable.instanceId, wakeupable.activeDelay.delayTo]);\n        debug(\"DelayTo instanceId: %s, workflowName:%s, methodName: %s invoked.\", wakeupable.instanceId, wakeupable.workflowName, wakeupable.activeDelay.methodName);\n        wakeupable.result.resolve();\n    }\n    catch (e) {\n        if (e instanceof errors.MethodIsNotAccessibleError || e instanceof errors.WorkflowNotFoundError) {\n            debug(\"DelayTo's method is not accessible since it got selected for continuation.\");\n            wakeupable.result.resolve();\n            return;\n        }\n        debug(\"DelayTo instanceId: %s, workflowName:%s, methodName: %s error: %s\", wakeupable.instanceId, wakeupable.workflowName, wakeupable.activeDelay.methodName, e.stack);\n        wakeupable.result.reject(e);\n    }\n});\n\nWorkflowHost.prototype._createWFInstance = function () {\n    let self = this;\n    let insta = new WorkflowInstance(this);\n    insta.on(\n        enums.events.workflowEvent,\n        function (args) {\n            self.onWorkflowEvent(args);\n        });\n    return insta;\n};\n\nWorkflowHost.prototype._deleteWFInstance = function (insta) {\n    insta.removeAllListeners();\n    this._knownRunningInstances.remove(insta.workflowName, insta.id);\n};\n\n/* Shutdown */\n\nWorkflowHost.prototype._verify = function () {\n    if (this._shutdown) {\n        throw new errors.WorkflowError(\"Workflow host has been shut down.\");\n    }\n};\n\nWorkflowHost.prototype.shutdown = function () {\n    if (this._shutdown) {\n        return;\n    }\n    if (this._wakeUp) {\n        this._wakeUp.stop();\n    }\n    this._shutdown = true;\n    this.removeAllListeners();\n};\n\nmodule.exports = WorkflowHost;\n"],"sourceRoot":"/source/"}