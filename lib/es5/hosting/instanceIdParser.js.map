{"version":3,"names":[],"mappings":"","sources":["hosting/instanceIdParser.js"],"sourcesContent":["/* jshint -W054*/\n\"use strict\";\n\nlet _ = require(\"lodash\");\nlet is = require(\"../common/is\");\n\nfunction InstanceIdParser() {\n    this._cache = {};\n}\n\nInstanceIdParser.prototype.parse = function (path, obj) {\n    if (!obj) {\n        throw new Error(\"Argument 'obj' expected.\");\n    }\n    if (!_.isString(path)) {\n        throw new TypeError(\"Argument 'path' is not a string.\");\n    }\n\n    let parser = this._cache[path];\n    if (_.isUndefined(parser)) {\n        this._cache[path] = parser = this._createParser(path);\n    }\n\n    return parser.call(obj);\n};\n\nInstanceIdParser.prototype._createParser = function (path) {\n    if (path.indexOf(\"this\") !== 0) {\n        if (path[0] === \"[\") {\n            path = \"this\" + path;\n        }\n        else {\n            path = \"this.\" + path;\n        }\n    }\n\n    return new Function(\"return (\" + path + \").toString();\");\n};\n\nmodule.exports = InstanceIdParser;\n"],"file":"hosting/instanceIdParser.js","sourceRoot":"/source/"}