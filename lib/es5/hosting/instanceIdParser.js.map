{"version":3,"names":[],"mappings":"","sources":["hosting/instanceIdParser.js"],"sourcesContent":["/* jshint -W054*/\r\n\"use strict\";\r\n\r\nlet _ = require(\"lodash\");\r\nlet is = require(\"../common/is\");\r\n\r\nfunction InstanceIdParser() {\r\n    this._cache = {};\r\n}\r\n\r\nInstanceIdParser.prototype.parse = function (path, obj) {\r\n    if (!obj) {\r\n        throw new Error(\"Argument 'obj' expected.\");\r\n    }\r\n    if (!_.isString(path)) {\r\n        throw new TypeError(\"Argument 'path' is not a string.\");\r\n    }\r\n\r\n    let parser = this._cache[path];\r\n    if (_.isUndefined(parser)) {\r\n        this._cache[path] = parser = this._createParser(path);\r\n    }\r\n\r\n    return parser.call(obj);\r\n};\r\n\r\nInstanceIdParser.prototype._createParser = function (path) {\r\n    if (path.indexOf(\"this\") !== 0) {\r\n        if (path[0] === \"[\") {\r\n            path = \"this\" + path;\r\n        }\r\n        else {\r\n            path = \"this.\" + path;\r\n        }\r\n    }\r\n\r\n    return new Function(\"return (\" + path + \").toString();\");\r\n};\r\n\r\nmodule.exports = InstanceIdParser;\r\n"],"file":"hosting/instanceIdParser.js","sourceRoot":"/source/"}