"use strict";
var util = require("util");
var guids = require("./guids");
function ActivityStateExceptionError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(ActivityStateExceptionError, Error);
function Cancelled() {
  ActivityStateExceptionError.call(this, "Activity execution has been cancelled.");
}
util.inherits(Cancelled, ActivityStateExceptionError);
function Idle(message) {
  ActivityStateExceptionError.call(this, message || "Activity is idle.");
  this.__typeTag = guids.types.idleException;
}
util.inherits(Idle, ActivityStateExceptionError);
function AggregateError(errors) {
  ActivityStateExceptionError.call(this, "Many errors occurred.");
  this.errors = errors;
}
util.inherits(AggregateError, ActivityStateExceptionError);
function ActivityMarkupError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(ActivityMarkupError, Error);
function ActivityRuntimeError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(ActivityRuntimeError, Error);
function ValidationError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(ValidationError, Error);
function TimeoutError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(TimeoutError, Error);
function WorkflowError(message) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);
  this.message = message;
}
util.inherits(WorkflowError, Error);
module.exports.ActivityStateExceptionError = ActivityStateExceptionError;
module.exports.ActivityExceptionError = ActivityStateExceptionError;
module.exports.Cancelled = Cancelled;
module.exports.Idle = Idle;
module.exports.AggregateError = AggregateError;
module.exports.ActivityMarkupError = ActivityMarkupError;
module.exports.ActivityRuntimeError = ActivityRuntimeError;
module.exports.ValidationError = ValidationError;
module.exports.TimeoutError = TimeoutError;
module.exports.WorkflowError = WorkflowError;
//# sourceMappingURL=data:application/json;base64,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RyxRQUFRLEVBQUksUUFBTSxDQUFDO0FBQzFCO0FBQUEsQUFFQSxHQUFHLFNBQVMsQUFBQyxDQUFDLFlBQVcsQ0FBRyxNQUFJLENBQUMsQ0FBQztBQUVsQyxPQUFTLGNBQVksQ0FBRSxPQUFNLENBQUc7QUFDNUIsTUFBSSxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUNoQixNQUFJLGtCQUFrQixBQUFDLENBQUMsSUFBRyxDQUFHLENBQUEsSUFBRyxZQUFZLENBQUMsQ0FBQztBQUMvQyxLQUFHLFFBQVEsRUFBSSxRQUFNLENBQUM7QUFDMUI7QUFBQSxBQUVBLEdBQUcsU0FBUyxBQUFDLENBQUMsYUFBWSxDQUFHLE1BQUksQ0FBQyxDQUFDO0FBRW5DLEtBQUssUUFBUSw0QkFBNEIsRUFBSSw0QkFBMEIsQ0FBQztBQUN4RSxLQUFLLFFBQVEsdUJBQXVCLEVBQUksNEJBQTBCLENBQUM7QUFDbkUsS0FBSyxRQUFRLFVBQVUsRUFBSSxVQUFRLENBQUM7QUFDcEMsS0FBSyxRQUFRLEtBQUssRUFBSSxLQUFHLENBQUM7QUFDMUIsS0FBSyxRQUFRLGVBQWUsRUFBSSxlQUFhLENBQUM7QUFDOUMsS0FBSyxRQUFRLG9CQUFvQixFQUFJLG9CQUFrQixDQUFDO0FBQ3hELEtBQUssUUFBUSxxQkFBcUIsRUFBSSxxQkFBbUIsQ0FBQztBQUMxRCxLQUFLLFFBQVEsZ0JBQWdCLEVBQUksZ0JBQWMsQ0FBQztBQUNoRCxLQUFLLFFBQVEsYUFBYSxFQUFJLGFBQVcsQ0FBQztBQUMxQyxLQUFLLFFBQVEsY0FBYyxFQUFJLGNBQVksQ0FBQztBQUM1QyIsImZpbGUiOiJjb21tb24vZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IkM6L0dJVC93b3JrZmxvdy00LW5vZGUvbGliLyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XHJcbnZhciBndWlkcyA9IHJlcXVpcmUoXCIuL2d1aWRzXCIpO1xyXG5cclxuZnVuY3Rpb24gQWN0aXZpdHlTdGF0ZUV4Y2VwdGlvbkVycm9yKG1lc3NhZ2UpIHtcclxuICAgIEVycm9yLmNhbGwodGhpcyk7XHJcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcclxuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoQWN0aXZpdHlTdGF0ZUV4Y2VwdGlvbkVycm9yLCBFcnJvcik7XHJcblxyXG5mdW5jdGlvbiBDYW5jZWxsZWQoKSB7XHJcbiAgICBBY3Rpdml0eVN0YXRlRXhjZXB0aW9uRXJyb3IuY2FsbCh0aGlzLCBcIkFjdGl2aXR5IGV4ZWN1dGlvbiBoYXMgYmVlbiBjYW5jZWxsZWQuXCIpO1xyXG59XHJcblxyXG51dGlsLmluaGVyaXRzKENhbmNlbGxlZCwgQWN0aXZpdHlTdGF0ZUV4Y2VwdGlvbkVycm9yKTtcclxuXHJcbmZ1bmN0aW9uIElkbGUobWVzc2FnZSkge1xyXG4gICAgQWN0aXZpdHlTdGF0ZUV4Y2VwdGlvbkVycm9yLmNhbGwodGhpcywgbWVzc2FnZSB8fCBcIkFjdGl2aXR5IGlzIGlkbGUuXCIpO1xyXG4gICAgdGhpcy5fX3R5cGVUYWcgPSBndWlkcy50eXBlcy5pZGxlRXhjZXB0aW9uO1xyXG59XHJcblxyXG51dGlsLmluaGVyaXRzKElkbGUsIEFjdGl2aXR5U3RhdGVFeGNlcHRpb25FcnJvcik7XHJcblxyXG5mdW5jdGlvbiBBZ2dyZWdhdGVFcnJvcihlcnJvcnMpIHtcclxuICAgIEFjdGl2aXR5U3RhdGVFeGNlcHRpb25FcnJvci5jYWxsKHRoaXMsIFwiTWFueSBlcnJvcnMgb2NjdXJyZWQuXCIpO1xyXG4gICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoQWdncmVnYXRlRXJyb3IsIEFjdGl2aXR5U3RhdGVFeGNlcHRpb25FcnJvcik7XHJcblxyXG5mdW5jdGlvbiBBY3Rpdml0eU1hcmt1cEVycm9yKG1lc3NhZ2UpIHtcclxuICAgIEVycm9yLmNhbGwodGhpcyk7XHJcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcclxuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoQWN0aXZpdHlNYXJrdXBFcnJvciwgRXJyb3IpO1xyXG5cclxuZnVuY3Rpb24gQWN0aXZpdHlSdW50aW1lRXJyb3IobWVzc2FnZSkge1xyXG4gICAgRXJyb3IuY2FsbCh0aGlzKTtcclxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xyXG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxufVxyXG5cclxudXRpbC5pbmhlcml0cyhBY3Rpdml0eVJ1bnRpbWVFcnJvciwgRXJyb3IpO1xyXG5cclxuZnVuY3Rpb24gVmFsaWRhdGlvbkVycm9yKG1lc3NhZ2UpIHtcclxuICAgIEVycm9yLmNhbGwodGhpcyk7XHJcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcclxuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoVmFsaWRhdGlvbkVycm9yLCBFcnJvcik7XHJcblxyXG5mdW5jdGlvbiBUaW1lb3V0RXJyb3IobWVzc2FnZSkge1xyXG4gICAgRXJyb3IuY2FsbCh0aGlzKTtcclxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xyXG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxufVxyXG5cclxudXRpbC5pbmhlcml0cyhUaW1lb3V0RXJyb3IsIEVycm9yKTtcclxuXHJcbmZ1bmN0aW9uIFdvcmtmbG93RXJyb3IobWVzc2FnZSkge1xyXG4gICAgRXJyb3IuY2FsbCh0aGlzKTtcclxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xyXG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcclxufVxyXG5cclxudXRpbC5pbmhlcml0cyhXb3JrZmxvd0Vycm9yLCBFcnJvcik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cy5BY3Rpdml0eVN0YXRlRXhjZXB0aW9uRXJyb3IgPSBBY3Rpdml0eVN0YXRlRXhjZXB0aW9uRXJyb3I7XHJcbm1vZHVsZS5leHBvcnRzLkFjdGl2aXR5RXhjZXB0aW9uRXJyb3IgPSBBY3Rpdml0eVN0YXRlRXhjZXB0aW9uRXJyb3I7XHJcbm1vZHVsZS5leHBvcnRzLkNhbmNlbGxlZCA9IENhbmNlbGxlZDtcclxubW9kdWxlLmV4cG9ydHMuSWRsZSA9IElkbGU7XHJcbm1vZHVsZS5leHBvcnRzLkFnZ3JlZ2F0ZUVycm9yID0gQWdncmVnYXRlRXJyb3I7XHJcbm1vZHVsZS5leHBvcnRzLkFjdGl2aXR5TWFya3VwRXJyb3IgPSBBY3Rpdml0eU1hcmt1cEVycm9yO1xyXG5tb2R1bGUuZXhwb3J0cy5BY3Rpdml0eVJ1bnRpbWVFcnJvciA9IEFjdGl2aXR5UnVudGltZUVycm9yO1xyXG5tb2R1bGUuZXhwb3J0cy5WYWxpZGF0aW9uRXJyb3IgPSBWYWxpZGF0aW9uRXJyb3I7XHJcbm1vZHVsZS5leHBvcnRzLlRpbWVvdXRFcnJvciA9IFRpbWVvdXRFcnJvcjtcclxubW9kdWxlLmV4cG9ydHMuV29ya2Zsb3dFcnJvciA9IFdvcmtmbG93RXJyb3I7XHJcbiJdfQ==
