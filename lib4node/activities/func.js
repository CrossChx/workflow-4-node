"use strict";
var Activity = require("./activity");
var util = require("util");
var _ = require("lodash");
var errors = require("../common/errors");
var fast = require("fast.js");
var guids = require('../common/guids');
function Func() {
  Activity.call(this);
  this.code = null;
  this.codeProperties.add('code');
}
util.inherits(Func, Activity);
Func.prototype.run = function(callContext, args) {
  if (typeof this.get("code") != "function") {
    callContext.fail(new errors.ValidationError("Func activity's property 'code' is not a function."));
    return ;
  }
  callContext.schedule(args, "_argsGot");
};
Func.prototype._argsGot = function(callContext, reason, result) {
  var self = this;
  if (reason === Activity.states.complete) {
    var e = fast.try(function() {
      var fResult = self.get("code").apply(self, result || []);
      if (_.isObject(fResult) && _.isFunction(fResult["then"])) {
        fResult.then(function(v) {
          callContext.complete(v);
        }, function(e) {
          callContext.fail(v);
        });
      } else {
        callContext.complete(fResult);
      }
    });
    if (e instanceof Error) {
      callContext.fail(e);
    }
  } else {
    callContext.end(reason, result);
  }
};
module.exports = Func;
//# sourceMappingURL=data:application/json;base64,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QUFBQSxBQUNKLENBQUE7QUFFQSxLQUFLLFFBQVEsRUFBSSxLQUFHLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL2Z1bmMuanMiLCJzb3VyY2VSb290IjoiQzovR0lUL21vbmdvLWNydW5jaC9kZXBzL3dvcmtmbG93LTQtbm9kZS9saWIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEFjdGl2aXR5ID0gcmVxdWlyZShcIi4vYWN0aXZpdHlcIik7XHJcbnZhciB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XHJcbnZhciBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcclxudmFyIGVycm9ycyA9IHJlcXVpcmUoXCIuLi9jb21tb24vZXJyb3JzXCIpO1xyXG52YXIgZmFzdCA9IHJlcXVpcmUoXCJmYXN0LmpzXCIpO1xyXG52YXIgZ3VpZHMgPSByZXF1aXJlKCcuLi9jb21tb24vZ3VpZHMnKTtcclxuXHJcbmZ1bmN0aW9uIEZ1bmMoKSB7XHJcbiAgICBBY3Rpdml0eS5jYWxsKHRoaXMpO1xyXG4gICAgdGhpcy5jb2RlID0gbnVsbDtcclxuICAgIHRoaXMuY29kZVByb3BlcnRpZXMuYWRkKCdjb2RlJyk7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoRnVuYywgQWN0aXZpdHkpO1xyXG5cclxuRnVuYy5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XHJcbiAgICBpZiAodHlwZW9mIHRoaXMuZ2V0KFwiY29kZVwiKSAhPSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBjYWxsQ29udGV4dC5mYWlsKG5ldyBlcnJvcnMuVmFsaWRhdGlvbkVycm9yKFwiRnVuYyBhY3Rpdml0eSdzIHByb3BlcnR5ICdjb2RlJyBpcyBub3QgYSBmdW5jdGlvbi5cIikpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjYWxsQ29udGV4dC5zY2hlZHVsZShhcmdzLCBcIl9hcmdzR290XCIpO1xyXG59XHJcblxyXG5GdW5jLnByb3RvdHlwZS5fYXJnc0dvdCA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgcmVhc29uLCByZXN1bHQpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGlmIChyZWFzb24gPT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xyXG4gICAgICAgIHZhciBlID0gZmFzdC50cnkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZlJlc3VsdCA9IHNlbGYuZ2V0KFwiY29kZVwiKS5hcHBseShzZWxmLCByZXN1bHQgfHwgW10pO1xyXG4gICAgICAgICAgICBpZiAoXy5pc09iamVjdChmUmVzdWx0KSAmJiBfLmlzRnVuY3Rpb24oZlJlc3VsdFtcInRoZW5cIl0pKSB7XHJcbiAgICAgICAgICAgICAgICBmUmVzdWx0LnRoZW4oXHJcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUodik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsQ29udGV4dC5mYWlsKHYpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUoZlJlc3VsdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBFcnJvcikge1xyXG4gICAgICAgICAgICBjYWxsQ29udGV4dC5mYWlsKGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGNhbGxDb250ZXh0LmVuZChyZWFzb24sIHJlc3VsdCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRnVuYzsiXX0=
