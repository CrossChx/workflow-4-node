"use strict";
var Activity = require("./activity");
var util = require("util");
var errors = require("../common/errors");
function ResumeBookmark() {
  Activity.call(this);
  this.bookmarkName = "";
  this.reason = Activity.states.complete;
  this.mustExists = true;
}
ResumeBookmark.validReasons = [Activity.states.complete, Activity.states.fail, Activity.states.cancel];
util.inherits(ResumeBookmark, Activity);
ResumeBookmark.prototype.run = function(callContext, args) {
  var bookmarkName = this.get("bookmarkName");
  var reason = this.get("reason");
  if (!bookmarkName)
    callContext.fail(new errors.ValidationError("Bookmark name expected."));
  if (ResumeBookmark.validReasons.indexOf(reason) === -1)
    callContext.fail(new errors.ValidationError("Reason value '" + reason + "' is not valid."));
  var result = false;
  if (this.get("mustExists")) {
    callContext.resumeBookmark(bookmarkName, reason, args);
    result = true;
  } else {
    if (callContext.executionContext.isBookmarkExists(bookmarkName)) {
      callContext.resumeBookmark(bookmarkName, reason, args);
      result = true;
    }
  }
  callContext.complete(result);
};
module.exports = ResumeBookmark;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3VtZUJvb2ttYXJrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsa0JBQWlCLENBQUMsQ0FBQztBQUV4QyxPQUFTLGVBQWEsQ0FBRSxBQUFELENBQUc7QUFDdEIsU0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUNuQixLQUFHLGFBQWEsRUFBSSxHQUFDLENBQUM7QUFDdEIsS0FBRyxPQUFPLEVBQUksQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFDO0FBQ3RDLEtBQUcsV0FBVyxFQUFJLEtBQUcsQ0FBQztBQUMxQjtBQUFBLEFBRUEsYUFBYSxhQUFhLEVBQUksRUFBQyxRQUFPLE9BQU8sU0FBUyxDQUFHLENBQUEsUUFBTyxPQUFPLEtBQUssQ0FBRyxDQUFBLFFBQU8sT0FBTyxPQUFPLENBQUMsQ0FBQztBQUV0RyxHQUFHLFNBQVMsQUFBQyxDQUFDLGNBQWEsQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUV2QyxhQUFhLFVBQVUsSUFBSSxFQUFJLFVBQVUsV0FBVSxDQUFHLENBQUEsSUFBRyxDQUFHO0FBQ3hELEFBQUksSUFBQSxDQUFBLFlBQVcsRUFBSSxDQUFBLElBQUcsSUFBSSxBQUFDLENBQUMsY0FBYSxDQUFDLENBQUM7QUFDM0MsQUFBSSxJQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsSUFBRyxJQUFJLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUUvQixLQUFJLENBQUMsWUFBVztBQUFHLGNBQVUsS0FBSyxBQUFDLENBQUMsR0FBSSxDQUFBLE1BQUssZ0JBQWdCLEFBQUMsQ0FBQyx5QkFBd0IsQ0FBQyxDQUFDLENBQUM7QUFBQSxBQUMxRixLQUFJLGNBQWEsYUFBYSxRQUFRLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQSxHQUFNLEVBQUMsQ0FBQTtBQUFHLGNBQVUsS0FBSyxBQUFDLENBQUMsR0FBSSxDQUFBLE1BQUssZ0JBQWdCLEFBQUMsQ0FBQyxnQkFBZSxFQUFJLE9BQUssQ0FBQSxDQUFJLGtCQUFnQixDQUFDLENBQUMsQ0FBQztBQUFBLEFBRS9JLElBQUEsQ0FBQSxNQUFLLEVBQUksTUFBSSxDQUFDO0FBQ2xCLEtBQUksSUFBRyxJQUFJLEFBQUMsQ0FBQyxZQUFXLENBQUMsQ0FBRztBQUN4QixjQUFVLGVBQWUsQUFBQyxDQUFDLFlBQVcsQ0FBRyxPQUFLLENBQUcsS0FBRyxDQUFDLENBQUM7QUFDdEQsU0FBSyxFQUFJLEtBQUcsQ0FBQztFQUNqQixLQUNLO0FBQ0QsT0FBSSxXQUFVLGlCQUFpQixpQkFBaUIsQUFBQyxDQUFDLFlBQVcsQ0FBQyxDQUFHO0FBQzdELGdCQUFVLGVBQWUsQUFBQyxDQUFDLFlBQVcsQ0FBRyxPQUFLLENBQUcsS0FBRyxDQUFDLENBQUM7QUFDdEQsV0FBSyxFQUFJLEtBQUcsQ0FBQztJQUNqQjtBQUFBLEVBQ0o7QUFBQSxBQUVBLFlBQVUsU0FBUyxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDaEMsQ0FBQTtBQUVBLEtBQUssUUFBUSxFQUFJLGVBQWEsQ0FBQztBQUMvQiIsImZpbGUiOiJhY3Rpdml0aWVzL3Jlc3VtZUJvb2ttYXJrLmpzIiwic291cmNlUm9vdCI6IkM6L0dJVC9tb25nby1jcnVuY2gvZGVwcy93b3JrZmxvdy00LW5vZGUvbGliLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuL2FjdGl2aXR5XCIpO1xyXG52YXIgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xyXG52YXIgZXJyb3JzID0gcmVxdWlyZShcIi4uL2NvbW1vbi9lcnJvcnNcIik7XHJcblxyXG5mdW5jdGlvbiBSZXN1bWVCb29rbWFyaygpIHtcclxuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XHJcbiAgICB0aGlzLmJvb2ttYXJrTmFtZSA9IFwiXCI7XHJcbiAgICB0aGlzLnJlYXNvbiA9IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZTtcclxuICAgIHRoaXMubXVzdEV4aXN0cyA9IHRydWU7XHJcbn1cclxuXHJcblJlc3VtZUJvb2ttYXJrLnZhbGlkUmVhc29ucyA9IFtBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUsIEFjdGl2aXR5LnN0YXRlcy5mYWlsLCBBY3Rpdml0eS5zdGF0ZXMuY2FuY2VsXTtcclxuXHJcbnV0aWwuaW5oZXJpdHMoUmVzdW1lQm9va21hcmssIEFjdGl2aXR5KTtcclxuXHJcblJlc3VtZUJvb2ttYXJrLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIGFyZ3MpIHtcclxuICAgIHZhciBib29rbWFya05hbWUgPSB0aGlzLmdldChcImJvb2ttYXJrTmFtZVwiKTtcclxuICAgIHZhciByZWFzb24gPSB0aGlzLmdldChcInJlYXNvblwiKTtcclxuXHJcbiAgICBpZiAoIWJvb2ttYXJrTmFtZSkgY2FsbENvbnRleHQuZmFpbChuZXcgZXJyb3JzLlZhbGlkYXRpb25FcnJvcihcIkJvb2ttYXJrIG5hbWUgZXhwZWN0ZWQuXCIpKTtcclxuICAgIGlmIChSZXN1bWVCb29rbWFyay52YWxpZFJlYXNvbnMuaW5kZXhPZihyZWFzb24pID09PSAtMSkgY2FsbENvbnRleHQuZmFpbChuZXcgZXJyb3JzLlZhbGlkYXRpb25FcnJvcihcIlJlYXNvbiB2YWx1ZSAnXCIgKyByZWFzb24gKyBcIicgaXMgbm90IHZhbGlkLlwiKSk7XHJcblxyXG4gICAgdmFyIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgaWYgKHRoaXMuZ2V0KFwibXVzdEV4aXN0c1wiKSkge1xyXG4gICAgICAgIGNhbGxDb250ZXh0LnJlc3VtZUJvb2ttYXJrKGJvb2ttYXJrTmFtZSwgcmVhc29uLCBhcmdzKTtcclxuICAgICAgICByZXN1bHQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgaWYgKGNhbGxDb250ZXh0LmV4ZWN1dGlvbkNvbnRleHQuaXNCb29rbWFya0V4aXN0cyhib29rbWFya05hbWUpKSB7XHJcbiAgICAgICAgICAgIGNhbGxDb250ZXh0LnJlc3VtZUJvb2ttYXJrKGJvb2ttYXJrTmFtZSwgcmVhc29uLCBhcmdzKTtcclxuICAgICAgICAgICAgcmVzdWx0ID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2FsbENvbnRleHQuY29tcGxldGUocmVzdWx0KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bWVCb29rbWFyaztcclxuIl19
